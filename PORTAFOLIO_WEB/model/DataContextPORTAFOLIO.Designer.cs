//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 30-11-2016 4:23:50
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace PORTAFOLIOContext
{

    [DatabaseAttribute(Name = "PORTAFOLIO10")]
    [ProviderAttribute(typeof(Devart.Data.Oracle.Linq.Provider.OracleDataProvider))]
    public partial class PORTAFOLIODataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(PORTAFOLIODataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertAPEXWSTAG(APEXWSTAG instance);
        partial void UpdateAPEXWSTAG(APEXWSTAG instance);
        partial void DeleteAPEXWSTAG(APEXWSTAG instance);
        partial void InsertAPEXWSFILE(APEXWSFILE instance);
        partial void UpdateAPEXWSFILE(APEXWSFILE instance);
        partial void DeleteAPEXWSFILE(APEXWSFILE instance);
        partial void InsertCOMUNA(COMUNA instance);
        partial void UpdateCOMUNA(COMUNA instance);
        partial void DeleteCOMUNA(COMUNA instance);
        partial void InsertDOCUMENTO(DOCUMENTO instance);
        partial void UpdateDOCUMENTO(DOCUMENTO instance);
        partial void DeleteDOCUMENTO(DOCUMENTO instance);
        partial void InsertGEOLOC(GEOLOC instance);
        partial void UpdateGEOLOC(GEOLOC instance);
        partial void DeleteGEOLOC(GEOLOC instance);
        partial void InsertPRODUCTO(PRODUCTO instance);
        partial void UpdatePRODUCTO(PRODUCTO instance);
        partial void DeletePRODUCTO(PRODUCTO instance);
        partial void InsertPROVINCIA(PROVINCIA instance);
        partial void UpdatePROVINCIA(PROVINCIA instance);
        partial void DeletePROVINCIA(PROVINCIA instance);
        partial void InsertREGION(REGION instance);
        partial void UpdateREGION(REGION instance);
        partial void DeleteREGION(REGION instance);
        partial void InsertUBICACION(UBICACION instance);
        partial void UpdateUBICACION(UBICACION instance);
        partial void DeleteUBICACION(UBICACION instance);
        partial void InsertUSUARIO(USUARIO instance);
        partial void UpdateUSUARIO(USUARIO instance);
        partial void DeleteUSUARIO(USUARIO instance);
        partial void InsertDETALLEDOC(DETALLEDOC instance);
        partial void UpdateDETALLEDOC(DETALLEDOC instance);
        partial void DeleteDETALLEDOC(DETALLEDOC instance);
        partial void InsertPRODUCTOPRODUCTOR(PRODUCTOPRODUCTOR instance);
        partial void UpdatePRODUCTOPRODUCTOR(PRODUCTOPRODUCTOR instance);
        partial void DeletePRODUCTOPRODUCTOR(PRODUCTOPRODUCTOR instance);
        partial void InsertDEPT(DEPT instance);
        partial void UpdateDEPT(DEPT instance);
        partial void DeleteDEPT(DEPT instance);
        partial void InsertEMP(EMP instance);
        partial void UpdateEMP(EMP instance);
        partial void DeleteEMP(EMP instance);
        partial void InsertDEMOUSER(DEMOUSER instance);
        partial void UpdateDEMOUSER(DEMOUSER instance);
        partial void DeleteDEMOUSER(DEMOUSER instance);
        partial void InsertDEMOCUSTOMER(DEMOCUSTOMER instance);
        partial void UpdateDEMOCUSTOMER(DEMOCUSTOMER instance);
        partial void DeleteDEMOCUSTOMER(DEMOCUSTOMER instance);
        partial void InsertDEMOORDER(DEMOORDER instance);
        partial void UpdateDEMOORDER(DEMOORDER instance);
        partial void DeleteDEMOORDER(DEMOORDER instance);
        partial void InsertDEMOPRODUCTINFO(DEMOPRODUCTINFO instance);
        partial void UpdateDEMOPRODUCTINFO(DEMOPRODUCTINFO instance);
        partial void DeleteDEMOPRODUCTINFO(DEMOPRODUCTINFO instance);
        partial void InsertDEMOORDERITEM(DEMOORDERITEM instance);
        partial void UpdateDEMOORDERITEM(DEMOORDERITEM instance);
        partial void DeleteDEMOORDERITEM(DEMOORDERITEM instance);
        partial void InsertAPEXACL(APEXACL instance);
        partial void UpdateAPEXACL(APEXACL instance);
        partial void DeleteAPEXACL(APEXACL instance);
        partial void InsertAPEXWSWEBPGSECTION(APEXWSWEBPGSECTION instance);
        partial void UpdateAPEXWSWEBPGSECTION(APEXWSWEBPGSECTION instance);
        partial void DeleteAPEXWSWEBPGSECTION(APEXWSWEBPGSECTION instance);
        partial void InsertAPEXWSROW(APEXWSROW instance);
        partial void UpdateAPEXWSROW(APEXWSROW instance);
        partial void DeleteAPEXWSROW(APEXWSROW instance);
        partial void InsertAPEXWSNOTE(APEXWSNOTE instance);
        partial void UpdateAPEXWSNOTE(APEXWSNOTE instance);
        partial void DeleteAPEXWSNOTE(APEXWSNOTE instance);
        partial void InsertAPEXWSLINK(APEXWSLINK instance);
        partial void UpdateAPEXWSLINK(APEXWSLINK instance);
        partial void DeleteAPEXWSLINK(APEXWSLINK instance);

        #endregion

        public PORTAFOLIODataContext() :
        base(GetConnectionString("PORTAFOLIODataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public PORTAFOLIODataContext(MappingSource mappingSource) :
        base(GetConnectionString("PORTAFOLIODataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public PORTAFOLIODataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public PORTAFOLIODataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public PORTAFOLIODataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public PORTAFOLIODataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<APEXWSTAG> APEXWSTAGs
        {
            get
            {
                return this.GetTable<APEXWSTAG>();
            }
        }

        public Devart.Data.Linq.Table<APEXWSFILE> APEXWSFILEs
        {
            get
            {
                return this.GetTable<APEXWSFILE>();
            }
        }

        public Devart.Data.Linq.Table<APEXWSWEBPGSECTIONHISTORY> APEXWSWEBPGSECTIONHISTORIES
        {
            get
            {
                return this.GetTable<APEXWSWEBPGSECTIONHISTORY>();
            }
        }

        public Devart.Data.Linq.Table<COMUNA> COMUNAs
        {
            get
            {
                return this.GetTable<COMUNA>();
            }
        }

        public Devart.Data.Linq.Table<DOCUMENTO> DOCUMENTOs
        {
            get
            {
                return this.GetTable<DOCUMENTO>();
            }
        }

        public Devart.Data.Linq.Table<GEOLOC> GEOLOCs
        {
            get
            {
                return this.GetTable<GEOLOC>();
            }
        }

        public Devart.Data.Linq.Table<PRODUCTO> PRODUCTOs
        {
            get
            {
                return this.GetTable<PRODUCTO>();
            }
        }

        public Devart.Data.Linq.Table<PROVINCIA> PROVINCIAs
        {
            get
            {
                return this.GetTable<PROVINCIA>();
            }
        }

        public Devart.Data.Linq.Table<REGION> REGIONs
        {
            get
            {
                return this.GetTable<REGION>();
            }
        }

        public Devart.Data.Linq.Table<UBICACION> UBICACIONs
        {
            get
            {
                return this.GetTable<UBICACION>();
            }
        }

        public Devart.Data.Linq.Table<USUARIO> USUARIOs
        {
            get
            {
                return this.GetTable<USUARIO>();
            }
        }

        public Devart.Data.Linq.Table<DETALLEDOC> DETALLEDOCs
        {
            get
            {
                return this.GetTable<DETALLEDOC>();
            }
        }

        public Devart.Data.Linq.Table<PRODUCTOPRODUCTOR> PRODUCTOPRODUCTORs
        {
            get
            {
                return this.GetTable<PRODUCTOPRODUCTOR>();
            }
        }

        public Devart.Data.Linq.Table<DEPT> DEPTs
        {
            get
            {
                return this.GetTable<DEPT>();
            }
        }

        public Devart.Data.Linq.Table<EMP> EMPs
        {
            get
            {
                return this.GetTable<EMP>();
            }
        }

        public Devart.Data.Linq.Table<DEMOUSER> DEMOUSERs
        {
            get
            {
                return this.GetTable<DEMOUSER>();
            }
        }

        public Devart.Data.Linq.Table<DEMOCUSTOMER> DEMOCUSTOMERs
        {
            get
            {
                return this.GetTable<DEMOCUSTOMER>();
            }
        }

        public Devart.Data.Linq.Table<DEMOORDER> DEMOORDERs
        {
            get
            {
                return this.GetTable<DEMOORDER>();
            }
        }

        public Devart.Data.Linq.Table<DEMOPRODUCTINFO> DEMOPRODUCTINFOs
        {
            get
            {
                return this.GetTable<DEMOPRODUCTINFO>();
            }
        }

        public Devart.Data.Linq.Table<DEMOORDERITEM> DEMOORDERITEMs
        {
            get
            {
                return this.GetTable<DEMOORDERITEM>();
            }
        }

        public Devart.Data.Linq.Table<DEMOSTATE> DEMOSTATEs
        {
            get
            {
                return this.GetTable<DEMOSTATE>();
            }
        }

        public Devart.Data.Linq.Table<APEXACL> APEXACLs
        {
            get
            {
                return this.GetTable<APEXACL>();
            }
        }

        public Devart.Data.Linq.Table<APEXWSWEBPGSECTION> APEXWSWEBPGSECTIONs
        {
            get
            {
                return this.GetTable<APEXWSWEBPGSECTION>();
            }
        }

        public Devart.Data.Linq.Table<APEXWSROW> APEXWSROWs
        {
            get
            {
                return this.GetTable<APEXWSROW>();
            }
        }

        public Devart.Data.Linq.Table<APEXWSHISTORY> APEXWSHISTORIES
        {
            get
            {
                return this.GetTable<APEXWSHISTORY>();
            }
        }

        public Devart.Data.Linq.Table<APEXWSNOTE> APEXWSNOTEs
        {
            get
            {
                return this.GetTable<APEXWSNOTE>();
            }
        }

        public Devart.Data.Linq.Table<APEXWSLINK> APEXWSLINKs
        {
            get
            {
                return this.GetTable<APEXWSLINK>();
            }
        }

    
        /// <summary>
        /// There are no comments for INSERTDETALLEDOC in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.INSERTDETALLEDOC")]
        public void INSERTDETALLEDOC([Parameter(Name="CANTIDAD", DbType="NUMBER(38)")] System.Nullable<decimal> CANTIDAD, [Parameter(Name="VALORPROD", DbType="NUMBER(38)")] System.Nullable<decimal> VALORPROD, [Parameter(Name="SUBTOTAL", DbType="NUMBER(38)")] System.Nullable<decimal> SUBTOTAL, [Parameter(Name="DOCUMENTO", DbType="NUMBER(38)")] System.Nullable<decimal> DOCUMENTO, [Parameter(Name="PRODUCTO", DbType="NUMBER(38)")] System.Nullable<decimal> PRODUCTO, [Parameter(Name="USUARIO", DbType="NUMBER(38)")] System.Nullable<decimal> USUARIO)
        {
            IExecuteResult _INSERTDETALLEDOCResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CANTIDAD, VALORPROD, SUBTOTAL, DOCUMENTO, PRODUCTO, USUARIO);
        }

    
        /// <summary>
        /// There are no comments for INSERTUSUARIO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.INSERTUSUARIO")]
        public void INSERTUSUARIO([Parameter(Name="RUT", DbType="VARCHAR2(15 CHAR)")] string RUT, [Parameter(Name="NOMBRE", DbType="VARCHAR2(50 CHAR)")] string NOMBRE, [Parameter(Name="APELLIDOPA", DbType="VARCHAR2(50 CHAR)")] string APELLIDOPA, [Parameter(Name="APELLIDOMA", DbType="VARCHAR2(50 CHAR)")] string APELLIDOMA, [Parameter(Name="CORREO", DbType="VARCHAR2(150 CHAR)")] string CORREO, [Parameter(Name="TELEFONO", DbType="NUMBER(38)")] System.Nullable<decimal> TELEFONO, [Parameter(Name="CLAVE", DbType="VARCHAR2(25 CHAR)")] string CLAVE, [Parameter(Name="TIPO", DbType="NUMBER(38)")] System.Nullable<decimal> TIPO, [Parameter(Name="ESTADO", DbType="CHAR(1)")] string ESTADO)
        {
            IExecuteResult _INSERTUSUARIOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUT, NOMBRE, APELLIDOPA, APELLIDOMA, CORREO, TELEFONO, CLAVE, TIPO, ESTADO);
        }

    
        /// <summary>
        /// There are no comments for INSERTDOCUMENTO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.INSERTDOCUMENTO")]
        public void INSERTDOCUMENTO([Parameter(Name="VALOR", DbType="NUMBER(38)")] System.Nullable<decimal> VALOR, [Parameter(Name="FECHA", DbType="DATE")] System.Nullable<System.DateTime> FECHA, [Parameter(Name="TIPO", DbType="NUMBER(38)")] System.Nullable<decimal> TIPO, [Parameter(Name="USUARIO", DbType="NUMBER(38)")] System.Nullable<decimal> USUARIO, [Parameter(Name="ESTADO", DbType="CHAR(1)")] string ESTADO)
        {
            IExecuteResult _INSERTDOCUMENTOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), VALOR, FECHA, TIPO, USUARIO, ESTADO);
        }

    
        /// <summary>
        /// There are no comments for INSERTPRODUCTOPRODUCTOR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.INSERTPRODUCTOPRODUCTOR")]
        public void INSERTPRODUCTOPRODUCTOR([Parameter(Name="STOCK", DbType="NUMBER(38)")] System.Nullable<decimal> STOCK, [Parameter(Name="ESTADO", DbType="CHAR(1)")] string ESTADO, [Parameter(Name="IDUSUARIO", DbType="NUMBER(38)")] System.Nullable<decimal> IDUSUARIO, [Parameter(Name="IDPRODUCTO", DbType="NUMBER(38)")] System.Nullable<decimal> IDPRODUCTO)
        {
            IExecuteResult _INSERTPRODUCTOPRODUCTORResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), STOCK, ESTADO, IDUSUARIO, IDPRODUCTO);
        }

    
        /// <summary>
        /// There are no comments for SELECTUSUARIO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTUSUARIO")]
        public void SELECTUSUARIO()
        {
            IExecuteResult _SELECTUSUARIOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for SELECTVENDEDOR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTVENDEDOR")]
        public void SELECTVENDEDOR()
        {
            IExecuteResult _SELECTVENDEDORResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for INSERTUBICACION in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.INSERTUBICACION")]
        public void INSERTUBICACION([Parameter(Name="NOMBRE", DbType="VARCHAR2(25 CHAR)")] string NOMBRE, [Parameter(Name="DESCRIPCION", DbType="VARCHAR2(250 CHAR)")] string DESCRIPCION, [Parameter(Name="DIRECCION", DbType="VARCHAR2(250 CHAR)")] string DIRECCION, [Parameter(Name="ESTADO", DbType="CHAR(1)")] string ESTADO, [Parameter(Name="IDUSUARIO", DbType="NUMBER(38)")] System.Nullable<decimal> IDUSUARIO, [Parameter(Name="IDCOMUNA", DbType="NUMBER(38)")] System.Nullable<decimal> IDCOMUNA)
        {
            IExecuteResult _INSERTUBICACIONResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NOMBRE, DESCRIPCION, DIRECCION, ESTADO, IDUSUARIO, IDCOMUNA);
        }

    
        /// <summary>
        /// There are no comments for BUSCAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR")]
        public void BUSCAR()
        {
            IExecuteResult _BUSCARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for SELECTFINAL in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL")]
        public void SELECTFINAL()
        {
            IExecuteResult _SELECTFINALResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for CUSTOMAUTH in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.CUSTOM_AUTH", IsComposable=true)]
        public System.Nullable<System.Boolean> CUSTOMAUTH([Parameter(Name="P_USERNAME", DbType="VARCHAR2(4000 CHAR)")] string P_USERNAME, [Parameter(Name="P_PASSWORD", DbType="VARCHAR2(4000 CHAR)")] string P_PASSWORD)
        {
            IExecuteResult _CUSTOMAUTHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), P_USERNAME, P_PASSWORD);
            return ((System.Nullable<System.Boolean>)(_CUSTOMAUTHResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CUSTOMHASH in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.CUSTOM_HASH", IsComposable=true)]
        public System.String CUSTOMHASH([Parameter(Name="P_USERNAME", DbType="VARCHAR2(4000 CHAR)")] string P_USERNAME, [Parameter(Name="P_PASSWORD", DbType="VARCHAR2(4000 CHAR)")] string P_PASSWORD)
        {
            IExecuteResult _CUSTOMHASHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), P_USERNAME, P_PASSWORD);
            return ((System.String)(_CUSTOMHASHResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTVENDEDOR.SELECTPRODUCTORES")]
        public void SELECTPRODUCTORE()
        {
            IExecuteResult _SELECTPRODUCTOREResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for SELETBOLETA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTVENDEDOR.SELETBOLETAS")]
        public void SELETBOLETA([Parameter(Name="IDUSUARIO", DbType="NUMBER")] System.Nullable<decimal> IDUSUARIO)
        {
            IExecuteResult _SELETBOLETAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUSUARIO);
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORPORPRODUCTO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTVENDEDOR.SELECTPRODUCTORPORPRODUCTO")]
        public void SELECTPRODUCTORPORPRODUCTO([Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD)
        {
            IExecuteResult _SELECTPRODUCTORPORPRODUCTOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROD);
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTOPORPRODUCTOR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTVENDEDOR.SELECTPRODUCTOPORPRODUCTOR")]
        public void SELECTPRODUCTOPORPRODUCTOR([Parameter(Name="IDPRODUCTOR", DbType="NUMBER")] System.Nullable<decimal> IDPRODUCTOR)
        {
            IExecuteResult _SELECTPRODUCTOPORPRODUCTORResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPRODUCTOR);
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTVENDEDOR.SELECTPRODUCTOS")]
        public void SELECTPRODUCTO()
        {
            IExecuteResult _SELECTPRODUCTOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for SELECTDETALLEBOLETA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTVENDEDOR.SELECTDETALLEBOLETA")]
        public void SELECTDETALLEBOLETA([Parameter(Name="IDBOLETA", DbType="NUMBER")] System.Nullable<decimal> IDBOLETA)
        {
            IExecuteResult _SELECTDETALLEBOLETAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDBOLETA);
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTOPORPRODUCTOR1 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTUSUARIO.SELECTPRODUCTOPORPRODUCTOR")]
        public void SELECTPRODUCTOPORPRODUCTOR1([Parameter(Name="IDPRODUCTOR", DbType="NUMBER")] System.Nullable<decimal> IDPRODUCTOR)
        {
            IExecuteResult _SELECTPRODUCTOPORPRODUCTOR1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPRODUCTOR);
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORE1 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTUSUARIO.SELECTPRODUCTORES")]
        public void SELECTPRODUCTORE1()
        {
            IExecuteResult _SELECTPRODUCTORE1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTO1 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTUSUARIO.SELECTPRODUCTOS")]
        public void SELECTPRODUCTO1()
        {
            IExecuteResult _SELECTPRODUCTO1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORPORPRODUCTO1 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTUSUARIO.SELECTPRODUCTORPORPRODUCTO")]
        public void SELECTPRODUCTORPORPRODUCTO1([Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD)
        {
            IExecuteResult _SELECTPRODUCTORPORPRODUCTO1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROD);
        }

    
        /// <summary>
        /// There are no comments for SELECTDETALLEBOLETA1 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTUSUARIO.SELECTDETALLEBOLETA")]
        public void SELECTDETALLEBOLETA1([Parameter(Name="IDBOLETA", DbType="NUMBER")] System.Nullable<decimal> IDBOLETA)
        {
            IExecuteResult _SELECTDETALLEBOLETA1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDBOLETA);
        }

    
        /// <summary>
        /// There are no comments for SELETBOLETA1 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTUSUARIO.SELETBOLETAS")]
        public void SELETBOLETA1([Parameter(Name="IDUSUARIO", DbType="NUMBER")] System.Nullable<decimal> IDUSUARIO)
        {
            IExecuteResult _SELETBOLETA1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUSUARIO);
        }

    
        /// <summary>
        /// There are no comments for STOCKSUMAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.STOCKSUMAR")]
        public void STOCKSUMAR([Parameter(Name="CODSTOCK", DbType="NUMBER")] System.Nullable<decimal> CODSTOCK, [Parameter(Name="CANTIDAD", DbType="NUMBER")] System.Nullable<decimal> CANTIDAD)
        {
            IExecuteResult _STOCKSUMARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODSTOCK, CANTIDAD);
        }

    
        /// <summary>
        /// There are no comments for STOCKELIMINAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.STOCKELIMINAR")]
        public void STOCKELIMINAR([Parameter(Name="CODSTOCK", DbType="NUMBER")] System.Nullable<decimal> CODSTOCK)
        {
            IExecuteResult _STOCKELIMINARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODSTOCK);
        }

    
        /// <summary>
        /// There are no comments for SELECTSUMARSTOCK in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTSUMARSTOCK")]
        public Devart.Data.Linq.ISingleResult<SELECTSUMARSTOCKResult> SELECTSUMARSTOCK([Parameter(Name="IDSTOCK", DbType="NUMBER")] System.Nullable<decimal> IDSTOCK)
        {
            IExecuteResult _SELECTSUMARSTOCKResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDSTOCK);
            return ((Devart.Data.Linq.ISingleResult<SELECTSUMARSTOCKResult>)(_SELECTSUMARSTOCKResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTOSADMCOD in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTOSADMCOD")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTOSADMCODResult> SELECTPRODUCTOSADMCOD([Parameter(Name="CODPROD", DbType="NUMBER")] System.Nullable<decimal> CODPROD)
        {
            IExecuteResult _SELECTPRODUCTOSADMCODResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPROD);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTOSADMCODResult>)(_SELECTPRODUCTOSADMCODResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORPORPRODCOM in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORPORPRODCOM")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORPORPRODCOMResult> SELECTPRODUCTORPORPRODCOM([Parameter(Name="COMM", DbType="VARCHAR2(4000 CHAR)")] string COMM, [Parameter(Name="COOODDPRODDD", DbType="NUMBER")] System.Nullable<decimal> COOODDPRODDD)
        {
            IExecuteResult _SELECTPRODUCTORPORPRODCOMResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), COMM, COOODDPRODDD);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORPORPRODCOMResult>)(_SELECTPRODUCTORPORPRODCOMResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTAGREGARALCARRO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTAGREGARALCARRO")]
        public Devart.Data.Linq.ISingleResult<SELECTAGREGARALCARROResult> SELECTAGREGARALCARRO([Parameter(Name="USSRUTT", DbType="VARCHAR2(4000 CHAR)")] string USSRUTT, [Parameter(Name="CODDPRODD", DbType="NUMBER")] System.Nullable<decimal> CODDPRODD)
        {
            IExecuteResult _SELECTAGREGARALCARROResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), USSRUTT, CODDPRODD);
            return ((Devart.Data.Linq.ISingleResult<SELECTAGREGARALCARROResult>)(_SELECTAGREGARALCARROResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PRODUCTODESCRIPCION in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.PRODUCTODESCRIPCION")]
        public void PRODUCTODESCRIPCION([Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD, [Parameter(Name="DECR", DbType="VARCHAR2(4000 CHAR)")] string DECR)
        {
            IExecuteResult _PRODUCTODESCRIPCIONResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROD, DECR);
        }

    
        /// <summary>
        /// There are no comments for MOSTRARPROVINCIA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.MOSTRARPROVINCIA")]
        public Devart.Data.Linq.ISingleResult<MOSTRARPROVINCIAResult> MOSTRARPROVINCIA([Parameter(Name="IDREG", DbType="NUMBER")] System.Nullable<decimal> IDREG)
        {
            IExecuteResult _MOSTRARPROVINCIAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDREG);
            return ((Devart.Data.Linq.ISingleResult<MOSTRARPROVINCIAResult>)(_MOSTRARPROVINCIAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for MOSTRARCOMUNA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.MOSTRARCOMUNA")]
        public Devart.Data.Linq.ISingleResult<MOSTRARCOMUNAResult> MOSTRARCOMUNA([Parameter(Name="IDPROV", DbType="NUMBER")] System.Nullable<decimal> IDPROV)
        {
            IExecuteResult _MOSTRARCOMUNAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROV);
            return ((Devart.Data.Linq.ISingleResult<MOSTRARCOMUNAResult>)(_MOSTRARCOMUNAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for HISTORIALDECOMPRAFECHA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.HISTORIALDECOMPRAFECHA")]
        public Devart.Data.Linq.ISingleResult<HISTORIALDECOMPRAFECHAResult> HISTORIALDECOMPRAFECHA([Parameter(Name="F1", DbType="DATE")] System.Nullable<System.DateTime> F1, [Parameter(Name="F2", DbType="DATE")] System.Nullable<System.DateTime> F2, [Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS)
        {
            IExecuteResult _HISTORIALDECOMPRAFECHAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), F1, F2, IDUS);
            return ((Devart.Data.Linq.ISingleResult<HISTORIALDECOMPRAFECHAResult>)(_HISTORIALDECOMPRAFECHAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for DETALLESENCERO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.DETALLESENCERO")]
        public Devart.Data.Linq.ISingleResult<DETALLESENCEROResult> DETALLESENCERO([Parameter(Name="CODBOLETA", DbType="NUMBER")] System.Nullable<decimal> CODBOLETA)
        {
            IExecuteResult _DETALLESENCEROResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODBOLETA);
            return ((Devart.Data.Linq.ISingleResult<DETALLESENCEROResult>)(_DETALLESENCEROResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CUENTACORREO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CUENTACORREO")]
        public void CUENTACORREO([Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS, [Parameter(Name="CORREO", DbType="VARCHAR2(4000 CHAR)")] string CORREO)
        {
            IExecuteResult _CUENTACORREOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUS, CORREO);
        }

    
        /// <summary>
        /// There are no comments for CUENTAACTIVAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CUENTAACTIVAR")]
        public void CUENTAACTIVAR([Parameter(Name="RUT", DbType="VARCHAR2(4000 CHAR)")] string RUT)
        {
            IExecuteResult _CUENTAACTIVARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUT);
        }

    
        /// <summary>
        /// There are no comments for BUSCARIDPRODPORCODDETALLE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.BUSCARIDPRODPORCODDETALLE")]
        public Devart.Data.Linq.ISingleResult<BUSCARIDPRODPORCODDETALLEResult> BUSCARIDPRODPORCODDETALLE([Parameter(Name="IDDETALLE", DbType="NUMBER")] System.Nullable<decimal> IDDETALLE)
        {
            IExecuteResult _BUSCARIDPRODPORCODDETALLEResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDDETALLE);
            return ((Devart.Data.Linq.ISingleResult<BUSCARIDPRODPORCODDETALLEResult>)(_BUSCARIDPRODPORCODDETALLEResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTUSUARIOSADMNOMBRE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTUSUARIOSADMNOMBRE")]
        public Devart.Data.Linq.ISingleResult<SELECTUSUARIOSADMNOMBREResult> SELECTUSUARIOSADMNOMBRE([Parameter(Name="NOMUS", DbType="VARCHAR2(4000 CHAR)")] string NOMUS)
        {
            IExecuteResult _SELECTUSUARIOSADMNOMBREResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NOMUS);
            return ((Devart.Data.Linq.ISingleResult<SELECTUSUARIOSADMNOMBREResult>)(_SELECTUSUARIOSADMNOMBREResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTUSUARIOSADM in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTUSUARIOSADM")]
        public Devart.Data.Linq.ISingleResult<SELECTUSUARIOSADMResult> SELECTUSUARIOSADM()
        {
            IExecuteResult _SELECTUSUARIOSADMResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<SELECTUSUARIOSADMResult>)(_SELECTUSUARIOSADMResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTUSUARIOBYRUT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTUSUARIOBYRUT")]
        public Devart.Data.Linq.ISingleResult<SELECTUSUARIOBYRUTResult> SELECTUSUARIOBYRUT([Parameter(Name="USRUT", DbType="VARCHAR2(4000 CHAR)")] string USRUT)
        {
            IExecuteResult _SELECTUSUARIOBYRUTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), USRUT);
            return ((Devart.Data.Linq.ISingleResult<SELECTUSUARIOBYRUTResult>)(_SELECTUSUARIOBYRUTResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTOSADMNOMBRE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTOSADMNOMBRE")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTOSADMCODResult> SELECTPRODUCTOSADMNOMBRE([Parameter(Name="NOM", DbType="VARCHAR2(4000 CHAR)")] string NOM)
        {
            IExecuteResult _SELECTPRODUCTOSADMNOMBREResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NOM);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTOSADMCODResult>)(_SELECTPRODUCTOSADMNOMBREResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTO2 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTOS")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTO2Result> SELECTPRODUCTO2()
        {
            IExecuteResult _SELECTPRODUCTO2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTO2Result>)(_SELECTPRODUCTO2Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORESREGION in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORESREGION")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESREGIONResult> SELECTPRODUCTORESREGION([Parameter(Name="REGIO", DbType="VARCHAR2(4000 CHAR)")] string REGIO)
        {
            IExecuteResult _SELECTPRODUCTORESREGIONResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), REGIO);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESREGIONResult>)(_SELECTPRODUCTORESREGIONResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORESADMREGION in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORESADMREGION")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMREGIONResult> SELECTPRODUCTORESADMREGION([Parameter(Name="REGIO", DbType="VARCHAR2(4000 CHAR)")] string REGIO)
        {
            IExecuteResult _SELECTPRODUCTORESADMREGIONResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), REGIO);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMREGIONResult>)(_SELECTPRODUCTORESADMREGIONResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECHISTORIALDEVENTAPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECHISTORIALDEVENTAPORID")]
        public Devart.Data.Linq.ISingleResult<SELECHISTORIALDEVENTAPORIDResult> SELECHISTORIALDEVENTAPORID([Parameter(Name="CODBOLETA", DbType="NUMBER")] System.Nullable<decimal> CODBOLETA, [Parameter(Name="IDUSUARIO", DbType="NUMBER")] System.Nullable<decimal> IDUSUARIO)
        {
            IExecuteResult _SELECHISTORIALDEVENTAPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODBOLETA, IDUSUARIO);
            return ((Devart.Data.Linq.ISingleResult<SELECHISTORIALDEVENTAPORIDResult>)(_SELECHISTORIALDEVENTAPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GEOLOCSELECT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.GEOLOCSELECT")]
        public Devart.Data.Linq.ISingleResult<GEOLOCSELECTResult> GEOLOCSELECT()
        {
            IExecuteResult _GEOLOCSELECTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<GEOLOCSELECTResult>)(_GEOLOCSELECTResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CUENTADOWNGRADE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CUENTADOWNGRADE")]
        public void CUENTADOWNGRADE([Parameter(Name="RUT", DbType="VARCHAR2(4000 CHAR)")] string RUT)
        {
            IExecuteResult _CUENTADOWNGRADEResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUT);
        }

    
        /// <summary>
        /// There are no comments for BUSCARSTOCK in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.BUSCARSTOCK")]
        public Devart.Data.Linq.ISingleResult<BUSCARSTOCKResult> BUSCARSTOCK([Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS, [Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD)
        {
            IExecuteResult _BUSCARSTOCKResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUS, IDPROD);
            return ((Devart.Data.Linq.ISingleResult<BUSCARSTOCKResult>)(_BUSCARSTOCKResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARRUTPORCODPEDIDO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.BUSCARRUTPORCODPEDIDO")]
        public Devart.Data.Linq.ISingleResult<BUSCARRUTPORCODPEDIDOResult> BUSCARRUTPORCODPEDIDO([Parameter(Name="CODPEDIDO", DbType="NUMBER")] System.Nullable<decimal> CODPEDIDO)
        {
            IExecuteResult _BUSCARRUTPORCODPEDIDOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPEDIDO);
            return ((Devart.Data.Linq.ISingleResult<BUSCARRUTPORCODPEDIDOResult>)(_BUSCARRUTPORCODPEDIDOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for AGREGARALCARRO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.AGREGARALCARRO")]
        public void AGREGARALCARRO([Parameter(Name="CANTIDAD", DbType="NUMBER")] System.Nullable<decimal> CANTIDAD, [Parameter(Name="VALOR", DbType="NUMBER")] System.Nullable<decimal> VALOR, [Parameter(Name="IDDOC", DbType="NUMBER")] System.Nullable<decimal> IDDOC, [Parameter(Name="CODPROD", DbType="NUMBER")] System.Nullable<decimal> CODPROD, [Parameter(Name="IDPRODUCTOR", DbType="NUMBER")] System.Nullable<decimal> IDPRODUCTOR)
        {
            IExecuteResult _AGREGARALCARROResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CANTIDAD, VALOR, IDDOC, CODPROD, IDPRODUCTOR);
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTOSADM in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTOSADM")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTOSADMCODResult> SELECTPRODUCTOSADM()
        {
            IExecuteResult _SELECTPRODUCTOSADMResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTOSADMCODResult>)(_SELECTPRODUCTOSADMResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORPORPRODPROV in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORPORPRODPROV")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORPORPRODCOMResult> SELECTPRODUCTORPORPRODPROV([Parameter(Name="PROVV", DbType="VARCHAR2(4000 CHAR)")] string PROVV, [Parameter(Name="COOODDPRODDD", DbType="NUMBER")] System.Nullable<decimal> COOODDPRODDD)
        {
            IExecuteResult _SELECTPRODUCTORPORPRODPROVResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), PROVV, COOODDPRODDD);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORPORPRODCOMResult>)(_SELECTPRODUCTORPORPRODPROVResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORESADMPROVINCIA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORESADMPROVINCIA")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMREGIONResult> SELECTPRODUCTORESADMPROVINCIA([Parameter(Name="PROVI", DbType="VARCHAR2(4000 CHAR)")] string PROVI)
        {
            IExecuteResult _SELECTPRODUCTORESADMPROVINCIAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), PROVI);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMREGIONResult>)(_SELECTPRODUCTORESADMPROVINCIAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORESADM in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORESADM")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMResult> SELECTPRODUCTORESADM()
        {
            IExecuteResult _SELECTPRODUCTORESADMResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMResult>)(_SELECTPRODUCTORESADMResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LOGIN in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.LOGIN")]
        public Devart.Data.Linq.ISingleResult<LOGINResult> LOGIN([Parameter(Name="US", DbType="VARCHAR2(4000 CHAR)")] string US, [Parameter(Name="PW", DbType="VARCHAR2(4000 CHAR)")] string PW)
        {
            IExecuteResult _LOGINResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), US, PW);
            return ((Devart.Data.Linq.ISingleResult<LOGINResult>)(_LOGINResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for IDCODBOLETACARRITODECOMPRA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.IDCODBOLETACARRITODECOMPRA")]
        public Devart.Data.Linq.ISingleResult<IDCODBOLETACARRITODECOMPRAResult> IDCODBOLETACARRITODECOMPRA([Parameter(Name="IDUSUARIO", DbType="NUMBER")] System.Nullable<decimal> IDUSUARIO)
        {
            IExecuteResult _IDCODBOLETACARRITODECOMPRAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUSUARIO);
            return ((Devart.Data.Linq.ISingleResult<IDCODBOLETACARRITODECOMPRAResult>)(_IDCODBOLETACARRITODECOMPRAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for HISTORIALDECOMPRA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.HISTORIALDECOMPRA")]
        public Devart.Data.Linq.ISingleResult<HISTORIALDECOMPRAFECHAResult> HISTORIALDECOMPRA([Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS)
        {
            IExecuteResult _HISTORIALDECOMPRAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUS);
            return ((Devart.Data.Linq.ISingleResult<HISTORIALDECOMPRAFECHAResult>)(_HISTORIALDECOMPRAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CREARCARRITO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CREARCARRITO")]
        public void CREARCARRITO([Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS)
        {
            IExecuteResult _CREARCARRITOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUS);
        }

    
        /// <summary>
        /// There are no comments for COMPRARRESTARSTOCK in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.COMPRARRESTARSTOCK")]
        public void COMPRARRESTARSTOCK([Parameter(Name="CANTIDAD", DbType="NUMBER")] System.Nullable<decimal> CANTIDAD, [Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD, [Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS)
        {
            IExecuteResult _COMPRARRESTARSTOCKResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CANTIDAD, IDPROD, IDUS);
        }

    
        /// <summary>
        /// There are no comments for CARRITORESTAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CARRITORESTAR")]
        public void CARRITORESTAR([Parameter(Name="CODPEDIDO", DbType="NUMBER")] System.Nullable<decimal> CODPEDIDO, [Parameter(Name="CANTIDAD", DbType="NUMBER")] System.Nullable<decimal> CANTIDAD)
        {
            IExecuteResult _CARRITORESTARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPEDIDO, CANTIDAD);
        }

    
        /// <summary>
        /// There are no comments for CARRITODECOMPRA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CARRITODECOMPRA")]
        public Devart.Data.Linq.ISingleResult<CARRITODECOMPRAResult> CARRITODECOMPRA([Parameter(Name="CODBOLETA", DbType="NUMBER")] System.Nullable<decimal> CODBOLETA)
        {
            IExecuteResult _CARRITODECOMPRAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODBOLETA);
            return ((Devart.Data.Linq.ISingleResult<CARRITODECOMPRAResult>)(_CARRITODECOMPRAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTUSUARIOSADMRUT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTUSUARIOSADMRUT")]
        public Devart.Data.Linq.ISingleResult<SELECTUSUARIOSADMNOMBREResult> SELECTUSUARIOSADMRUT([Parameter(Name="RUTUS", DbType="VARCHAR2(4000 CHAR)")] string RUTUS)
        {
            IExecuteResult _SELECTUSUARIOSADMRUTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUTUS);
            return ((Devart.Data.Linq.ISingleResult<SELECTUSUARIOSADMNOMBREResult>)(_SELECTUSUARIOSADMRUTResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTSUMAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTSUMAR")]
        public Devart.Data.Linq.ISingleResult<SELECTSUMARResult> SELECTSUMAR([Parameter(Name="IDDETALLE", DbType="NUMBER")] System.Nullable<decimal> IDDETALLE)
        {
            IExecuteResult _SELECTSUMARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDDETALLE);
            return ((Devart.Data.Linq.ISingleResult<SELECTSUMARResult>)(_SELECTSUMARResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTOPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTOPORID")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTOPORIDResult> SELECTPRODUCTOPORID([Parameter(Name="IDPRODUC", DbType="NUMBER")] System.Nullable<decimal> IDPRODUC)
        {
            IExecuteResult _SELECTPRODUCTOPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPRODUC);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTOPORIDResult>)(_SELECTPRODUCTOPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for MISPRODUCTOSUSUARIO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.MISPRODUCTOSUSUARIO")]
        public Devart.Data.Linq.ISingleResult<MISPRODUCTOSUSUARIOResult> MISPRODUCTOSUSUARIO([Parameter(Name="RUUTT", DbType="VARCHAR2(4000 CHAR)")] string RUUTT)
        {
            IExecuteResult _MISPRODUCTOSUSUARIOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUUTT);
            return ((Devart.Data.Linq.ISingleResult<MISPRODUCTOSUSUARIOResult>)(_MISPRODUCTOSUSUARIOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for INSERTPRODUCTOPRODUCTOR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.INSERTPRODUCTOPRODUCTOR")]
        public void INSERTPRODUCTOPRODUCTOR([Parameter(Name="STOCK", DbType="NUMBER")] System.Nullable<decimal> STOCK, [Parameter(Name="IDUSUARIO", DbType="NUMBER")] System.Nullable<decimal> IDUSUARIO, [Parameter(Name="IDPRODUCTO", DbType="NUMBER")] System.Nullable<decimal> IDPRODUCTO)
        {
            IExecuteResult _INSERTPRODUCTOPRODUCTORResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), STOCK, IDUSUARIO, IDPRODUCTO);
        }

    
        /// <summary>
        /// There are no comments for INSERTARPRODUCTO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.INSERTARPRODUCTO")]
        public void INSERTARPRODUCTO([Parameter(Name="NOMBRE", DbType="VARCHAR2(4000 CHAR)")] string NOMBRE, [Parameter(Name="DESCR", DbType="VARCHAR2(4000 CHAR)")] string DESCR, [Parameter(Name="VALOR", DbType="NUMBER")] System.Nullable<decimal> VALOR)
        {
            IExecuteResult _INSERTARPRODUCTOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NOMBRE, DESCR, VALOR);
        }

    
        /// <summary>
        /// There are no comments for CUENTAUPGRADE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CUENTAUPGRADE")]
        public void CUENTAUPGRADE([Parameter(Name="RUT", DbType="VARCHAR2(4000 CHAR)")] string RUT)
        {
            IExecuteResult _CUENTAUPGRADEResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUT);
        }

    
        /// <summary>
        /// There are no comments for CUENTACLAVE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CUENTACLAVE")]
        public void CUENTACLAVE([Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS, [Parameter(Name="CLAVE", DbType="VARCHAR2(4000 CHAR)")] string CLAVE)
        {
            IExecuteResult _CUENTACLAVEResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUS, CLAVE);
        }

    
        /// <summary>
        /// There are no comments for CUENTABLOQUEAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CUENTABLOQUEAR")]
        public void CUENTABLOQUEAR([Parameter(Name="RUT", DbType="VARCHAR2(4000 CHAR)")] string RUT)
        {
            IExecuteResult _CUENTABLOQUEARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUT);
        }

    
        /// <summary>
        /// There are no comments for ADMHISTORIALVENTA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.ADMHISTORIALVENTAS")]
        public Devart.Data.Linq.ISingleResult<ADMHISTORIALVENTAResult> ADMHISTORIALVENTA()
        {
            IExecuteResult _ADMHISTORIALVENTAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<ADMHISTORIALVENTAResult>)(_ADMHISTORIALVENTAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for STOCKRESTAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.STOCKRESTAR")]
        public void STOCKRESTAR([Parameter(Name="CODSTOCK", DbType="NUMBER")] System.Nullable<decimal> CODSTOCK, [Parameter(Name="CANTIDAD", DbType="NUMBER")] System.Nullable<decimal> CANTIDAD)
        {
            IExecuteResult _STOCKRESTARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODSTOCK, CANTIDAD);
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORPORPRODUCTO2 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORPORPRODUCTO")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORPORPRODCOMResult> SELECTPRODUCTORPORPRODUCTO2([Parameter(Name="COOODDPRODDD", DbType="NUMBER")] System.Nullable<decimal> COOODDPRODDD)
        {
            IExecuteResult _SELECTPRODUCTORPORPRODUCTO2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), COOODDPRODDD);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORPORPRODCOMResult>)(_SELECTPRODUCTORPORPRODUCTO2Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORESNOMBRE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORESNOMBRE")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESNOMBREResult> SELECTPRODUCTORESNOMBRE([Parameter(Name="NOMPRO", DbType="VARCHAR2(4000 CHAR)")] string NOMPRO)
        {
            IExecuteResult _SELECTPRODUCTORESNOMBREResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NOMPRO);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESNOMBREResult>)(_SELECTPRODUCTORESNOMBREResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORESADMRUT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORESADMRUT")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMREGIONResult> SELECTPRODUCTORESADMRUT([Parameter(Name="RUTUS", DbType="VARCHAR2(4000 CHAR)")] string RUTUS)
        {
            IExecuteResult _SELECTPRODUCTORESADMRUTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUTUS);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMREGIONResult>)(_SELECTPRODUCTORESADMRUTResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORE2 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORES")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORE2Result> SELECTPRODUCTORE2()
        {
            IExecuteResult _SELECTPRODUCTORE2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORE2Result>)(_SELECTPRODUCTORE2Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECPRODUCTOPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECPRODUCTOPORID")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTOPORIDResult> SELECPRODUCTOPORID([Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD)
        {
            IExecuteResult _SELECPRODUCTOPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROD);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTOPORIDResult>)(_SELECPRODUCTOPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for MISPRODUCTOSNOMBRE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.MISPRODUCTOSNOMBRE")]
        public Devart.Data.Linq.ISingleResult<MISPRODUCTOSNOMBREResult> MISPRODUCTOSNOMBRE([Parameter(Name="NOMP", DbType="VARCHAR2(4000 CHAR)")] string NOMP, [Parameter(Name="IDUSUA", DbType="NUMBER")] System.Nullable<decimal> IDUSUA)
        {
            IExecuteResult _MISPRODUCTOSNOMBREResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NOMP, IDUSUA);
            return ((Devart.Data.Linq.ISingleResult<MISPRODUCTOSNOMBREResult>)(_MISPRODUCTOSNOMBREResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for MISPRODUCTO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.MISPRODUCTOS")]
        public Devart.Data.Linq.ISingleResult<MISPRODUCTOResult> MISPRODUCTO([Parameter(Name="RUUTT", DbType="VARCHAR2(4000 CHAR)")] string RUUTT)
        {
            IExecuteResult _MISPRODUCTOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUUTT);
            return ((Devart.Data.Linq.ISingleResult<MISPRODUCTOResult>)(_MISPRODUCTOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for IDUSUARIOPORRUT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.IDUSUARIOPORRUT")]
        public Devart.Data.Linq.ISingleResult<IDUSUARIOPORRUTResult> IDUSUARIOPORRUT([Parameter(Name="RUTUS", DbType="VARCHAR2(4000 CHAR)")] string RUTUS)
        {
            IExecuteResult _IDUSUARIOPORRUTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUTUS);
            return ((Devart.Data.Linq.ISingleResult<IDUSUARIOPORRUTResult>)(_IDUSUARIOPORRUTResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for COMPRARBOLETA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.COMPRARBOLETA")]
        public void COMPRARBOLETA([Parameter(Name="IDDOC", DbType="NUMBER")] System.Nullable<decimal> IDDOC)
        {
            IExecuteResult _COMPRARBOLETAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDDOC);
        }

    
        /// <summary>
        /// There are no comments for CARRITOSUMAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CARRITOSUMAR")]
        public void CARRITOSUMAR([Parameter(Name="CODPEDIDO", DbType="NUMBER")] System.Nullable<decimal> CODPEDIDO, [Parameter(Name="CANTIDAD", DbType="NUMBER")] System.Nullable<decimal> CANTIDAD)
        {
            IExecuteResult _CARRITOSUMARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPEDIDO, CANTIDAD);
        }

    
        /// <summary>
        /// There are no comments for BUSCARVALORPRODUCTO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.BUSCARVALORPRODUCTO")]
        public Devart.Data.Linq.ISingleResult<BUSCARVALORPRODUCTOResult> BUSCARVALORPRODUCTO([Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD)
        {
            IExecuteResult _BUSCARVALORPRODUCTOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROD);
            return ((Devart.Data.Linq.ISingleResult<BUSCARVALORPRODUCTOResult>)(_BUSCARVALORPRODUCTOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARPRODUCTOPORCODPEDIDO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.BUSCARPRODUCTOPORCODPEDIDO")]
        public Devart.Data.Linq.ISingleResult<BUSCARIDPRODPORCODDETALLEResult> BUSCARPRODUCTOPORCODPEDIDO([Parameter(Name="CODPEDIDO", DbType="NUMBER")] System.Nullable<decimal> CODPEDIDO)
        {
            IExecuteResult _BUSCARPRODUCTOPORCODPEDIDOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPEDIDO);
            return ((Devart.Data.Linq.ISingleResult<BUSCARIDPRODPORCODDETALLEResult>)(_BUSCARPRODUCTOPORCODPEDIDOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORPORPRODREG in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORPORPRODREG")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORPORPRODCOMResult> SELECTPRODUCTORPORPRODREG([Parameter(Name="REGG", DbType="VARCHAR2(4000 CHAR)")] string REGG, [Parameter(Name="COOODDPRODDD", DbType="NUMBER")] System.Nullable<decimal> COOODDPRODDD)
        {
            IExecuteResult _SELECTPRODUCTORPORPRODREGResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), REGG, COOODDPRODDD);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORPORPRODCOMResult>)(_SELECTPRODUCTORPORPRODREGResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORESADMCOMUNA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORESADMCOMUNA")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMREGIONResult> SELECTPRODUCTORESADMCOMUNA([Parameter(Name="COMU", DbType="VARCHAR2(4000 CHAR)")] string COMU)
        {
            IExecuteResult _SELECTPRODUCTORESADMCOMUNAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), COMU);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESADMREGIONResult>)(_SELECTPRODUCTORESADMCOMUNAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTDETBOLPROD in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTDETBOLPROD")]
        public Devart.Data.Linq.ISingleResult<SELECTDETBOLPRODResult> SELECTDETBOLPROD([Parameter(Name="IDDOC", DbType="NUMBER")] System.Nullable<decimal> IDDOC)
        {
            IExecuteResult _SELECTDETBOLPRODResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDDOC);
            return ((Devart.Data.Linq.ISingleResult<SELECTDETBOLPRODResult>)(_SELECTDETBOLPRODResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECHISTORIALDEVENTAFECHA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECHISTORIALDEVENTAFECHA")]
        public Devart.Data.Linq.ISingleResult<SELECHISTORIALDEVENTAPORIDResult> SELECHISTORIALDEVENTAFECHA([Parameter(Name="F1", DbType="DATE")] System.Nullable<System.DateTime> F1, [Parameter(Name="F2", DbType="DATE")] System.Nullable<System.DateTime> F2, [Parameter(Name="IDUSUARIO", DbType="NUMBER")] System.Nullable<decimal> IDUSUARIO)
        {
            IExecuteResult _SELECHISTORIALDEVENTAFECHAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), F1, F2, IDUSUARIO);
            return ((Devart.Data.Linq.ISingleResult<SELECHISTORIALDEVENTAPORIDResult>)(_SELECHISTORIALDEVENTAFECHAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for QUIENESNOPUEDEN in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.QUIENESNOPUEDEN")]
        public Devart.Data.Linq.ISingleResult<QUIENESNOPUEDENResult> QUIENESNOPUEDEN([Parameter(Name="CODBOLETA", DbType="NUMBER")] System.Nullable<decimal> CODBOLETA)
        {
            IExecuteResult _QUIENESNOPUEDENResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODBOLETA);
            return ((Devart.Data.Linq.ISingleResult<QUIENESNOPUEDENResult>)(_QUIENESNOPUEDENResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for MOSTRARUSUARIORUT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.MOSTRARUSUARIORUT")]
        public Devart.Data.Linq.ISingleResult<MOSTRARUSUARIORUTResult> MOSTRARUSUARIORUT([Parameter(Name="RUTUS", DbType="VARCHAR2(4000 CHAR)")] string RUTUS)
        {
            IExecuteResult _MOSTRARUSUARIORUTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUTUS);
            return ((Devart.Data.Linq.ISingleResult<MOSTRARUSUARIORUTResult>)(_MOSTRARUSUARIORUTResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for IDUBICACIONPORIDUSUA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.IDUBICACIONPORIDUSUA")]
        public Devart.Data.Linq.ISingleResult<IDUBICACIONPORIDUSUAResult> IDUBICACIONPORIDUSUA([Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD)
        {
            IExecuteResult _IDUBICACIONPORIDUSUAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROD);
            return ((Devart.Data.Linq.ISingleResult<IDUBICACIONPORIDUSUAResult>)(_IDUBICACIONPORIDUSUAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ADMHISTORIALVENTASFECHA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.ADMHISTORIALVENTASFECHA")]
        public Devart.Data.Linq.ISingleResult<ADMHISTORIALVENTAResult> ADMHISTORIALVENTASFECHA([Parameter(Name="F1", DbType="DATE")] System.Nullable<System.DateTime> F1, [Parameter(Name="F2", DbType="DATE")] System.Nullable<System.DateTime> F2)
        {
            IExecuteResult _ADMHISTORIALVENTASFECHAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), F1, F2);
            return ((Devart.Data.Linq.ISingleResult<ADMHISTORIALVENTAResult>)(_ADMHISTORIALVENTASFECHAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for UBICACIONINSERT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.UBICACIONINSERT")]
        public void UBICACIONINSERT([Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS, [Parameter(Name="NOMBRE", DbType="VARCHAR2(4000 CHAR)")] string NOMBRE, [Parameter(Name="DESCRIP", DbType="VARCHAR2(4000 CHAR)")] string DESCRIP, [Parameter(Name="DIREC", DbType="VARCHAR2(4000 CHAR)")] string DIREC, [Parameter(Name="COMUNA", DbType="NUMBER")] System.Nullable<decimal> COMUNA)
        {
            IExecuteResult _UBICACIONINSERTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUS, NOMBRE, DESCRIP, DIREC, COMUNA);
        }

    
        /// <summary>
        /// There are no comments for SELECTUPDATEPRODUCTO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTUPDATEPRODUCTO")]
        public Devart.Data.Linq.ISingleResult<SELECTUPDATEPRODUCTOResult> SELECTUPDATEPRODUCTO([Parameter(Name="CODPROD", DbType="NUMBER")] System.Nullable<decimal> CODPROD)
        {
            IExecuteResult _SELECTUPDATEPRODUCTOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPROD);
            return ((Devart.Data.Linq.ISingleResult<SELECTUPDATEPRODUCTOResult>)(_SELECTUPDATEPRODUCTOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTOSNOMBRE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTOSNOMBRE")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTO2Result> SELECTPRODUCTOSNOMBRE([Parameter(Name="NOM", DbType="VARCHAR2(4000 CHAR)")] string NOM)
        {
            IExecuteResult _SELECTPRODUCTOSNOMBREResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NOM);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTO2Result>)(_SELECTPRODUCTOSNOMBREResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORESPROVINCIA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORESPROVINCIA")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESREGIONResult> SELECTPRODUCTORESPROVINCIA([Parameter(Name="PROVI", DbType="VARCHAR2(4000 CHAR)")] string PROVI)
        {
            IExecuteResult _SELECTPRODUCTORESPROVINCIAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), PROVI);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESREGIONResult>)(_SELECTPRODUCTORESPROVINCIAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTPRODUCTORESCOMUNA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTPRODUCTORESCOMUNA")]
        public Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESREGIONResult> SELECTPRODUCTORESCOMUNA([Parameter(Name="COMU", DbType="VARCHAR2(4000 CHAR)")] string COMU)
        {
            IExecuteResult _SELECTPRODUCTORESCOMUNAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), COMU);
            return ((Devart.Data.Linq.ISingleResult<SELECTPRODUCTORESREGIONResult>)(_SELECTPRODUCTORESCOMUNAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTDETALLEBOLETA2 in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTDETALLEBOLETA")]
        public Devart.Data.Linq.ISingleResult<SELECTDETALLEBOLETA2Result> SELECTDETALLEBOLETA2([Parameter(Name="IDBOLETA", DbType="NUMBER")] System.Nullable<decimal> IDBOLETA)
        {
            IExecuteResult _SELECTDETALLEBOLETA2Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDBOLETA);
            return ((Devart.Data.Linq.ISingleResult<SELECTDETALLEBOLETA2Result>)(_SELECTDETALLEBOLETA2Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTCOMPRAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTCOMPRAR")]
        public Devart.Data.Linq.ISingleResult<SELECTCOMPRARResult> SELECTCOMPRAR([Parameter(Name="CODBOLETA", DbType="NUMBER")] System.Nullable<decimal> CODBOLETA)
        {
            IExecuteResult _SELECTCOMPRARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODBOLETA);
            return ((Devart.Data.Linq.ISingleResult<SELECTCOMPRARResult>)(_SELECTCOMPRARResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECHISTORIALDEVENTA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECHISTORIALDEVENTA")]
        public Devart.Data.Linq.ISingleResult<SELECHISTORIALDEVENTAPORIDResult> SELECHISTORIALDEVENTA([Parameter(Name="IDUSUARIO", DbType="NUMBER")] System.Nullable<decimal> IDUSUARIO)
        {
            IExecuteResult _SELECHISTORIALDEVENTAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUSUARIO);
            return ((Devart.Data.Linq.ISingleResult<SELECHISTORIALDEVENTAPORIDResult>)(_SELECHISTORIALDEVENTAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PRODUCTOVALOR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.PRODUCTOVALOR")]
        public void PRODUCTOVALOR([Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD, [Parameter(Name="CANTIDAD", DbType="NUMBER")] System.Nullable<decimal> CANTIDAD)
        {
            IExecuteResult _PRODUCTOVALORResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROD, CANTIDAD);
        }

    
        /// <summary>
        /// There are no comments for PRODUCTOBLOQUEAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.PRODUCTOBLOQUEAR")]
        public void PRODUCTOBLOQUEAR([Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD)
        {
            IExecuteResult _PRODUCTOBLOQUEARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROD);
        }

    
        /// <summary>
        /// There are no comments for ESTAENELSTOCK in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.ESTAENELSTOCK")]
        public Devart.Data.Linq.ISingleResult<ESTAENELSTOCKResult> ESTAENELSTOCK([Parameter(Name="CODPROD", DbType="NUMBER")] System.Nullable<decimal> CODPROD, [Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS)
        {
            IExecuteResult _ESTAENELSTOCKResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPROD, IDUS);
            return ((Devart.Data.Linq.ISingleResult<ESTAENELSTOCKResult>)(_ESTAENELSTOCKResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CARRITODECOMPRANOMBRE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CARRITODECOMPRANOMBRE")]
        public Devart.Data.Linq.ISingleResult<CARRITODECOMPRAResult> CARRITODECOMPRANOMBRE([Parameter(Name="CODBOLETA", DbType="NUMBER")] System.Nullable<decimal> CODBOLETA, [Parameter(Name="NOMPROD", DbType="VARCHAR2(4000 CHAR)")] string NOMPROD)
        {
            IExecuteResult _CARRITODECOMPRANOMBREResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODBOLETA, NOMPROD);
            return ((Devart.Data.Linq.ISingleResult<CARRITODECOMPRAResult>)(_CARRITODECOMPRANOMBREResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARIDPRODUCTORPORRUT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.BUSCARIDPRODUCTORPORRUT")]
        public Devart.Data.Linq.ISingleResult<IDUSUARIOPORRUTResult> BUSCARIDPRODUCTORPORRUT([Parameter(Name="RUTPROD", DbType="VARCHAR2(4000 CHAR)")] string RUTPROD)
        {
            IExecuteResult _BUSCARIDPRODUCTORPORRUTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUTPROD);
            return ((Devart.Data.Linq.ISingleResult<IDUSUARIOPORRUTResult>)(_BUSCARIDPRODUCTORPORRUTResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for VERDEALLEBOLETA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.VERDEALLEBOLETA")]
        public Devart.Data.Linq.ISingleResult<VERDEALLEBOLETAResult> VERDEALLEBOLETA([Parameter(Name="IDBOLETA", DbType="NUMBER")] System.Nullable<decimal> IDBOLETA)
        {
            IExecuteResult _VERDEALLEBOLETAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDBOLETA);
            return ((Devart.Data.Linq.ISingleResult<VERDEALLEBOLETAResult>)(_VERDEALLEBOLETAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SELECTUPDATECARRO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.SELECTUPDATECARRO")]
        public Devart.Data.Linq.ISingleResult<SELECTUPDATECARROResult> SELECTUPDATECARRO([Parameter(Name="CODPRODUCTO", DbType="NUMBER")] System.Nullable<decimal> CODPRODUCTO, [Parameter(Name="IDDOCUMENTO", DbType="NUMBER")] System.Nullable<decimal> IDDOCUMENTO)
        {
            IExecuteResult _SELECTUPDATECARROResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPRODUCTO, IDDOCUMENTO);
            return ((Devart.Data.Linq.ISingleResult<SELECTUPDATECARROResult>)(_SELECTUPDATECARROResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PRODUCTOACTIVAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.PRODUCTOACTIVAR")]
        public void PRODUCTOACTIVAR([Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD)
        {
            IExecuteResult _PRODUCTOACTIVARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPROD);
        }

    
        /// <summary>
        /// There are no comments for MOSTRARREGIONE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.MOSTRARREGIONES")]
        public Devart.Data.Linq.ISingleResult<REGION> MOSTRARREGIONE()
        {
            IExecuteResult _MOSTRARREGIONEResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<REGION>)(_MOSTRARREGIONEResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for HISTORIALDECOMPRAPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.HISTORIALDECOMPRAPORID")]
        public Devart.Data.Linq.ISingleResult<HISTORIALDECOMPRAFECHAResult> HISTORIALDECOMPRAPORID([Parameter(Name="CODBOL", DbType="NUMBER")] System.Nullable<decimal> CODBOL, [Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS)
        {
            IExecuteResult _HISTORIALDECOMPRAPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODBOL, IDUS);
            return ((Devart.Data.Linq.ISingleResult<HISTORIALDECOMPRAFECHAResult>)(_HISTORIALDECOMPRAPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GEOLOCPORRUT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.GEOLOCPORRUT")]
        public Devart.Data.Linq.ISingleResult<GEOLOCSELECTResult> GEOLOCPORRUT([Parameter(Name="RUTPROD", DbType="VARCHAR2(4000 CHAR)")] string RUTPROD)
        {
            IExecuteResult _GEOLOCPORRUTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUTPROD);
            return ((Devart.Data.Linq.ISingleResult<GEOLOCSELECTResult>)(_GEOLOCPORRUTResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GEOLOCINSERT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.GEOLOCINSERT")]
        public void GEOLOCINSERT([Parameter(Name="LATITUD", DbType="VARCHAR2(4000 CHAR)")] string LATITUD, [Parameter(Name="LONGITUD", DbType="VARCHAR2(4000 CHAR)")] string LONGITUD, [Parameter(Name="IDUBI", DbType="NUMBER")] System.Nullable<decimal> IDUBI, [Parameter(Name="IDPROD", DbType="NUMBER")] System.Nullable<decimal> IDPROD)
        {
            IExecuteResult _GEOLOCINSERTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), LATITUD, LONGITUD, IDUBI, IDPROD);
        }

    
        /// <summary>
        /// There are no comments for ESTAENELCARRO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.ESTAENELCARRO")]
        public Devart.Data.Linq.ISingleResult<ESTAENELCARROResult> ESTAENELCARRO([Parameter(Name="IDODC", DbType="NUMBER")] System.Nullable<decimal> IDODC, [Parameter(Name="CODPROD", DbType="NUMBER")] System.Nullable<decimal> CODPROD, [Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS)
        {
            IExecuteResult _ESTAENELCARROResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDODC, CODPROD, IDUS);
            return ((Devart.Data.Linq.ISingleResult<ESTAENELCARROResult>)(_ESTAENELCARROResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CUENTAFONO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CUENTAFONO")]
        public void CUENTAFONO([Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS, [Parameter(Name="FONO", DbType="NUMBER")] System.Nullable<decimal> FONO)
        {
            IExecuteResult _CUENTAFONOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUS, FONO);
        }

    
        /// <summary>
        /// There are no comments for CARRITOELIMINAR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.CARRITOELIMINAR")]
        public void CARRITOELIMINAR([Parameter(Name="CODPEDIDO", DbType="NUMBER")] System.Nullable<decimal> CODPEDIDO)
        {
            IExecuteResult _CARRITOELIMINARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPEDIDO);
        }

    
        /// <summary>
        /// There are no comments for BUSCARIDCARRITO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.BUSCARIDCARRITO")]
        public Devart.Data.Linq.ISingleResult<IDCODBOLETACARRITODECOMPRAResult> BUSCARIDCARRITO([Parameter(Name="IDUS", DbType="VARCHAR2(4000 CHAR)")] string IDUS)
        {
            IExecuteResult _BUSCARIDCARRITOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUS);
            return ((Devart.Data.Linq.ISingleResult<IDCODBOLETACARRITODECOMPRAResult>)(_BUSCARIDCARRITOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ADMHISTORIALVENTASPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.SELECTFINAL.ADMHISTORIALVENTASPORID")]
        public Devart.Data.Linq.ISingleResult<ADMHISTORIALVENTAResult> ADMHISTORIALVENTASPORID([Parameter(Name="IDBOL", DbType="NUMBER")] System.Nullable<decimal> IDBOL)
        {
            IExecuteResult _ADMHISTORIALVENTASPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDBOL);
            return ((Devart.Data.Linq.ISingleResult<ADMHISTORIALVENTAResult>)(_ADMHISTORIALVENTASPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARUSUARIO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARUSUARIOS")]
        public Devart.Data.Linq.ISingleResult<LOGINResult> LISTARUSUARIO()
        {
            IExecuteResult _LISTARUSUARIOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<LOGINResult>)(_LISTARUSUARIOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARSTOCKPORPRODUCTOR in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARSTOCKPORPRODUCTOR")]
        public Devart.Data.Linq.ISingleResult<PRODUCTOPRODUCTOR> LISTARSTOCKPORPRODUCTOR([Parameter(Name="IDPRODUCTOR", DbType="NUMBER")] System.Nullable<decimal> IDPRODUCTOR)
        {
            IExecuteResult _LISTARSTOCKPORPRODUCTORResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPRODUCTOR);
            return ((Devart.Data.Linq.ISingleResult<PRODUCTOPRODUCTOR>)(_LISTARSTOCKPORPRODUCTORResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARBOLETAPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARBOLETAPORID")]
        public Devart.Data.Linq.ISingleResult<BUSCARBOLETAPORIDResult> BUSCARBOLETAPORID([Parameter(Name="BOLID", DbType="NUMBER")] System.Nullable<decimal> BOLID)
        {
            IExecuteResult _BUSCARBOLETAPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), BOLID);
            return ((Devart.Data.Linq.ISingleResult<BUSCARBOLETAPORIDResult>)(_BUSCARBOLETAPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARPRODUCTO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARPRODUCTOS")]
        public Devart.Data.Linq.ISingleResult<LISTARPRODUCTOResult> LISTARPRODUCTO()
        {
            IExecuteResult _LISTARPRODUCTOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<LISTARPRODUCTOResult>)(_LISTARPRODUCTOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARCOMUNA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARCOMUNAS")]
        public Devart.Data.Linq.ISingleResult<COMUNA> LISTARCOMUNA()
        {
            IExecuteResult _LISTARCOMUNAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<COMUNA>)(_LISTARCOMUNAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARBOLETASPORIDUSUARIO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARBOLETASPORIDUSUARIO")]
        public Devart.Data.Linq.ISingleResult<BUSCARBOLETAPORIDResult> LISTARBOLETASPORIDUSUARIO([Parameter(Name="IDUS", DbType="NUMBER")] System.Nullable<decimal> IDUS)
        {
            IExecuteResult _LISTARBOLETASPORIDUSUARIOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUS);
            return ((Devart.Data.Linq.ISingleResult<BUSCARBOLETAPORIDResult>)(_LISTARBOLETASPORIDUSUARIOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARDETALLEPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARDETALLEPORID")]
        public Devart.Data.Linq.ISingleResult<DETALLEDOC> BUSCARDETALLEPORID([Parameter(Name="IDDETBOLETA", DbType="NUMBER")] System.Nullable<decimal> IDDETBOLETA)
        {
            IExecuteResult _BUSCARDETALLEPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDDETBOLETA);
            return ((Devart.Data.Linq.ISingleResult<DETALLEDOC>)(_BUSCARDETALLEPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARCOMUNAPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARCOMUNAPORID")]
        public Devart.Data.Linq.ISingleResult<COMUNA> BUSCARCOMUNAPORID([Parameter(Name="COMUNACOD", DbType="NUMBER")] System.Nullable<decimal> COMUNACOD)
        {
            IExecuteResult _BUSCARCOMUNAPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), COMUNACOD);
            return ((Devart.Data.Linq.ISingleResult<COMUNA>)(_BUSCARCOMUNAPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARDETALLEDOC in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARDETALLEDOC")]
        public Devart.Data.Linq.ISingleResult<DETALLEDOC> LISTARDETALLEDOC()
        {
            IExecuteResult _LISTARDETALLEDOCResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<DETALLEDOC>)(_LISTARDETALLEDOCResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARUBICACION in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARUBICACION")]
        public Devart.Data.Linq.ISingleResult<UBICACION> LISTARUBICACION()
        {
            IExecuteResult _LISTARUBICACIONResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<UBICACION>)(_LISTARUBICACIONResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARREGIONE in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARREGIONES")]
        public Devart.Data.Linq.ISingleResult<REGION> LISTARREGIONE()
        {
            IExecuteResult _LISTARREGIONEResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<REGION>)(_LISTARREGIONEResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARDETALLEPORBOLETA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARDETALLEPORBOLETA")]
        public Devart.Data.Linq.ISingleResult<DETALLEDOC> LISTARDETALLEPORBOLETA([Parameter(Name="IDCODBOLETA", DbType="NUMBER")] System.Nullable<decimal> IDCODBOLETA)
        {
            IExecuteResult _LISTARDETALLEPORBOLETAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDCODBOLETA);
            return ((Devart.Data.Linq.ISingleResult<DETALLEDOC>)(_LISTARDETALLEPORBOLETAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARREGIONPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARREGIONPORID")]
        public Devart.Data.Linq.ISingleResult<REGION> BUSCARREGIONPORID([Parameter(Name="REGIONCOD", DbType="NUMBER")] System.Nullable<decimal> REGIONCOD)
        {
            IExecuteResult _BUSCARREGIONPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), REGIONCOD);
            return ((Devart.Data.Linq.ISingleResult<REGION>)(_BUSCARREGIONPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARPRODUCTOPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARPRODUCTOPORID")]
        public Devart.Data.Linq.ISingleResult<LISTARPRODUCTOResult> BUSCARPRODUCTOPORID([Parameter(Name="CODPROD", DbType="NUMBER")] System.Nullable<decimal> CODPROD)
        {
            IExecuteResult _BUSCARPRODUCTOPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODPROD);
            return ((Devart.Data.Linq.ISingleResult<LISTARPRODUCTOResult>)(_BUSCARPRODUCTOPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARSTOCK in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARSTOCK")]
        public Devart.Data.Linq.ISingleResult<PRODUCTOPRODUCTOR> LISTARSTOCK()
        {
            IExecuteResult _LISTARSTOCKResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<PRODUCTOPRODUCTOR>)(_LISTARSTOCKResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARSTOCKPORPRODUCTO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARSTOCKPORPRODUCTO")]
        public Devart.Data.Linq.ISingleResult<PRODUCTOPRODUCTOR> BUSCARSTOCKPORPRODUCTO([Parameter(Name="IDPRODUCT", DbType="NUMBER")] System.Nullable<decimal> IDPRODUCT)
        {
            IExecuteResult _BUSCARSTOCKPORPRODUCTOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDPRODUCT);
            return ((Devart.Data.Linq.ISingleResult<PRODUCTOPRODUCTOR>)(_BUSCARSTOCKPORPRODUCTOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARPROVINCIAPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARPROVINCIAPORID")]
        public Devart.Data.Linq.ISingleResult<PROVINCIA> BUSCARPROVINCIAPORID([Parameter(Name="PROVINCIACOD", DbType="NUMBER")] System.Nullable<decimal> PROVINCIACOD)
        {
            IExecuteResult _BUSCARPROVINCIAPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), PROVINCIACOD);
            return ((Devart.Data.Linq.ISingleResult<PROVINCIA>)(_BUSCARPROVINCIAPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARUBICACIONPORUSUARIO in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARUBICACIONPORUSUARIO")]
        public Devart.Data.Linq.ISingleResult<UBICACION> LISTARUBICACIONPORUSUARIO([Parameter(Name="IDUSUARIO", DbType="NUMBER")] System.Nullable<decimal> IDUSUARIO)
        {
            IExecuteResult _LISTARUBICACIONPORUSUARIOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDUSUARIO);
            return ((Devart.Data.Linq.ISingleResult<UBICACION>)(_LISTARUBICACIONPORUSUARIOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARBOLETA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARBOLETAS")]
        public Devart.Data.Linq.ISingleResult<BUSCARBOLETAPORIDResult> LISTARBOLETA()
        {
            IExecuteResult _LISTARBOLETAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<BUSCARBOLETAPORIDResult>)(_LISTARBOLETAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARUSUARIOPORRUT in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARUSUARIOPORRUT")]
        public Devart.Data.Linq.ISingleResult<LOGINResult> BUSCARUSUARIOPORRUT([Parameter(Name="RUTUS", DbType="VARCHAR2(4000 CHAR)")] string RUTUS)
        {
            IExecuteResult _BUSCARUSUARIOPORRUTResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), RUTUS);
            return ((Devart.Data.Linq.ISingleResult<LOGINResult>)(_BUSCARUSUARIOPORRUTResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for LISTARPROVINCIA in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.LISTARPROVINCIAS")]
        public Devart.Data.Linq.ISingleResult<PROVINCIA> LISTARPROVINCIA()
        {
            IExecuteResult _LISTARPROVINCIAResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<PROVINCIA>)(_LISTARPROVINCIAResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARUSUARIOPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARUSUARIOPORID")]
        public Devart.Data.Linq.ISingleResult<LOGINResult> BUSCARUSUARIOPORID([Parameter(Name="IDTUS", DbType="VARCHAR2(4000 CHAR)")] string IDTUS)
        {
            IExecuteResult _BUSCARUSUARIOPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDTUS);
            return ((Devart.Data.Linq.ISingleResult<LOGINResult>)(_BUSCARUSUARIOPORIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for BUSCARUBICACIONPORID in the schema.
        /// </summary>
        [Function(Name=@"PORTAFOLIO10.BUSCAR.BUSCARUBICACIONPORID")]
        public Devart.Data.Linq.ISingleResult<UBICACION> BUSCARUBICACIONPORID([Parameter(Name="CODUBICACION", DbType="NUMBER")] System.Nullable<decimal> CODUBICACION)
        {
            IExecuteResult _BUSCARUBICACIONPORIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), CODUBICACION);
            return ((Devart.Data.Linq.ISingleResult<UBICACION>)(_BUSCARUBICACIONPORIDResult.ReturnValue));
        }
    }
}

namespace PORTAFOLIOContext
{

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.APEXWSTAG in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.APEX$_WS_TAGS")]
    public partial class APEXWSTAG : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private decimal _WSAPPID;

        private System.Nullable<decimal> _DATAGRIDID;

        private System.Nullable<decimal> _ROWID;

        private System.Nullable<decimal> _WEBPAGEID;

        private string _COMPONENTLEVEL;

        private string _TAG;

        private System.DateTime _CREATEDON;

        private string _CREATEDBY;

        private System.Nullable<System.DateTime> _UPDATEDON;

        private string _UPDATEDBY;
        #pragma warning restore 0649

        private EntityRef<APEXWSROW> _APEXWSROW;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnWSAPPIDChanging(decimal value);
        partial void OnWSAPPIDChanged();
        partial void OnDATAGRIDIDChanging(System.Nullable<decimal> value);
        partial void OnDATAGRIDIDChanged();
        partial void OnROWIDChanging(System.Nullable<decimal> value);
        partial void OnROWIDChanged();
        partial void OnWEBPAGEIDChanging(System.Nullable<decimal> value);
        partial void OnWEBPAGEIDChanged();
        partial void OnCOMPONENTLEVELChanging(string value);
        partial void OnCOMPONENTLEVELChanged();
        partial void OnTAGChanging(string value);
        partial void OnTAGChanged();
        partial void OnCREATEDONChanging(System.DateTime value);
        partial void OnCREATEDONChanged();
        partial void OnCREATEDBYChanging(string value);
        partial void OnCREATEDBYChanged();
        partial void OnUPDATEDONChanging(System.Nullable<System.DateTime> value);
        partial void OnUPDATEDONChanged();
        partial void OnUPDATEDBYChanging(string value);
        partial void OnUPDATEDBYChanged();
        #endregion

        public APEXWSTAG()
        {
            this._APEXWSROW  = default(EntityRef<APEXWSROW>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WSAPPID in the schema.
        /// </summary>
        [Column(Name = @"WS_APP_ID", Storage = "_WSAPPID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WSAPPID
        {
            get
            {
                return this._WSAPPID;
            }
            set
            {
                if (this._WSAPPID != value)
                {
                    this.OnWSAPPIDChanging(value);
                    this.SendPropertyChanging();
                    this._WSAPPID = value;
                    this.SendPropertyChanged("WSAPPID");
                    this.OnWSAPPIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAGRIDID in the schema.
        /// </summary>
        [Column(Name = @"DATA_GRID_ID", Storage = "_DATAGRIDID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> DATAGRIDID
        {
            get
            {
                return this._DATAGRIDID;
            }
            set
            {
                if (this._DATAGRIDID != value)
                {
                    this.OnDATAGRIDIDChanging(value);
                    this.SendPropertyChanging();
                    this._DATAGRIDID = value;
                    this.SendPropertyChanged("DATAGRIDID");
                    this.OnDATAGRIDIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ROWID in the schema.
        /// </summary>
        [Column(Name = @"ROW_ID", Storage = "_ROWID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> ROWID
        {
            get
            {
                return this._ROWID;
            }
            set
            {
                if (this._ROWID != value)
                {
                    if (this._APEXWSROW.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnROWIDChanging(value);
                    this.SendPropertyChanging();
                    this._ROWID = value;
                    this.SendPropertyChanged("ROWID");
                    this.OnROWIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WEBPAGEID in the schema.
        /// </summary>
        [Column(Name = @"WEBPAGE_ID", Storage = "_WEBPAGEID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> WEBPAGEID
        {
            get
            {
                return this._WEBPAGEID;
            }
            set
            {
                if (this._WEBPAGEID != value)
                {
                    this.OnWEBPAGEIDChanging(value);
                    this.SendPropertyChanging();
                    this._WEBPAGEID = value;
                    this.SendPropertyChanged("WEBPAGEID");
                    this.OnWEBPAGEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMPONENTLEVEL in the schema.
        /// </summary>
        [Column(Name = @"COMPONENT_LEVEL", Storage = "_COMPONENTLEVEL", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMPONENTLEVEL
        {
            get
            {
                return this._COMPONENTLEVEL;
            }
            set
            {
                if (this._COMPONENTLEVEL != value)
                {
                    this.OnCOMPONENTLEVELChanging(value);
                    this.SendPropertyChanging();
                    this._COMPONENTLEVEL = value;
                    this.SendPropertyChanged("COMPONENTLEVEL");
                    this.OnCOMPONENTLEVELChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TAG in the schema.
        /// </summary>
        [Column(Storage = "_TAG", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TAG
        {
            get
            {
                return this._TAG;
            }
            set
            {
                if (this._TAG != value)
                {
                    this.OnTAGChanging(value);
                    this.SendPropertyChanging();
                    this._TAG = value;
                    this.SendPropertyChanged("TAG");
                    this.OnTAGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDON in the schema.
        /// </summary>
        [Column(Name = @"CREATED_ON", Storage = "_CREATEDON", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime CREATEDON
        {
            get
            {
                return this._CREATEDON;
            }
            set
            {
                if (this._CREATEDON != value)
                {
                    this.OnCREATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDON = value;
                    this.SendPropertyChanged("CREATEDON");
                    this.OnCREATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDBY in the schema.
        /// </summary>
        [Column(Name = @"CREATED_BY", Storage = "_CREATEDBY", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CREATEDBY
        {
            get
            {
                return this._CREATEDBY;
            }
            set
            {
                if (this._CREATEDBY != value)
                {
                    this.OnCREATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDBY = value;
                    this.SendPropertyChanged("CREATEDBY");
                    this.OnCREATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDON in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_ON", Storage = "_UPDATEDON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> UPDATEDON
        {
            get
            {
                return this._UPDATEDON;
            }
            set
            {
                if (this._UPDATEDON != value)
                {
                    this.OnUPDATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDON = value;
                    this.SendPropertyChanged("UPDATEDON");
                    this.OnUPDATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDBY in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_BY", Storage = "_UPDATEDBY", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UPDATEDBY
        {
            get
            {
                return this._UPDATEDBY;
            }
            set
            {
                if (this._UPDATEDBY != value)
                {
                    this.OnUPDATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDBY = value;
                    this.SendPropertyChanged("UPDATEDBY");
                    this.OnUPDATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APEXWSROW in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="APEXWSROW_APEXWSTAG", Storage="_APEXWSROW", ThisKey="ROWID", OtherKey="ID", IsForeignKey=true)]
        public APEXWSROW APEXWSROW
        {
            get
            {
                return this._APEXWSROW.Entity;
            }
            set
            {
                APEXWSROW previousValue = this._APEXWSROW.Entity;
                if ((previousValue != value) || (this._APEXWSROW.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._APEXWSROW.Entity = null;
                        previousValue.APEXWSTAGs.Remove(this);
                    }
                    this._APEXWSROW.Entity = value;
                    if (value != null)
                    {
                        this._ROWID = value.ID;
                        value.APEXWSTAGs.Add(this);
                    }
                    else
                    {
                        this._ROWID = default(System.Nullable<decimal>);
                    }
                    this.SendPropertyChanged("APEXWSROW");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.APEXWSFILE in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.APEX$_WS_FILES")]
    public partial class APEXWSFILE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private decimal _WSAPPID;

        private System.Nullable<decimal> _DATAGRIDID;

        private System.Nullable<decimal> _ROWID;

        private System.Nullable<decimal> _WEBPAGEID;

        private string _COMPONENTLEVEL;

        private string _NAME;

        private string _IMAGEALIAS;

        private string _IMAGEATTRIBUTES;

        private byte[] _CONTENT;

        private System.Nullable<System.DateTime> _CONTENTLASTUPDATE;

        private string _MIMETYPE;

        private string _CONTENTCHARSET;

        private string _CONTENTFILENAME;

        private string _DESCRIPTION;

        private System.DateTime _CREATEDON;

        private string _CREATEDBY;

        private System.Nullable<System.DateTime> _UPDATEDON;

        private string _UPDATEDBY;
        #pragma warning restore 0649

        private EntityRef<APEXWSROW> _APEXWSROW;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnWSAPPIDChanging(decimal value);
        partial void OnWSAPPIDChanged();
        partial void OnDATAGRIDIDChanging(System.Nullable<decimal> value);
        partial void OnDATAGRIDIDChanged();
        partial void OnROWIDChanging(System.Nullable<decimal> value);
        partial void OnROWIDChanged();
        partial void OnWEBPAGEIDChanging(System.Nullable<decimal> value);
        partial void OnWEBPAGEIDChanged();
        partial void OnCOMPONENTLEVELChanging(string value);
        partial void OnCOMPONENTLEVELChanged();
        partial void OnNAMEChanging(string value);
        partial void OnNAMEChanged();
        partial void OnIMAGEALIASChanging(string value);
        partial void OnIMAGEALIASChanged();
        partial void OnIMAGEATTRIBUTESChanging(string value);
        partial void OnIMAGEATTRIBUTESChanged();
        partial void OnCONTENTChanging(byte[] value);
        partial void OnCONTENTChanged();
        partial void OnCONTENTLASTUPDATEChanging(System.Nullable<System.DateTime> value);
        partial void OnCONTENTLASTUPDATEChanged();
        partial void OnMIMETYPEChanging(string value);
        partial void OnMIMETYPEChanged();
        partial void OnCONTENTCHARSETChanging(string value);
        partial void OnCONTENTCHARSETChanged();
        partial void OnCONTENTFILENAMEChanging(string value);
        partial void OnCONTENTFILENAMEChanged();
        partial void OnDESCRIPTIONChanging(string value);
        partial void OnDESCRIPTIONChanged();
        partial void OnCREATEDONChanging(System.DateTime value);
        partial void OnCREATEDONChanged();
        partial void OnCREATEDBYChanging(string value);
        partial void OnCREATEDBYChanged();
        partial void OnUPDATEDONChanging(System.Nullable<System.DateTime> value);
        partial void OnUPDATEDONChanged();
        partial void OnUPDATEDBYChanging(string value);
        partial void OnUPDATEDBYChanged();
        #endregion

        public APEXWSFILE()
        {
            this._APEXWSROW  = default(EntityRef<APEXWSROW>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WSAPPID in the schema.
        /// </summary>
        [Column(Name = @"WS_APP_ID", Storage = "_WSAPPID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WSAPPID
        {
            get
            {
                return this._WSAPPID;
            }
            set
            {
                if (this._WSAPPID != value)
                {
                    this.OnWSAPPIDChanging(value);
                    this.SendPropertyChanging();
                    this._WSAPPID = value;
                    this.SendPropertyChanged("WSAPPID");
                    this.OnWSAPPIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAGRIDID in the schema.
        /// </summary>
        [Column(Name = @"DATA_GRID_ID", Storage = "_DATAGRIDID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> DATAGRIDID
        {
            get
            {
                return this._DATAGRIDID;
            }
            set
            {
                if (this._DATAGRIDID != value)
                {
                    this.OnDATAGRIDIDChanging(value);
                    this.SendPropertyChanging();
                    this._DATAGRIDID = value;
                    this.SendPropertyChanged("DATAGRIDID");
                    this.OnDATAGRIDIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ROWID in the schema.
        /// </summary>
        [Column(Name = @"ROW_ID", Storage = "_ROWID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> ROWID
        {
            get
            {
                return this._ROWID;
            }
            set
            {
                if (this._ROWID != value)
                {
                    if (this._APEXWSROW.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnROWIDChanging(value);
                    this.SendPropertyChanging();
                    this._ROWID = value;
                    this.SendPropertyChanged("ROWID");
                    this.OnROWIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WEBPAGEID in the schema.
        /// </summary>
        [Column(Name = @"WEBPAGE_ID", Storage = "_WEBPAGEID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> WEBPAGEID
        {
            get
            {
                return this._WEBPAGEID;
            }
            set
            {
                if (this._WEBPAGEID != value)
                {
                    this.OnWEBPAGEIDChanging(value);
                    this.SendPropertyChanging();
                    this._WEBPAGEID = value;
                    this.SendPropertyChanged("WEBPAGEID");
                    this.OnWEBPAGEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMPONENTLEVEL in the schema.
        /// </summary>
        [Column(Name = @"COMPONENT_LEVEL", Storage = "_COMPONENTLEVEL", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMPONENTLEVEL
        {
            get
            {
                return this._COMPONENTLEVEL;
            }
            set
            {
                if (this._COMPONENTLEVEL != value)
                {
                    this.OnCOMPONENTLEVELChanging(value);
                    this.SendPropertyChanging();
                    this._COMPONENTLEVEL = value;
                    this.SendPropertyChanged("COMPONENTLEVEL");
                    this.OnCOMPONENTLEVELChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAME in the schema.
        /// </summary>
        [Column(Storage = "_NAME", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAME
        {
            get
            {
                return this._NAME;
            }
            set
            {
                if (this._NAME != value)
                {
                    this.OnNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._NAME = value;
                    this.SendPropertyChanged("NAME");
                    this.OnNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IMAGEALIAS in the schema.
        /// </summary>
        [Column(Name = @"IMAGE_ALIAS", Storage = "_IMAGEALIAS", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string IMAGEALIAS
        {
            get
            {
                return this._IMAGEALIAS;
            }
            set
            {
                if (this._IMAGEALIAS != value)
                {
                    this.OnIMAGEALIASChanging(value);
                    this.SendPropertyChanging();
                    this._IMAGEALIAS = value;
                    this.SendPropertyChanged("IMAGEALIAS");
                    this.OnIMAGEALIASChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IMAGEATTRIBUTES in the schema.
        /// </summary>
        [Column(Name = @"IMAGE_ATTRIBUTES", Storage = "_IMAGEATTRIBUTES", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string IMAGEATTRIBUTES
        {
            get
            {
                return this._IMAGEATTRIBUTES;
            }
            set
            {
                if (this._IMAGEATTRIBUTES != value)
                {
                    this.OnIMAGEATTRIBUTESChanging(value);
                    this.SendPropertyChanging();
                    this._IMAGEATTRIBUTES = value;
                    this.SendPropertyChanged("IMAGEATTRIBUTES");
                    this.OnIMAGEATTRIBUTESChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONTENT in the schema.
        /// </summary>
        [Column(Storage = "_CONTENT", DbType = "BLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public byte[] CONTENT
        {
            get
            {
                return this._CONTENT;
            }
            set
            {
                if (this._CONTENT != value)
                {
                    this.OnCONTENTChanging(value);
                    this.SendPropertyChanging();
                    this._CONTENT = value;
                    this.SendPropertyChanged("CONTENT");
                    this.OnCONTENTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONTENTLASTUPDATE in the schema.
        /// </summary>
        [Column(Name = @"CONTENT_LAST_UPDATE", Storage = "_CONTENTLASTUPDATE", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> CONTENTLASTUPDATE
        {
            get
            {
                return this._CONTENTLASTUPDATE;
            }
            set
            {
                if (this._CONTENTLASTUPDATE != value)
                {
                    this.OnCONTENTLASTUPDATEChanging(value);
                    this.SendPropertyChanging();
                    this._CONTENTLASTUPDATE = value;
                    this.SendPropertyChanged("CONTENTLASTUPDATE");
                    this.OnCONTENTLASTUPDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MIMETYPE in the schema.
        /// </summary>
        [Column(Name = @"MIME_TYPE", Storage = "_MIMETYPE", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MIMETYPE
        {
            get
            {
                return this._MIMETYPE;
            }
            set
            {
                if (this._MIMETYPE != value)
                {
                    this.OnMIMETYPEChanging(value);
                    this.SendPropertyChanging();
                    this._MIMETYPE = value;
                    this.SendPropertyChanged("MIMETYPE");
                    this.OnMIMETYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONTENTCHARSET in the schema.
        /// </summary>
        [Column(Name = @"CONTENT_CHARSET", Storage = "_CONTENTCHARSET", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONTENTCHARSET
        {
            get
            {
                return this._CONTENTCHARSET;
            }
            set
            {
                if (this._CONTENTCHARSET != value)
                {
                    this.OnCONTENTCHARSETChanging(value);
                    this.SendPropertyChanging();
                    this._CONTENTCHARSET = value;
                    this.SendPropertyChanged("CONTENTCHARSET");
                    this.OnCONTENTCHARSETChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONTENTFILENAME in the schema.
        /// </summary>
        [Column(Name = @"CONTENT_FILENAME", Storage = "_CONTENTFILENAME", DbType = "VARCHAR2(500 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONTENTFILENAME
        {
            get
            {
                return this._CONTENTFILENAME;
            }
            set
            {
                if (this._CONTENTFILENAME != value)
                {
                    this.OnCONTENTFILENAMEChanging(value);
                    this.SendPropertyChanging();
                    this._CONTENTFILENAME = value;
                    this.SendPropertyChanged("CONTENTFILENAME");
                    this.OnCONTENTFILENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPTION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPTION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if (this._DESCRIPTION != value)
                {
                    this.OnDESCRIPTIONChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPTION = value;
                    this.SendPropertyChanged("DESCRIPTION");
                    this.OnDESCRIPTIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDON in the schema.
        /// </summary>
        [Column(Name = @"CREATED_ON", Storage = "_CREATEDON", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime CREATEDON
        {
            get
            {
                return this._CREATEDON;
            }
            set
            {
                if (this._CREATEDON != value)
                {
                    this.OnCREATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDON = value;
                    this.SendPropertyChanged("CREATEDON");
                    this.OnCREATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDBY in the schema.
        /// </summary>
        [Column(Name = @"CREATED_BY", Storage = "_CREATEDBY", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CREATEDBY
        {
            get
            {
                return this._CREATEDBY;
            }
            set
            {
                if (this._CREATEDBY != value)
                {
                    this.OnCREATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDBY = value;
                    this.SendPropertyChanged("CREATEDBY");
                    this.OnCREATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDON in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_ON", Storage = "_UPDATEDON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> UPDATEDON
        {
            get
            {
                return this._UPDATEDON;
            }
            set
            {
                if (this._UPDATEDON != value)
                {
                    this.OnUPDATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDON = value;
                    this.SendPropertyChanged("UPDATEDON");
                    this.OnUPDATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDBY in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_BY", Storage = "_UPDATEDBY", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UPDATEDBY
        {
            get
            {
                return this._UPDATEDBY;
            }
            set
            {
                if (this._UPDATEDBY != value)
                {
                    this.OnUPDATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDBY = value;
                    this.SendPropertyChanged("UPDATEDBY");
                    this.OnUPDATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APEXWSROW in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="APEXWSROW_APEXWSFILE", Storage="_APEXWSROW", ThisKey="ROWID", OtherKey="ID", IsForeignKey=true)]
        public APEXWSROW APEXWSROW
        {
            get
            {
                return this._APEXWSROW.Entity;
            }
            set
            {
                APEXWSROW previousValue = this._APEXWSROW.Entity;
                if ((previousValue != value) || (this._APEXWSROW.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._APEXWSROW.Entity = null;
                        previousValue.APEXWSFILEs.Remove(this);
                    }
                    this._APEXWSROW.Entity = value;
                    if (value != null)
                    {
                        this._ROWID = value.ID;
                        value.APEXWSFILEs.Add(this);
                    }
                    else
                    {
                        this._ROWID = default(System.Nullable<decimal>);
                    }
                    this.SendPropertyChanged("APEXWSROW");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.APEXWSWEBPGSECTIONHISTORY in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.APEX$_WS_WEBPG_SECTION_HISTORY")]
    public partial class APEXWSWEBPGSECTIONHISTORY
    {
        #pragma warning disable 0649

        private decimal _SECTIONID;

        private decimal _WSAPPID;

        private decimal _WEBPAGEID;

        private System.Nullable<decimal> _OLDDISPLAYSEQUENCE;

        private System.Nullable<decimal> _NEWDISPLAYSEQUENCE;

        private string _OLDTITLE;

        private string _NEWTITLE;

        private string _OLDCONTENT;

        private string _NEWCONTENT;

        private string _APPLICATIONUSERID;

        private System.DateTime _CHANGEDATE;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnSECTIONIDChanging(decimal value);
        partial void OnSECTIONIDChanged();
        partial void OnWSAPPIDChanging(decimal value);
        partial void OnWSAPPIDChanged();
        partial void OnWEBPAGEIDChanging(decimal value);
        partial void OnWEBPAGEIDChanged();
        partial void OnOLDDISPLAYSEQUENCEChanging(System.Nullable<decimal> value);
        partial void OnOLDDISPLAYSEQUENCEChanged();
        partial void OnNEWDISPLAYSEQUENCEChanging(System.Nullable<decimal> value);
        partial void OnNEWDISPLAYSEQUENCEChanged();
        partial void OnOLDTITLEChanging(string value);
        partial void OnOLDTITLEChanged();
        partial void OnNEWTITLEChanging(string value);
        partial void OnNEWTITLEChanged();
        partial void OnOLDCONTENTChanging(string value);
        partial void OnOLDCONTENTChanged();
        partial void OnNEWCONTENTChanging(string value);
        partial void OnNEWCONTENTChanged();
        partial void OnAPPLICATIONUSERIDChanging(string value);
        partial void OnAPPLICATIONUSERIDChanged();
        partial void OnCHANGEDATEChanging(System.DateTime value);
        partial void OnCHANGEDATEChanged();
        #endregion

        public APEXWSWEBPGSECTIONHISTORY()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for SECTIONID in the schema.
        /// </summary>
        [Column(Name = @"SECTION_ID", Storage = "_SECTIONID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal SECTIONID
        {
            get
            {
                return this._SECTIONID;
            }
            set
            {
                if (this._SECTIONID != value)
                {
                    this._SECTIONID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WSAPPID in the schema.
        /// </summary>
        [Column(Name = @"WS_APP_ID", Storage = "_WSAPPID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WSAPPID
        {
            get
            {
                return this._WSAPPID;
            }
            set
            {
                if (this._WSAPPID != value)
                {
                    this._WSAPPID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WEBPAGEID in the schema.
        /// </summary>
        [Column(Name = @"WEBPAGE_ID", Storage = "_WEBPAGEID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WEBPAGEID
        {
            get
            {
                return this._WEBPAGEID;
            }
            set
            {
                if (this._WEBPAGEID != value)
                {
                    this._WEBPAGEID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OLDDISPLAYSEQUENCE in the schema.
        /// </summary>
        [Column(Name = @"OLD_DISPLAY_SEQUENCE", Storage = "_OLDDISPLAYSEQUENCE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> OLDDISPLAYSEQUENCE
        {
            get
            {
                return this._OLDDISPLAYSEQUENCE;
            }
            set
            {
                if (this._OLDDISPLAYSEQUENCE != value)
                {
                    this._OLDDISPLAYSEQUENCE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NEWDISPLAYSEQUENCE in the schema.
        /// </summary>
        [Column(Name = @"NEW_DISPLAY_SEQUENCE", Storage = "_NEWDISPLAYSEQUENCE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> NEWDISPLAYSEQUENCE
        {
            get
            {
                return this._NEWDISPLAYSEQUENCE;
            }
            set
            {
                if (this._NEWDISPLAYSEQUENCE != value)
                {
                    this._NEWDISPLAYSEQUENCE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OLDTITLE in the schema.
        /// </summary>
        [Column(Name = @"OLD_TITLE", Storage = "_OLDTITLE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string OLDTITLE
        {
            get
            {
                return this._OLDTITLE;
            }
            set
            {
                if (this._OLDTITLE != value)
                {
                    this._OLDTITLE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NEWTITLE in the schema.
        /// </summary>
        [Column(Name = @"NEW_TITLE", Storage = "_NEWTITLE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NEWTITLE
        {
            get
            {
                return this._NEWTITLE;
            }
            set
            {
                if (this._NEWTITLE != value)
                {
                    this._NEWTITLE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OLDCONTENT in the schema.
        /// </summary>
        [Column(Name = @"OLD_CONTENT", Storage = "_OLDCONTENT", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string OLDCONTENT
        {
            get
            {
                return this._OLDCONTENT;
            }
            set
            {
                if (this._OLDCONTENT != value)
                {
                    this._OLDCONTENT = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NEWCONTENT in the schema.
        /// </summary>
        [Column(Name = @"NEW_CONTENT", Storage = "_NEWCONTENT", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string NEWCONTENT
        {
            get
            {
                return this._NEWCONTENT;
            }
            set
            {
                if (this._NEWCONTENT != value)
                {
                    this._NEWCONTENT = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APPLICATIONUSERID in the schema.
        /// </summary>
        [Column(Name = @"APPLICATION_USER_ID", Storage = "_APPLICATIONUSERID", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APPLICATIONUSERID
        {
            get
            {
                return this._APPLICATIONUSERID;
            }
            set
            {
                if (this._APPLICATIONUSERID != value)
                {
                    this._APPLICATIONUSERID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHANGEDATE in the schema.
        /// </summary>
        [Column(Name = @"CHANGE_DATE", Storage = "_CHANGEDATE", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime CHANGEDATE
        {
            get
            {
                return this._CHANGEDATE;
            }
            set
            {
                if (this._CHANGEDATE != value)
                {
                    this._CHANGEDATE = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.COMUNA in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.COMUNA")]
    public partial class COMUNA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDCOMUNA;

        private string _NOMBRECOMUNA;

        private decimal _PROVINCIAIDPROVINCIA;
        #pragma warning restore 0649

        private EntityRef<PROVINCIA> _PROVINCIA;

        private EntitySet<UBICACION> _UBICACIONs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDCOMUNAChanging(decimal value);
        partial void OnIDCOMUNAChanged();
        partial void OnNOMBRECOMUNAChanging(string value);
        partial void OnNOMBRECOMUNAChanged();
        partial void OnPROVINCIAIDPROVINCIAChanging(decimal value);
        partial void OnPROVINCIAIDPROVINCIAChanged();
        #endregion

        public COMUNA()
        {
            this._PROVINCIA  = default(EntityRef<PROVINCIA>);
            this._UBICACIONs = new EntitySet<UBICACION>(new Action<UBICACION>(this.attach_UBICACIONs), new Action<UBICACION>(this.detach_UBICACIONs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDCOMUNA in the schema.
        /// </summary>
        [Column(Storage = "_IDCOMUNA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDCOMUNA
        {
            get
            {
                return this._IDCOMUNA;
            }
            set
            {
                if (this._IDCOMUNA != value)
                {
                    this.OnIDCOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._IDCOMUNA = value;
                    this.SendPropertyChanged("IDCOMUNA");
                    this.OnIDCOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRECOMUNA in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRECOMUNA", CanBeNull = false, DbType = "VARCHAR2(250 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRECOMUNA
        {
            get
            {
                return this._NOMBRECOMUNA;
            }
            set
            {
                if (this._NOMBRECOMUNA != value)
                {
                    this.OnNOMBRECOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRECOMUNA = value;
                    this.SendPropertyChanged("NOMBRECOMUNA");
                    this.OnNOMBRECOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINCIAIDPROVINCIA in the schema.
        /// </summary>
        [Column(Name = @"PROVINCIA_IDPROVINCIA", Storage = "_PROVINCIAIDPROVINCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PROVINCIAIDPROVINCIA
        {
            get
            {
                return this._PROVINCIAIDPROVINCIA;
            }
            set
            {
                if (this._PROVINCIAIDPROVINCIA != value)
                {
                    if (this._PROVINCIA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPROVINCIAIDPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._PROVINCIAIDPROVINCIA = value;
                    this.SendPropertyChanged("PROVINCIAIDPROVINCIA");
                    this.OnPROVINCIAIDPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINCIA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PROVINCIA_COMUNA", Storage="_PROVINCIA", ThisKey="PROVINCIAIDPROVINCIA", OtherKey="IDPROVINCIA", IsForeignKey=true)]
        public PROVINCIA PROVINCIA
        {
            get
            {
                return this._PROVINCIA.Entity;
            }
            set
            {
                PROVINCIA previousValue = this._PROVINCIA.Entity;
                if ((previousValue != value) || (this._PROVINCIA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._PROVINCIA.Entity = null;
                        previousValue.COMUNAs.Remove(this);
                    }
                    this._PROVINCIA.Entity = value;
                    if (value != null)
                    {
                        this._PROVINCIAIDPROVINCIA = value.IDPROVINCIA;
                        value.COMUNAs.Add(this);
                    }
                    else
                    {
                        this._PROVINCIAIDPROVINCIA = default(decimal);
                    }
                    this.SendPropertyChanged("PROVINCIA");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UBICACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="COMUNA_UBICACION", Storage="_UBICACIONs", ThisKey="IDCOMUNA", OtherKey="COMUNAIDCOMUNA", DeleteRule="NO ACTION")]
        public EntitySet<UBICACION> UBICACIONs
        {
            get
            {
                return this._UBICACIONs;
            }
            set
            {
                this._UBICACIONs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_UBICACIONs(UBICACION entity)
        {
            this.SendPropertyChanging("UBICACIONs");
            entity.COMUNA = this;
        }
    
        private void detach_UBICACIONs(UBICACION entity)
        {
            this.SendPropertyChanging("UBICACIONs");
            entity.COMUNA = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.DOCUMENTO in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.DOCUMENTO")]
    public partial class DOCUMENTO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDDOCUMENTO;

        private decimal _VALORTOTALDOCUMENTO;

        private System.DateTime _FECHADOCUMENTO;

        private decimal _TIPOODOCUMENTO;

        private decimal _USUARIOIDUSUARIO;

        private string _ESTADODOCUMENTO;
        #pragma warning restore 0649

        private EntityRef<USUARIO> _USUARIO;

        private EntitySet<DETALLEDOC> _DETALLEDOCs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDDOCUMENTOChanging(decimal value);
        partial void OnIDDOCUMENTOChanged();
        partial void OnVALORTOTALDOCUMENTOChanging(decimal value);
        partial void OnVALORTOTALDOCUMENTOChanged();
        partial void OnFECHADOCUMENTOChanging(System.DateTime value);
        partial void OnFECHADOCUMENTOChanged();
        partial void OnTIPOODOCUMENTOChanging(decimal value);
        partial void OnTIPOODOCUMENTOChanged();
        partial void OnUSUARIOIDUSUARIOChanging(decimal value);
        partial void OnUSUARIOIDUSUARIOChanged();
        partial void OnESTADODOCUMENTOChanging(string value);
        partial void OnESTADODOCUMENTOChanged();
        #endregion

        public DOCUMENTO()
        {
            this._USUARIO  = default(EntityRef<USUARIO>);
            this._DETALLEDOCs = new EntitySet<DETALLEDOC>(new Action<DETALLEDOC>(this.attach_DETALLEDOCs), new Action<DETALLEDOC>(this.detach_DETALLEDOCs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDDOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_IDDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDDOCUMENTO
        {
            get
            {
                return this._IDDOCUMENTO;
            }
            set
            {
                if (this._IDDOCUMENTO != value)
                {
                    this.OnIDDOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._IDDOCUMENTO = value;
                    this.SendPropertyChanged("IDDOCUMENTO");
                    this.OnIDDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORTOTALDOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORTOTALDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORTOTALDOCUMENTO
        {
            get
            {
                return this._VALORTOTALDOCUMENTO;
            }
            set
            {
                if (this._VALORTOTALDOCUMENTO != value)
                {
                    this.OnVALORTOTALDOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORTOTALDOCUMENTO = value;
                    this.SendPropertyChanged("VALORTOTALDOCUMENTO");
                    this.OnVALORTOTALDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FECHADOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_FECHADOCUMENTO", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime FECHADOCUMENTO
        {
            get
            {
                return this._FECHADOCUMENTO;
            }
            set
            {
                if (this._FECHADOCUMENTO != value)
                {
                    this.OnFECHADOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._FECHADOCUMENTO = value;
                    this.SendPropertyChanged("FECHADOCUMENTO");
                    this.OnFECHADOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOODOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_TIPOODOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TIPOODOCUMENTO
        {
            get
            {
                return this._TIPOODOCUMENTO;
            }
            set
            {
                if (this._TIPOODOCUMENTO != value)
                {
                    this.OnTIPOODOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._TIPOODOCUMENTO = value;
                    this.SendPropertyChanged("TIPOODOCUMENTO");
                    this.OnTIPOODOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOIDUSUARIO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_IDUSUARIO", Storage = "_USUARIOIDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal USUARIOIDUSUARIO
        {
            get
            {
                return this._USUARIOIDUSUARIO;
            }
            set
            {
                if (this._USUARIOIDUSUARIO != value)
                {
                    if (this._USUARIO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUSUARIOIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOIDUSUARIO = value;
                    this.SendPropertyChanged("USUARIOIDUSUARIO");
                    this.OnUSUARIOIDUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADODOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADODOCUMENTO", CanBeNull = false, DbType = "CHAR(1) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADODOCUMENTO
        {
            get
            {
                return this._ESTADODOCUMENTO;
            }
            set
            {
                if (this._ESTADODOCUMENTO != value)
                {
                    this.OnESTADODOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADODOCUMENTO = value;
                    this.SendPropertyChanged("ESTADODOCUMENTO");
                    this.OnESTADODOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="USUARIO_DOCUMENTO", Storage="_USUARIO", ThisKey="USUARIOIDUSUARIO", OtherKey="IDUSUARIO", IsForeignKey=true)]
        public USUARIO USUARIO
        {
            get
            {
                return this._USUARIO.Entity;
            }
            set
            {
                USUARIO previousValue = this._USUARIO.Entity;
                if ((previousValue != value) || (this._USUARIO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._USUARIO.Entity = null;
                        previousValue.DOCUMENTOs.Remove(this);
                    }
                    this._USUARIO.Entity = value;
                    if (value != null)
                    {
                        this._USUARIOIDUSUARIO = value.IDUSUARIO;
                        value.DOCUMENTOs.Add(this);
                    }
                    else
                    {
                        this._USUARIOIDUSUARIO = default(decimal);
                    }
                    this.SendPropertyChanged("USUARIO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DETALLEDOCs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DOCUMENTO_DETALLEDOC", Storage="_DETALLEDOCs", ThisKey="IDDOCUMENTO", OtherKey="DOCUMENTOIDDOCUMENTO", DeleteRule="NO ACTION")]
        public EntitySet<DETALLEDOC> DETALLEDOCs
        {
            get
            {
                return this._DETALLEDOCs;
            }
            set
            {
                this._DETALLEDOCs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DETALLEDOCs(DETALLEDOC entity)
        {
            this.SendPropertyChanging("DETALLEDOCs");
            entity.DOCUMENTO = this;
        }
    
        private void detach_DETALLEDOCs(DETALLEDOC entity)
        {
            this.SendPropertyChanging("DETALLEDOCs");
            entity.DOCUMENTO = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.GEOLOC in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.GEOLOC")]
    public partial class GEOLOC : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDGEOLOC;

        private string _LATITUDGEOLOC;

        private string _LONGITUDGEOLOC;

        private decimal _UBICACIONIDUBICACION;

        private decimal _UBICACIONIDUSUARIO;
        #pragma warning restore 0649

        private EntityRef<UBICACION> _UBICACION;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDGEOLOCChanging(decimal value);
        partial void OnIDGEOLOCChanged();
        partial void OnLATITUDGEOLOCChanging(string value);
        partial void OnLATITUDGEOLOCChanged();
        partial void OnLONGITUDGEOLOCChanging(string value);
        partial void OnLONGITUDGEOLOCChanged();
        partial void OnUBICACIONIDUBICACIONChanging(decimal value);
        partial void OnUBICACIONIDUBICACIONChanged();
        partial void OnUBICACIONIDUSUARIOChanging(decimal value);
        partial void OnUBICACIONIDUSUARIOChanged();
        #endregion

        public GEOLOC()
        {
            this._UBICACION  = default(EntityRef<UBICACION>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDGEOLOC in the schema.
        /// </summary>
        [Column(Storage = "_IDGEOLOC", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDGEOLOC
        {
            get
            {
                return this._IDGEOLOC;
            }
            set
            {
                if (this._IDGEOLOC != value)
                {
                    this.OnIDGEOLOCChanging(value);
                    this.SendPropertyChanging();
                    this._IDGEOLOC = value;
                    this.SendPropertyChanged("IDGEOLOC");
                    this.OnIDGEOLOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LATITUDGEOLOC in the schema.
        /// </summary>
        [Column(Storage = "_LATITUDGEOLOC", CanBeNull = false, DbType = "VARCHAR2(10 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string LATITUDGEOLOC
        {
            get
            {
                return this._LATITUDGEOLOC;
            }
            set
            {
                if (this._LATITUDGEOLOC != value)
                {
                    this.OnLATITUDGEOLOCChanging(value);
                    this.SendPropertyChanging();
                    this._LATITUDGEOLOC = value;
                    this.SendPropertyChanged("LATITUDGEOLOC");
                    this.OnLATITUDGEOLOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LONGITUDGEOLOC in the schema.
        /// </summary>
        [Column(Storage = "_LONGITUDGEOLOC", CanBeNull = false, DbType = "VARCHAR2(10 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string LONGITUDGEOLOC
        {
            get
            {
                return this._LONGITUDGEOLOC;
            }
            set
            {
                if (this._LONGITUDGEOLOC != value)
                {
                    this.OnLONGITUDGEOLOCChanging(value);
                    this.SendPropertyChanging();
                    this._LONGITUDGEOLOC = value;
                    this.SendPropertyChanged("LONGITUDGEOLOC");
                    this.OnLONGITUDGEOLOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UBICACIONIDUBICACION in the schema.
        /// </summary>
        [Column(Name = @"UBICACION_IDUBICACION", Storage = "_UBICACIONIDUBICACION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal UBICACIONIDUBICACION
        {
            get
            {
                return this._UBICACIONIDUBICACION;
            }
            set
            {
                if (this._UBICACIONIDUBICACION != value)
                {
                    if (this._UBICACION.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUBICACIONIDUBICACIONChanging(value);
                    this.SendPropertyChanging();
                    this._UBICACIONIDUBICACION = value;
                    this.SendPropertyChanged("UBICACIONIDUBICACION");
                    this.OnUBICACIONIDUBICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UBICACIONIDUSUARIO in the schema.
        /// </summary>
        [Column(Name = @"UBICACION_IDUSUARIO", Storage = "_UBICACIONIDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal UBICACIONIDUSUARIO
        {
            get
            {
                return this._UBICACIONIDUSUARIO;
            }
            set
            {
                if (this._UBICACIONIDUSUARIO != value)
                {
                    if (this._UBICACION.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUBICACIONIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._UBICACIONIDUSUARIO = value;
                    this.SendPropertyChanged("UBICACIONIDUSUARIO");
                    this.OnUBICACIONIDUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UBICACION in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UBICACION_GEOLOC", Storage="_UBICACION", ThisKey="UBICACIONIDUBICACION,UBICACIONIDUSUARIO", OtherKey="IDUBICACION,USUARIOIDUSUARIO", IsForeignKey=true)]
        public UBICACION UBICACION
        {
            get
            {
                return this._UBICACION.Entity;
            }
            set
            {
                UBICACION previousValue = this._UBICACION.Entity;
                if ((previousValue != value) || (this._UBICACION.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._UBICACION.Entity = null;
                        previousValue.GEOLOCs.Remove(this);
                    }
                    this._UBICACION.Entity = value;
                    if (value != null)
                    {
                        this._UBICACIONIDUBICACION = value.IDUBICACION;
                        this._UBICACIONIDUSUARIO = value.USUARIOIDUSUARIO;
                        value.GEOLOCs.Add(this);
                    }
                    else
                    {
                        this._UBICACIONIDUBICACION = default(decimal);
                        this._UBICACIONIDUSUARIO = default(decimal);
                    }
                    this.SendPropertyChanged("UBICACION");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.PRODUCTO in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.PRODUCTO")]
    public partial class PRODUCTO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDPRODUCTO;

        private string _NOMBREPRODUCTO;

        private string _DESCRIPCIONPRODUCTO;

        private decimal _VALORPRODUCTO;

        private string _ESTADOPRODUCTO;

        private byte[] _FOTOPRODUCTO;
        #pragma warning restore 0649

        private EntitySet<DETALLEDOC> _DETALLEDOCs;

        private EntitySet<PRODUCTOPRODUCTOR> _PRODUCTOPRODUCTORs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDPRODUCTOChanging(decimal value);
        partial void OnIDPRODUCTOChanged();
        partial void OnNOMBREPRODUCTOChanging(string value);
        partial void OnNOMBREPRODUCTOChanged();
        partial void OnDESCRIPCIONPRODUCTOChanging(string value);
        partial void OnDESCRIPCIONPRODUCTOChanged();
        partial void OnVALORPRODUCTOChanging(decimal value);
        partial void OnVALORPRODUCTOChanged();
        partial void OnESTADOPRODUCTOChanging(string value);
        partial void OnESTADOPRODUCTOChanged();
        partial void OnFOTOPRODUCTOChanging(byte[] value);
        partial void OnFOTOPRODUCTOChanged();
        #endregion

        public PRODUCTO()
        {
            this._DETALLEDOCs = new EntitySet<DETALLEDOC>(new Action<DETALLEDOC>(this.attach_DETALLEDOCs), new Action<DETALLEDOC>(this.detach_DETALLEDOCs));
            this._PRODUCTOPRODUCTORs = new EntitySet<PRODUCTOPRODUCTOR>(new Action<PRODUCTOPRODUCTOR>(this.attach_PRODUCTOPRODUCTORs), new Action<PRODUCTOPRODUCTOR>(this.detach_PRODUCTOPRODUCTORs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_IDPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDPRODUCTO
        {
            get
            {
                return this._IDPRODUCTO;
            }
            set
            {
                if (this._IDPRODUCTO != value)
                {
                    this.OnIDPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._IDPRODUCTO = value;
                    this.SendPropertyChanged("IDPRODUCTO");
                    this.OnIDPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPRODUCTO", CanBeNull = false, DbType = "VARCHAR2(50 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPRODUCTO
        {
            get
            {
                return this._NOMBREPRODUCTO;
            }
            set
            {
                if (this._NOMBREPRODUCTO != value)
                {
                    this.OnNOMBREPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPRODUCTO = value;
                    this.SendPropertyChanged("NOMBREPRODUCTO");
                    this.OnNOMBREPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCIONPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCIONPRODUCTO", DbType = "VARCHAR2(250 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCIONPRODUCTO
        {
            get
            {
                return this._DESCRIPCIONPRODUCTO;
            }
            set
            {
                if (this._DESCRIPCIONPRODUCTO != value)
                {
                    this.OnDESCRIPCIONPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCIONPRODUCTO = value;
                    this.SendPropertyChanged("DESCRIPCIONPRODUCTO");
                    this.OnDESCRIPCIONPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORPRODUCTO
        {
            get
            {
                return this._VALORPRODUCTO;
            }
            set
            {
                if (this._VALORPRODUCTO != value)
                {
                    this.OnVALORPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORPRODUCTO = value;
                    this.SendPropertyChanged("VALORPRODUCTO");
                    this.OnVALORPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADOPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADOPRODUCTO", CanBeNull = false, DbType = "CHAR(1) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADOPRODUCTO
        {
            get
            {
                return this._ESTADOPRODUCTO;
            }
            set
            {
                if (this._ESTADOPRODUCTO != value)
                {
                    this.OnESTADOPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADOPRODUCTO = value;
                    this.SendPropertyChanged("ESTADOPRODUCTO");
                    this.OnESTADOPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FOTOPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_FOTOPRODUCTO", DbType = "BLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public byte[] FOTOPRODUCTO
        {
            get
            {
                return this._FOTOPRODUCTO;
            }
            set
            {
                if (this._FOTOPRODUCTO != value)
                {
                    this.OnFOTOPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._FOTOPRODUCTO = value;
                    this.SendPropertyChanged("FOTOPRODUCTO");
                    this.OnFOTOPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DETALLEDOCs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PRODUCTO_DETALLEDOC", Storage="_DETALLEDOCs", ThisKey="IDPRODUCTO", OtherKey="PRODUCTOIDPRODUCTO", DeleteRule="NO ACTION")]
        public EntitySet<DETALLEDOC> DETALLEDOCs
        {
            get
            {
                return this._DETALLEDOCs;
            }
            set
            {
                this._DETALLEDOCs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTOPRODUCTORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PRODUCTO_PRODUCTOPRODUCTOR", Storage="_PRODUCTOPRODUCTORs", ThisKey="IDPRODUCTO", OtherKey="PRODUCTOIDPRODUCTO", DeleteRule="NO ACTION")]
        public EntitySet<PRODUCTOPRODUCTOR> PRODUCTOPRODUCTORs
        {
            get
            {
                return this._PRODUCTOPRODUCTORs;
            }
            set
            {
                this._PRODUCTOPRODUCTORs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DETALLEDOCs(DETALLEDOC entity)
        {
            this.SendPropertyChanging("DETALLEDOCs");
            entity.PRODUCTO = this;
        }
    
        private void detach_DETALLEDOCs(DETALLEDOC entity)
        {
            this.SendPropertyChanging("DETALLEDOCs");
            entity.PRODUCTO = null;
        }

        private void attach_PRODUCTOPRODUCTORs(PRODUCTOPRODUCTOR entity)
        {
            this.SendPropertyChanging("PRODUCTOPRODUCTORs");
            entity.PRODUCTO = this;
        }
    
        private void detach_PRODUCTOPRODUCTORs(PRODUCTOPRODUCTOR entity)
        {
            this.SendPropertyChanging("PRODUCTOPRODUCTORs");
            entity.PRODUCTO = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.PROVINCIA in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.PROVINCIA")]
    public partial class PROVINCIA : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDPROVINCIA;

        private string _NOMBREPROVINCIA;

        private decimal _REGIONIDREGION;
        #pragma warning restore 0649

        private EntitySet<COMUNA> _COMUNAs;

        private EntityRef<REGION> _REGION;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDPROVINCIAChanging(decimal value);
        partial void OnIDPROVINCIAChanged();
        partial void OnNOMBREPROVINCIAChanging(string value);
        partial void OnNOMBREPROVINCIAChanged();
        partial void OnREGIONIDREGIONChanging(decimal value);
        partial void OnREGIONIDREGIONChanged();
        #endregion

        public PROVINCIA()
        {
            this._COMUNAs = new EntitySet<COMUNA>(new Action<COMUNA>(this.attach_COMUNAs), new Action<COMUNA>(this.detach_COMUNAs));
            this._REGION  = default(EntityRef<REGION>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDPROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_IDPROVINCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDPROVINCIA
        {
            get
            {
                return this._IDPROVINCIA;
            }
            set
            {
                if (this._IDPROVINCIA != value)
                {
                    this.OnIDPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._IDPROVINCIA = value;
                    this.SendPropertyChanged("IDPROVINCIA");
                    this.OnIDPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREPROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPROVINCIA", CanBeNull = false, DbType = "VARCHAR2(250 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPROVINCIA
        {
            get
            {
                return this._NOMBREPROVINCIA;
            }
            set
            {
                if (this._NOMBREPROVINCIA != value)
                {
                    this.OnNOMBREPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPROVINCIA = value;
                    this.SendPropertyChanged("NOMBREPROVINCIA");
                    this.OnNOMBREPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGIONIDREGION in the schema.
        /// </summary>
        [Column(Name = @"REGION_IDREGION", Storage = "_REGIONIDREGION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal REGIONIDREGION
        {
            get
            {
                return this._REGIONIDREGION;
            }
            set
            {
                if (this._REGIONIDREGION != value)
                {
                    if (this._REGION.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnREGIONIDREGIONChanging(value);
                    this.SendPropertyChanging();
                    this._REGIONIDREGION = value;
                    this.SendPropertyChanged("REGIONIDREGION");
                    this.OnREGIONIDREGIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMUNAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PROVINCIA_COMUNA", Storage="_COMUNAs", ThisKey="IDPROVINCIA", OtherKey="PROVINCIAIDPROVINCIA", DeleteRule="NO ACTION")]
        public EntitySet<COMUNA> COMUNAs
        {
            get
            {
                return this._COMUNAs;
            }
            set
            {
                this._COMUNAs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for REGION in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="REGION_PROVINCIA", Storage="_REGION", ThisKey="REGIONIDREGION", OtherKey="IDREGION", IsForeignKey=true)]
        public REGION REGION
        {
            get
            {
                return this._REGION.Entity;
            }
            set
            {
                REGION previousValue = this._REGION.Entity;
                if ((previousValue != value) || (this._REGION.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._REGION.Entity = null;
                        previousValue.PROVINCIAs.Remove(this);
                    }
                    this._REGION.Entity = value;
                    if (value != null)
                    {
                        this._REGIONIDREGION = value.IDREGION;
                        value.PROVINCIAs.Add(this);
                    }
                    else
                    {
                        this._REGIONIDREGION = default(decimal);
                    }
                    this.SendPropertyChanged("REGION");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_COMUNAs(COMUNA entity)
        {
            this.SendPropertyChanging("COMUNAs");
            entity.PROVINCIA = this;
        }
    
        private void detach_COMUNAs(COMUNA entity)
        {
            this.SendPropertyChanging("COMUNAs");
            entity.PROVINCIA = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.REGION in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.REGION")]
    public partial class REGION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDREGION;

        private string _NOMBREREGION;
        #pragma warning restore 0649

        private EntitySet<PROVINCIA> _PROVINCIAs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDREGIONChanging(decimal value);
        partial void OnIDREGIONChanged();
        partial void OnNOMBREREGIONChanging(string value);
        partial void OnNOMBREREGIONChanged();
        #endregion

        public REGION()
        {
            this._PROVINCIAs = new EntitySet<PROVINCIA>(new Action<PROVINCIA>(this.attach_PROVINCIAs), new Action<PROVINCIA>(this.detach_PROVINCIAs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDREGION in the schema.
        /// </summary>
        [Column(Storage = "_IDREGION", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDREGION
        {
            get
            {
                return this._IDREGION;
            }
            set
            {
                if (this._IDREGION != value)
                {
                    this.OnIDREGIONChanging(value);
                    this.SendPropertyChanging();
                    this._IDREGION = value;
                    this.SendPropertyChanged("IDREGION");
                    this.OnIDREGIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREREGION in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREREGION", CanBeNull = false, DbType = "VARCHAR2(250 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREREGION
        {
            get
            {
                return this._NOMBREREGION;
            }
            set
            {
                if (this._NOMBREREGION != value)
                {
                    this.OnNOMBREREGIONChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREREGION = value;
                    this.SendPropertyChanged("NOMBREREGION");
                    this.OnNOMBREREGIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINCIAs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="REGION_PROVINCIA", Storage="_PROVINCIAs", ThisKey="IDREGION", OtherKey="REGIONIDREGION", DeleteRule="NO ACTION")]
        public EntitySet<PROVINCIA> PROVINCIAs
        {
            get
            {
                return this._PROVINCIAs;
            }
            set
            {
                this._PROVINCIAs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_PROVINCIAs(PROVINCIA entity)
        {
            this.SendPropertyChanging("PROVINCIAs");
            entity.REGION = this;
        }
    
        private void detach_PROVINCIAs(PROVINCIA entity)
        {
            this.SendPropertyChanging("PROVINCIAs");
            entity.REGION = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.UBICACION in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.UBICACION")]
    public partial class UBICACION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDUBICACION;

        private string _NOMBREUBICACION;

        private string _DESCRIPCIONUBICACION;

        private string _DIRECCIONUBICACION;

        private string _ESTADOUBICACION;

        private decimal _COMUNAIDCOMUNA;

        private decimal _USUARIOIDUSUARIO;
        #pragma warning restore 0649

        private EntitySet<GEOLOC> _GEOLOCs;

        private EntityRef<USUARIO> _USUARIO;

        private EntityRef<COMUNA> _COMUNA;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDUBICACIONChanging(decimal value);
        partial void OnIDUBICACIONChanged();
        partial void OnNOMBREUBICACIONChanging(string value);
        partial void OnNOMBREUBICACIONChanged();
        partial void OnDESCRIPCIONUBICACIONChanging(string value);
        partial void OnDESCRIPCIONUBICACIONChanged();
        partial void OnDIRECCIONUBICACIONChanging(string value);
        partial void OnDIRECCIONUBICACIONChanged();
        partial void OnESTADOUBICACIONChanging(string value);
        partial void OnESTADOUBICACIONChanged();
        partial void OnCOMUNAIDCOMUNAChanging(decimal value);
        partial void OnCOMUNAIDCOMUNAChanged();
        partial void OnUSUARIOIDUSUARIOChanging(decimal value);
        partial void OnUSUARIOIDUSUARIOChanged();
        #endregion

        public UBICACION()
        {
            this._GEOLOCs = new EntitySet<GEOLOC>(new Action<GEOLOC>(this.attach_GEOLOCs), new Action<GEOLOC>(this.detach_GEOLOCs));
            this._USUARIO  = default(EntityRef<USUARIO>);
            this._COMUNA  = default(EntityRef<COMUNA>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDUBICACION in the schema.
        /// </summary>
        [Column(Storage = "_IDUBICACION", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDUBICACION
        {
            get
            {
                return this._IDUBICACION;
            }
            set
            {
                if (this._IDUBICACION != value)
                {
                    this.OnIDUBICACIONChanging(value);
                    this.SendPropertyChanging();
                    this._IDUBICACION = value;
                    this.SendPropertyChanged("IDUBICACION");
                    this.OnIDUBICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREUBICACION in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREUBICACION", CanBeNull = false, DbType = "VARCHAR2(25 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREUBICACION
        {
            get
            {
                return this._NOMBREUBICACION;
            }
            set
            {
                if (this._NOMBREUBICACION != value)
                {
                    this.OnNOMBREUBICACIONChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREUBICACION = value;
                    this.SendPropertyChanged("NOMBREUBICACION");
                    this.OnNOMBREUBICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCIONUBICACION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCIONUBICACION", DbType = "VARCHAR2(250 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCIONUBICACION
        {
            get
            {
                return this._DESCRIPCIONUBICACION;
            }
            set
            {
                if (this._DESCRIPCIONUBICACION != value)
                {
                    this.OnDESCRIPCIONUBICACIONChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCIONUBICACION = value;
                    this.SendPropertyChanged("DESCRIPCIONUBICACION");
                    this.OnDESCRIPCIONUBICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIRECCIONUBICACION in the schema.
        /// </summary>
        [Column(Storage = "_DIRECCIONUBICACION", DbType = "VARCHAR2(250 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIRECCIONUBICACION
        {
            get
            {
                return this._DIRECCIONUBICACION;
            }
            set
            {
                if (this._DIRECCIONUBICACION != value)
                {
                    this.OnDIRECCIONUBICACIONChanging(value);
                    this.SendPropertyChanging();
                    this._DIRECCIONUBICACION = value;
                    this.SendPropertyChanged("DIRECCIONUBICACION");
                    this.OnDIRECCIONUBICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADOUBICACION in the schema.
        /// </summary>
        [Column(Storage = "_ESTADOUBICACION", DbType = "CHAR(1) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADOUBICACION
        {
            get
            {
                return this._ESTADOUBICACION;
            }
            set
            {
                if (this._ESTADOUBICACION != value)
                {
                    this.OnESTADOUBICACIONChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADOUBICACION = value;
                    this.SendPropertyChanged("ESTADOUBICACION");
                    this.OnESTADOUBICACIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMUNAIDCOMUNA in the schema.
        /// </summary>
        [Column(Name = @"COMUNA_IDCOMUNA", Storage = "_COMUNAIDCOMUNA", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal COMUNAIDCOMUNA
        {
            get
            {
                return this._COMUNAIDCOMUNA;
            }
            set
            {
                if (this._COMUNAIDCOMUNA != value)
                {
                    if (this._COMUNA.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCOMUNAIDCOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._COMUNAIDCOMUNA = value;
                    this.SendPropertyChanged("COMUNAIDCOMUNA");
                    this.OnCOMUNAIDCOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOIDUSUARIO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_IDUSUARIO", Storage = "_USUARIOIDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal USUARIOIDUSUARIO
        {
            get
            {
                return this._USUARIOIDUSUARIO;
            }
            set
            {
                if (this._USUARIOIDUSUARIO != value)
                {
                    if (this._USUARIO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUSUARIOIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOIDUSUARIO = value;
                    this.SendPropertyChanged("USUARIOIDUSUARIO");
                    this.OnUSUARIOIDUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GEOLOCs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UBICACION_GEOLOC", Storage="_GEOLOCs", ThisKey="IDUBICACION,USUARIOIDUSUARIO", OtherKey="UBICACIONIDUBICACION,UBICACIONIDUSUARIO", DeleteRule="NO ACTION")]
        public EntitySet<GEOLOC> GEOLOCs
        {
            get
            {
                return this._GEOLOCs;
            }
            set
            {
                this._GEOLOCs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="USUARIO_UBICACION", Storage="_USUARIO", ThisKey="USUARIOIDUSUARIO", OtherKey="IDUSUARIO", IsForeignKey=true)]
        public USUARIO USUARIO
        {
            get
            {
                return this._USUARIO.Entity;
            }
            set
            {
                USUARIO previousValue = this._USUARIO.Entity;
                if ((previousValue != value) || (this._USUARIO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._USUARIO.Entity = null;
                        previousValue.UBICACIONs.Remove(this);
                    }
                    this._USUARIO.Entity = value;
                    if (value != null)
                    {
                        this._USUARIOIDUSUARIO = value.IDUSUARIO;
                        value.UBICACIONs.Add(this);
                    }
                    else
                    {
                        this._USUARIOIDUSUARIO = default(decimal);
                    }
                    this.SendPropertyChanged("USUARIO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMUNA in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="COMUNA_UBICACION", Storage="_COMUNA", ThisKey="COMUNAIDCOMUNA", OtherKey="IDCOMUNA", IsForeignKey=true)]
        public COMUNA COMUNA
        {
            get
            {
                return this._COMUNA.Entity;
            }
            set
            {
                COMUNA previousValue = this._COMUNA.Entity;
                if ((previousValue != value) || (this._COMUNA.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._COMUNA.Entity = null;
                        previousValue.UBICACIONs.Remove(this);
                    }
                    this._COMUNA.Entity = value;
                    if (value != null)
                    {
                        this._COMUNAIDCOMUNA = value.IDCOMUNA;
                        value.UBICACIONs.Add(this);
                    }
                    else
                    {
                        this._COMUNAIDCOMUNA = default(decimal);
                    }
                    this.SendPropertyChanged("COMUNA");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_GEOLOCs(GEOLOC entity)
        {
            this.SendPropertyChanging("GEOLOCs");
            entity.UBICACION = this;
        }
    
        private void detach_GEOLOCs(GEOLOC entity)
        {
            this.SendPropertyChanging("GEOLOCs");
            entity.UBICACION = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.USUARIO in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.USUARIO")]
    public partial class USUARIO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDUSUARIO;

        private string _RUTUSUARIO;

        private string _NOMBREUSUARIO;

        private string _APELLIDOPATERNOUSUARIO;

        private string _APELLIDOMATERNOUSUARIO;

        private string _CORREOUSUARIO;

        private decimal _TELEFONOUSUARIO;

        private string _DESCRIPCIONUSUARIO;

        private string _CLAVEUSUARIO;

        private decimal _TIPOUSUARIO;

        private string _ESTADOUSUARIO;

        private byte[] _FOTOUSUARIO;
        #pragma warning restore 0649

        private EntitySet<DOCUMENTO> _DOCUMENTOs;

        private EntitySet<UBICACION> _UBICACIONs;

        private EntitySet<DETALLEDOC> _DETALLEDOCs;

        private EntitySet<PRODUCTOPRODUCTOR> _PRODUCTOPRODUCTORs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDUSUARIOChanging(decimal value);
        partial void OnIDUSUARIOChanged();
        partial void OnRUTUSUARIOChanging(string value);
        partial void OnRUTUSUARIOChanged();
        partial void OnNOMBREUSUARIOChanging(string value);
        partial void OnNOMBREUSUARIOChanged();
        partial void OnAPELLIDOPATERNOUSUARIOChanging(string value);
        partial void OnAPELLIDOPATERNOUSUARIOChanged();
        partial void OnAPELLIDOMATERNOUSUARIOChanging(string value);
        partial void OnAPELLIDOMATERNOUSUARIOChanged();
        partial void OnCORREOUSUARIOChanging(string value);
        partial void OnCORREOUSUARIOChanged();
        partial void OnTELEFONOUSUARIOChanging(decimal value);
        partial void OnTELEFONOUSUARIOChanged();
        partial void OnDESCRIPCIONUSUARIOChanging(string value);
        partial void OnDESCRIPCIONUSUARIOChanged();
        partial void OnCLAVEUSUARIOChanging(string value);
        partial void OnCLAVEUSUARIOChanged();
        partial void OnTIPOUSUARIOChanging(decimal value);
        partial void OnTIPOUSUARIOChanged();
        partial void OnESTADOUSUARIOChanging(string value);
        partial void OnESTADOUSUARIOChanged();
        partial void OnFOTOUSUARIOChanging(byte[] value);
        partial void OnFOTOUSUARIOChanged();
        #endregion

        public USUARIO()
        {
            this._DOCUMENTOs = new EntitySet<DOCUMENTO>(new Action<DOCUMENTO>(this.attach_DOCUMENTOs), new Action<DOCUMENTO>(this.detach_DOCUMENTOs));
            this._UBICACIONs = new EntitySet<UBICACION>(new Action<UBICACION>(this.attach_UBICACIONs), new Action<UBICACION>(this.detach_UBICACIONs));
            this._DETALLEDOCs = new EntitySet<DETALLEDOC>(new Action<DETALLEDOC>(this.attach_DETALLEDOCs), new Action<DETALLEDOC>(this.detach_DETALLEDOCs));
            this._PRODUCTOPRODUCTORs = new EntitySet<PRODUCTOPRODUCTOR>(new Action<PRODUCTOPRODUCTOR>(this.attach_PRODUCTOPRODUCTORs), new Action<PRODUCTOPRODUCTOR>(this.detach_PRODUCTOPRODUCTORs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_IDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDUSUARIO
        {
            get
            {
                return this._IDUSUARIO;
            }
            set
            {
                if (this._IDUSUARIO != value)
                {
                    this.OnIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._IDUSUARIO = value;
                    this.SendPropertyChanged("IDUSUARIO");
                    this.OnIDUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RUTUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_RUTUSUARIO", CanBeNull = false, DbType = "VARCHAR2(15 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUTUSUARIO
        {
            get
            {
                return this._RUTUSUARIO;
            }
            set
            {
                if (this._RUTUSUARIO != value)
                {
                    this.OnRUTUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._RUTUSUARIO = value;
                    this.SendPropertyChanged("RUTUSUARIO");
                    this.OnRUTUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREUSUARIO", CanBeNull = false, DbType = "VARCHAR2(50 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREUSUARIO
        {
            get
            {
                return this._NOMBREUSUARIO;
            }
            set
            {
                if (this._NOMBREUSUARIO != value)
                {
                    this.OnNOMBREUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREUSUARIO = value;
                    this.SendPropertyChanged("NOMBREUSUARIO");
                    this.OnNOMBREUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APELLIDOPATERNOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_APELLIDOPATERNOUSUARIO", CanBeNull = false, DbType = "VARCHAR2(50 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APELLIDOPATERNOUSUARIO
        {
            get
            {
                return this._APELLIDOPATERNOUSUARIO;
            }
            set
            {
                if (this._APELLIDOPATERNOUSUARIO != value)
                {
                    this.OnAPELLIDOPATERNOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._APELLIDOPATERNOUSUARIO = value;
                    this.SendPropertyChanged("APELLIDOPATERNOUSUARIO");
                    this.OnAPELLIDOPATERNOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APELLIDOMATERNOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_APELLIDOMATERNOUSUARIO", CanBeNull = false, DbType = "VARCHAR2(50 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APELLIDOMATERNOUSUARIO
        {
            get
            {
                return this._APELLIDOMATERNOUSUARIO;
            }
            set
            {
                if (this._APELLIDOMATERNOUSUARIO != value)
                {
                    this.OnAPELLIDOMATERNOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._APELLIDOMATERNOUSUARIO = value;
                    this.SendPropertyChanged("APELLIDOMATERNOUSUARIO");
                    this.OnAPELLIDOMATERNOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_CORREOUSUARIO", CanBeNull = false, DbType = "VARCHAR2(150 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREOUSUARIO
        {
            get
            {
                return this._CORREOUSUARIO;
            }
            set
            {
                if (this._CORREOUSUARIO != value)
                {
                    this.OnCORREOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREOUSUARIO = value;
                    this.SendPropertyChanged("CORREOUSUARIO");
                    this.OnCORREOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TELEFONOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_TELEFONOUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TELEFONOUSUARIO
        {
            get
            {
                return this._TELEFONOUSUARIO;
            }
            set
            {
                if (this._TELEFONOUSUARIO != value)
                {
                    this.OnTELEFONOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._TELEFONOUSUARIO = value;
                    this.SendPropertyChanged("TELEFONOUSUARIO");
                    this.OnTELEFONOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCIONUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCIONUSUARIO", DbType = "VARCHAR2(450 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCIONUSUARIO
        {
            get
            {
                return this._DESCRIPCIONUSUARIO;
            }
            set
            {
                if (this._DESCRIPCIONUSUARIO != value)
                {
                    this.OnDESCRIPCIONUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCIONUSUARIO = value;
                    this.SendPropertyChanged("DESCRIPCIONUSUARIO");
                    this.OnDESCRIPCIONUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLAVEUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_CLAVEUSUARIO", CanBeNull = false, DbType = "VARCHAR2(25 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLAVEUSUARIO
        {
            get
            {
                return this._CLAVEUSUARIO;
            }
            set
            {
                if (this._CLAVEUSUARIO != value)
                {
                    this.OnCLAVEUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._CLAVEUSUARIO = value;
                    this.SendPropertyChanged("CLAVEUSUARIO");
                    this.OnCLAVEUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_TIPOUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TIPOUSUARIO
        {
            get
            {
                return this._TIPOUSUARIO;
            }
            set
            {
                if (this._TIPOUSUARIO != value)
                {
                    this.OnTIPOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._TIPOUSUARIO = value;
                    this.SendPropertyChanged("TIPOUSUARIO");
                    this.OnTIPOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADOUSUARIO", CanBeNull = false, DbType = "CHAR(1) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADOUSUARIO
        {
            get
            {
                return this._ESTADOUSUARIO;
            }
            set
            {
                if (this._ESTADOUSUARIO != value)
                {
                    this.OnESTADOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADOUSUARIO = value;
                    this.SendPropertyChanged("ESTADOUSUARIO");
                    this.OnESTADOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FOTOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_FOTOUSUARIO", DbType = "BLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public byte[] FOTOUSUARIO
        {
            get
            {
                return this._FOTOUSUARIO;
            }
            set
            {
                if (this._FOTOUSUARIO != value)
                {
                    this.OnFOTOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._FOTOUSUARIO = value;
                    this.SendPropertyChanged("FOTOUSUARIO");
                    this.OnFOTOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DOCUMENTOs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="USUARIO_DOCUMENTO", Storage="_DOCUMENTOs", ThisKey="IDUSUARIO", OtherKey="USUARIOIDUSUARIO", DeleteRule="NO ACTION")]
        public EntitySet<DOCUMENTO> DOCUMENTOs
        {
            get
            {
                return this._DOCUMENTOs;
            }
            set
            {
                this._DOCUMENTOs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for UBICACIONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="USUARIO_UBICACION", Storage="_UBICACIONs", ThisKey="IDUSUARIO", OtherKey="USUARIOIDUSUARIO", DeleteRule="NO ACTION")]
        public EntitySet<UBICACION> UBICACIONs
        {
            get
            {
                return this._UBICACIONs;
            }
            set
            {
                this._UBICACIONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for DETALLEDOCs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="USUARIO_DETALLEDOC", Storage="_DETALLEDOCs", ThisKey="IDUSUARIO", OtherKey="USUARIOIDUSUARIO", DeleteRule="NO ACTION")]
        public EntitySet<DETALLEDOC> DETALLEDOCs
        {
            get
            {
                return this._DETALLEDOCs;
            }
            set
            {
                this._DETALLEDOCs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTOPRODUCTORs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="USUARIO_PRODUCTOPRODUCTOR", Storage="_PRODUCTOPRODUCTORs", ThisKey="IDUSUARIO", OtherKey="USUARIOIDUSUARIO", DeleteRule="NO ACTION")]
        public EntitySet<PRODUCTOPRODUCTOR> PRODUCTOPRODUCTORs
        {
            get
            {
                return this._PRODUCTOPRODUCTORs;
            }
            set
            {
                this._PRODUCTOPRODUCTORs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DOCUMENTOs(DOCUMENTO entity)
        {
            this.SendPropertyChanging("DOCUMENTOs");
            entity.USUARIO = this;
        }
    
        private void detach_DOCUMENTOs(DOCUMENTO entity)
        {
            this.SendPropertyChanging("DOCUMENTOs");
            entity.USUARIO = null;
        }

        private void attach_UBICACIONs(UBICACION entity)
        {
            this.SendPropertyChanging("UBICACIONs");
            entity.USUARIO = this;
        }
    
        private void detach_UBICACIONs(UBICACION entity)
        {
            this.SendPropertyChanging("UBICACIONs");
            entity.USUARIO = null;
        }

        private void attach_DETALLEDOCs(DETALLEDOC entity)
        {
            this.SendPropertyChanging("DETALLEDOCs");
            entity.USUARIO = this;
        }
    
        private void detach_DETALLEDOCs(DETALLEDOC entity)
        {
            this.SendPropertyChanging("DETALLEDOCs");
            entity.USUARIO = null;
        }

        private void attach_PRODUCTOPRODUCTORs(PRODUCTOPRODUCTOR entity)
        {
            this.SendPropertyChanging("PRODUCTOPRODUCTORs");
            entity.USUARIO = this;
        }
    
        private void detach_PRODUCTOPRODUCTORs(PRODUCTOPRODUCTOR entity)
        {
            this.SendPropertyChanging("PRODUCTOPRODUCTORs");
            entity.USUARIO = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.DETALLEDOC in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.DETALLEDOC")]
    public partial class DETALLEDOC : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDDETALLEDOC;

        private decimal _CANTIDADPEDIDODETALLEDOC;

        private decimal _VALORPRODDETALLEDOC;

        private decimal _SUBTOTALPRODUCTODETALLEDOC;

        private decimal _DOCUMENTOIDDOCUMENTO;

        private decimal _PRODUCTOIDPRODUCTO;

        private decimal _USUARIOIDUSUARIO;
        #pragma warning restore 0649

        private EntityRef<USUARIO> _USUARIO;

        private EntityRef<PRODUCTO> _PRODUCTO;

        private EntityRef<DOCUMENTO> _DOCUMENTO;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDDETALLEDOCChanging(decimal value);
        partial void OnIDDETALLEDOCChanged();
        partial void OnCANTIDADPEDIDODETALLEDOCChanging(decimal value);
        partial void OnCANTIDADPEDIDODETALLEDOCChanged();
        partial void OnVALORPRODDETALLEDOCChanging(decimal value);
        partial void OnVALORPRODDETALLEDOCChanged();
        partial void OnSUBTOTALPRODUCTODETALLEDOCChanging(decimal value);
        partial void OnSUBTOTALPRODUCTODETALLEDOCChanged();
        partial void OnDOCUMENTOIDDOCUMENTOChanging(decimal value);
        partial void OnDOCUMENTOIDDOCUMENTOChanged();
        partial void OnPRODUCTOIDPRODUCTOChanging(decimal value);
        partial void OnPRODUCTOIDPRODUCTOChanged();
        partial void OnUSUARIOIDUSUARIOChanging(decimal value);
        partial void OnUSUARIOIDUSUARIOChanged();
        #endregion

        public DETALLEDOC()
        {
            this._USUARIO  = default(EntityRef<USUARIO>);
            this._PRODUCTO  = default(EntityRef<PRODUCTO>);
            this._DOCUMENTO  = default(EntityRef<DOCUMENTO>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDDETALLEDOC in the schema.
        /// </summary>
        [Column(Storage = "_IDDETALLEDOC", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDDETALLEDOC
        {
            get
            {
                return this._IDDETALLEDOC;
            }
            set
            {
                if (this._IDDETALLEDOC != value)
                {
                    this.OnIDDETALLEDOCChanging(value);
                    this.SendPropertyChanging();
                    this._IDDETALLEDOC = value;
                    this.SendPropertyChanged("IDDETALLEDOC");
                    this.OnIDDETALLEDOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CANTIDADPEDIDODETALLEDOC in the schema.
        /// </summary>
        [Column(Storage = "_CANTIDADPEDIDODETALLEDOC", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CANTIDADPEDIDODETALLEDOC
        {
            get
            {
                return this._CANTIDADPEDIDODETALLEDOC;
            }
            set
            {
                if (this._CANTIDADPEDIDODETALLEDOC != value)
                {
                    this.OnCANTIDADPEDIDODETALLEDOCChanging(value);
                    this.SendPropertyChanging();
                    this._CANTIDADPEDIDODETALLEDOC = value;
                    this.SendPropertyChanged("CANTIDADPEDIDODETALLEDOC");
                    this.OnCANTIDADPEDIDODETALLEDOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORPRODDETALLEDOC in the schema.
        /// </summary>
        [Column(Storage = "_VALORPRODDETALLEDOC", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORPRODDETALLEDOC
        {
            get
            {
                return this._VALORPRODDETALLEDOC;
            }
            set
            {
                if (this._VALORPRODDETALLEDOC != value)
                {
                    this.OnVALORPRODDETALLEDOCChanging(value);
                    this.SendPropertyChanging();
                    this._VALORPRODDETALLEDOC = value;
                    this.SendPropertyChanged("VALORPRODDETALLEDOC");
                    this.OnVALORPRODDETALLEDOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SUBTOTALPRODUCTODETALLEDOC in the schema.
        /// </summary>
        [Column(Storage = "_SUBTOTALPRODUCTODETALLEDOC", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal SUBTOTALPRODUCTODETALLEDOC
        {
            get
            {
                return this._SUBTOTALPRODUCTODETALLEDOC;
            }
            set
            {
                if (this._SUBTOTALPRODUCTODETALLEDOC != value)
                {
                    this.OnSUBTOTALPRODUCTODETALLEDOCChanging(value);
                    this.SendPropertyChanging();
                    this._SUBTOTALPRODUCTODETALLEDOC = value;
                    this.SendPropertyChanged("SUBTOTALPRODUCTODETALLEDOC");
                    this.OnSUBTOTALPRODUCTODETALLEDOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DOCUMENTOIDDOCUMENTO in the schema.
        /// </summary>
        [Column(Name = @"DOCUMENTO_IDDOCUMENTO", Storage = "_DOCUMENTOIDDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DOCUMENTOIDDOCUMENTO
        {
            get
            {
                return this._DOCUMENTOIDDOCUMENTO;
            }
            set
            {
                if (this._DOCUMENTOIDDOCUMENTO != value)
                {
                    if (this._DOCUMENTO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDOCUMENTOIDDOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._DOCUMENTOIDDOCUMENTO = value;
                    this.SendPropertyChanged("DOCUMENTOIDDOCUMENTO");
                    this.OnDOCUMENTOIDDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTOIDPRODUCTO in the schema.
        /// </summary>
        [Column(Name = @"PRODUCTO_IDPRODUCTO", Storage = "_PRODUCTOIDPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PRODUCTOIDPRODUCTO
        {
            get
            {
                return this._PRODUCTOIDPRODUCTO;
            }
            set
            {
                if (this._PRODUCTOIDPRODUCTO != value)
                {
                    if (this._PRODUCTO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPRODUCTOIDPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTOIDPRODUCTO = value;
                    this.SendPropertyChanged("PRODUCTOIDPRODUCTO");
                    this.OnPRODUCTOIDPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOIDUSUARIO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_IDUSUARIO", Storage = "_USUARIOIDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal USUARIOIDUSUARIO
        {
            get
            {
                return this._USUARIOIDUSUARIO;
            }
            set
            {
                if (this._USUARIOIDUSUARIO != value)
                {
                    if (this._USUARIO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUSUARIOIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOIDUSUARIO = value;
                    this.SendPropertyChanged("USUARIOIDUSUARIO");
                    this.OnUSUARIOIDUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="USUARIO_DETALLEDOC", Storage="_USUARIO", ThisKey="USUARIOIDUSUARIO", OtherKey="IDUSUARIO", IsForeignKey=true)]
        public USUARIO USUARIO
        {
            get
            {
                return this._USUARIO.Entity;
            }
            set
            {
                USUARIO previousValue = this._USUARIO.Entity;
                if ((previousValue != value) || (this._USUARIO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._USUARIO.Entity = null;
                        previousValue.DETALLEDOCs.Remove(this);
                    }
                    this._USUARIO.Entity = value;
                    if (value != null)
                    {
                        this._USUARIOIDUSUARIO = value.IDUSUARIO;
                        value.DETALLEDOCs.Add(this);
                    }
                    else
                    {
                        this._USUARIOIDUSUARIO = default(decimal);
                    }
                    this.SendPropertyChanged("USUARIO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PRODUCTO_DETALLEDOC", Storage="_PRODUCTO", ThisKey="PRODUCTOIDPRODUCTO", OtherKey="IDPRODUCTO", IsForeignKey=true)]
        public PRODUCTO PRODUCTO
        {
            get
            {
                return this._PRODUCTO.Entity;
            }
            set
            {
                PRODUCTO previousValue = this._PRODUCTO.Entity;
                if ((previousValue != value) || (this._PRODUCTO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._PRODUCTO.Entity = null;
                        previousValue.DETALLEDOCs.Remove(this);
                    }
                    this._PRODUCTO.Entity = value;
                    if (value != null)
                    {
                        this._PRODUCTOIDPRODUCTO = value.IDPRODUCTO;
                        value.DETALLEDOCs.Add(this);
                    }
                    else
                    {
                        this._PRODUCTOIDPRODUCTO = default(decimal);
                    }
                    this.SendPropertyChanged("PRODUCTO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DOCUMENTO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DOCUMENTO_DETALLEDOC", Storage="_DOCUMENTO", ThisKey="DOCUMENTOIDDOCUMENTO", OtherKey="IDDOCUMENTO", IsForeignKey=true)]
        public DOCUMENTO DOCUMENTO
        {
            get
            {
                return this._DOCUMENTO.Entity;
            }
            set
            {
                DOCUMENTO previousValue = this._DOCUMENTO.Entity;
                if ((previousValue != value) || (this._DOCUMENTO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._DOCUMENTO.Entity = null;
                        previousValue.DETALLEDOCs.Remove(this);
                    }
                    this._DOCUMENTO.Entity = value;
                    if (value != null)
                    {
                        this._DOCUMENTOIDDOCUMENTO = value.IDDOCUMENTO;
                        value.DETALLEDOCs.Add(this);
                    }
                    else
                    {
                        this._DOCUMENTOIDDOCUMENTO = default(decimal);
                    }
                    this.SendPropertyChanged("DOCUMENTO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.PRODUCTOPRODUCTOR in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.PRODUCTOPRODUCTOR")]
    public partial class PRODUCTOPRODUCTOR : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDPRODUCTOPRODUCTOR;

        private decimal _STOCKPRODUCTOPRODUCTOR;

        private string _ESTADOPRODUCTOPRODUCTOR;

        private decimal _USUARIOIDUSUARIO;

        private decimal _PRODUCTOIDPRODUCTO;
        #pragma warning restore 0649

        private EntityRef<USUARIO> _USUARIO;

        private EntityRef<PRODUCTO> _PRODUCTO;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDPRODUCTOPRODUCTORChanging(decimal value);
        partial void OnIDPRODUCTOPRODUCTORChanged();
        partial void OnSTOCKPRODUCTOPRODUCTORChanging(decimal value);
        partial void OnSTOCKPRODUCTOPRODUCTORChanged();
        partial void OnESTADOPRODUCTOPRODUCTORChanging(string value);
        partial void OnESTADOPRODUCTOPRODUCTORChanged();
        partial void OnUSUARIOIDUSUARIOChanging(decimal value);
        partial void OnUSUARIOIDUSUARIOChanged();
        partial void OnPRODUCTOIDPRODUCTOChanging(decimal value);
        partial void OnPRODUCTOIDPRODUCTOChanged();
        #endregion

        public PRODUCTOPRODUCTOR()
        {
            this._USUARIO  = default(EntityRef<USUARIO>);
            this._PRODUCTO  = default(EntityRef<PRODUCTO>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDPRODUCTOPRODUCTOR in the schema.
        /// </summary>
        [Column(Storage = "_IDPRODUCTOPRODUCTOR", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal IDPRODUCTOPRODUCTOR
        {
            get
            {
                return this._IDPRODUCTOPRODUCTOR;
            }
            set
            {
                if (this._IDPRODUCTOPRODUCTOR != value)
                {
                    this.OnIDPRODUCTOPRODUCTORChanging(value);
                    this.SendPropertyChanging();
                    this._IDPRODUCTOPRODUCTOR = value;
                    this.SendPropertyChanged("IDPRODUCTOPRODUCTOR");
                    this.OnIDPRODUCTOPRODUCTORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STOCKPRODUCTOPRODUCTOR in the schema.
        /// </summary>
        [Column(Storage = "_STOCKPRODUCTOPRODUCTOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal STOCKPRODUCTOPRODUCTOR
        {
            get
            {
                return this._STOCKPRODUCTOPRODUCTOR;
            }
            set
            {
                if (this._STOCKPRODUCTOPRODUCTOR != value)
                {
                    this.OnSTOCKPRODUCTOPRODUCTORChanging(value);
                    this.SendPropertyChanging();
                    this._STOCKPRODUCTOPRODUCTOR = value;
                    this.SendPropertyChanged("STOCKPRODUCTOPRODUCTOR");
                    this.OnSTOCKPRODUCTOPRODUCTORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADOPRODUCTOPRODUCTOR in the schema.
        /// </summary>
        [Column(Storage = "_ESTADOPRODUCTOPRODUCTOR", CanBeNull = false, DbType = "CHAR(1) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADOPRODUCTOPRODUCTOR
        {
            get
            {
                return this._ESTADOPRODUCTOPRODUCTOR;
            }
            set
            {
                if (this._ESTADOPRODUCTOPRODUCTOR != value)
                {
                    this.OnESTADOPRODUCTOPRODUCTORChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADOPRODUCTOPRODUCTOR = value;
                    this.SendPropertyChanged("ESTADOPRODUCTOPRODUCTOR");
                    this.OnESTADOPRODUCTOPRODUCTORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOIDUSUARIO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_IDUSUARIO", Storage = "_USUARIOIDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal USUARIOIDUSUARIO
        {
            get
            {
                return this._USUARIOIDUSUARIO;
            }
            set
            {
                if (this._USUARIOIDUSUARIO != value)
                {
                    if (this._USUARIO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUSUARIOIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOIDUSUARIO = value;
                    this.SendPropertyChanged("USUARIOIDUSUARIO");
                    this.OnUSUARIOIDUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTOIDPRODUCTO in the schema.
        /// </summary>
        [Column(Name = @"PRODUCTO_IDPRODUCTO", Storage = "_PRODUCTOIDPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PRODUCTOIDPRODUCTO
        {
            get
            {
                return this._PRODUCTOIDPRODUCTO;
            }
            set
            {
                if (this._PRODUCTOIDPRODUCTO != value)
                {
                    if (this._PRODUCTO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPRODUCTOIDPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTOIDPRODUCTO = value;
                    this.SendPropertyChanged("PRODUCTOIDPRODUCTO");
                    this.OnPRODUCTOIDPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="USUARIO_PRODUCTOPRODUCTOR", Storage="_USUARIO", ThisKey="USUARIOIDUSUARIO", OtherKey="IDUSUARIO", IsForeignKey=true)]
        public USUARIO USUARIO
        {
            get
            {
                return this._USUARIO.Entity;
            }
            set
            {
                USUARIO previousValue = this._USUARIO.Entity;
                if ((previousValue != value) || (this._USUARIO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._USUARIO.Entity = null;
                        previousValue.PRODUCTOPRODUCTORs.Remove(this);
                    }
                    this._USUARIO.Entity = value;
                    if (value != null)
                    {
                        this._USUARIOIDUSUARIO = value.IDUSUARIO;
                        value.PRODUCTOPRODUCTORs.Add(this);
                    }
                    else
                    {
                        this._USUARIOIDUSUARIO = default(decimal);
                    }
                    this.SendPropertyChanged("USUARIO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="PRODUCTO_PRODUCTOPRODUCTOR", Storage="_PRODUCTO", ThisKey="PRODUCTOIDPRODUCTO", OtherKey="IDPRODUCTO", IsForeignKey=true)]
        public PRODUCTO PRODUCTO
        {
            get
            {
                return this._PRODUCTO.Entity;
            }
            set
            {
                PRODUCTO previousValue = this._PRODUCTO.Entity;
                if ((previousValue != value) || (this._PRODUCTO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._PRODUCTO.Entity = null;
                        previousValue.PRODUCTOPRODUCTORs.Remove(this);
                    }
                    this._PRODUCTO.Entity = value;
                    if (value != null)
                    {
                        this._PRODUCTOIDPRODUCTO = value.IDPRODUCTO;
                        value.PRODUCTOPRODUCTORs.Add(this);
                    }
                    else
                    {
                        this._PRODUCTOIDPRODUCTO = default(decimal);
                    }
                    this.SendPropertyChanged("PRODUCTO");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.DEPT in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.DEPT")]
    public partial class DEPT : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _DEPTNO;

        private string _DNAME;

        private string _LOC;
        #pragma warning restore 0649

        private EntitySet<EMP> _EMPs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDEPTNOChanging(int value);
        partial void OnDEPTNOChanged();
        partial void OnDNAMEChanging(string value);
        partial void OnDNAMEChanged();
        partial void OnLOCChanging(string value);
        partial void OnLOCChanged();
        #endregion

        public DEPT()
        {
            this._EMPs = new EntitySet<EMP>(new Action<EMP>(this.attach_EMPs), new Action<EMP>(this.detach_EMPs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for DEPTNO in the schema.
        /// </summary>
        [Column(Storage = "_DEPTNO", CanBeNull = false, DbType = "NUMBER(2) NOT NULL", IsPrimaryKey = true)]
        public int DEPTNO
        {
            get
            {
                return this._DEPTNO;
            }
            set
            {
                if (this._DEPTNO != value)
                {
                    this.OnDEPTNOChanging(value);
                    this.SendPropertyChanging();
                    this._DEPTNO = value;
                    this.SendPropertyChanged("DEPTNO");
                    this.OnDEPTNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DNAME in the schema.
        /// </summary>
        [Column(Storage = "_DNAME", DbType = "VARCHAR2(14 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DNAME
        {
            get
            {
                return this._DNAME;
            }
            set
            {
                if (this._DNAME != value)
                {
                    this.OnDNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._DNAME = value;
                    this.SendPropertyChanged("DNAME");
                    this.OnDNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOC in the schema.
        /// </summary>
        [Column(Storage = "_LOC", DbType = "VARCHAR2(13 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LOC
        {
            get
            {
                return this._LOC;
            }
            set
            {
                if (this._LOC != value)
                {
                    this.OnLOCChanging(value);
                    this.SendPropertyChanging();
                    this._LOC = value;
                    this.SendPropertyChanged("LOC");
                    this.OnLOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEPT_EMP", Storage="_EMPs", ThisKey="DEPTNO", OtherKey="DEPTNO", DeleteRule="NO ACTION")]
        public EntitySet<EMP> EMPs
        {
            get
            {
                return this._EMPs;
            }
            set
            {
                this._EMPs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_EMPs(EMP entity)
        {
            this.SendPropertyChanging("EMPs");
            entity.DEPT = this;
        }
    
        private void detach_EMPs(EMP entity)
        {
            this.SendPropertyChanging("EMPs");
            entity.DEPT = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.EMP in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.EMP")]
    public partial class EMP : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _EMPNO;

        private string _ENAME;

        private string _JOB;

        private System.Nullable<int> _MGR;

        private System.Nullable<System.DateTime> _HIREDATE;

        private System.Nullable<double> _SAL;

        private System.Nullable<double> _COMM;

        private System.Nullable<int> _DEPTNO;
        #pragma warning restore 0649

        private EntitySet<EMP> _EMPs_MGR;

        private EntityRef<EMP> _EMP_MGR;

        private EntityRef<DEPT> _DEPT;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnEMPNOChanging(int value);
        partial void OnEMPNOChanged();
        partial void OnENAMEChanging(string value);
        partial void OnENAMEChanged();
        partial void OnJOBChanging(string value);
        partial void OnJOBChanged();
        partial void OnMGRChanging(System.Nullable<int> value);
        partial void OnMGRChanged();
        partial void OnHIREDATEChanging(System.Nullable<System.DateTime> value);
        partial void OnHIREDATEChanged();
        partial void OnSALChanging(System.Nullable<double> value);
        partial void OnSALChanged();
        partial void OnCOMMChanging(System.Nullable<double> value);
        partial void OnCOMMChanged();
        partial void OnDEPTNOChanging(System.Nullable<int> value);
        partial void OnDEPTNOChanged();
        #endregion

        public EMP()
        {
            this._EMPs_MGR = new EntitySet<EMP>(new Action<EMP>(this.attach_EMPs_MGR), new Action<EMP>(this.detach_EMPs_MGR));
            this._EMP_MGR  = default(EntityRef<EMP>);
            this._DEPT  = default(EntityRef<DEPT>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for EMPNO in the schema.
        /// </summary>
        [Column(Storage = "_EMPNO", CanBeNull = false, DbType = "NUMBER(4) NOT NULL", IsPrimaryKey = true)]
        public int EMPNO
        {
            get
            {
                return this._EMPNO;
            }
            set
            {
                if (this._EMPNO != value)
                {
                    this.OnEMPNOChanging(value);
                    this.SendPropertyChanging();
                    this._EMPNO = value;
                    this.SendPropertyChanged("EMPNO");
                    this.OnEMPNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ENAME in the schema.
        /// </summary>
        [Column(Storage = "_ENAME", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ENAME
        {
            get
            {
                return this._ENAME;
            }
            set
            {
                if (this._ENAME != value)
                {
                    this.OnENAMEChanging(value);
                    this.SendPropertyChanging();
                    this._ENAME = value;
                    this.SendPropertyChanged("ENAME");
                    this.OnENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for JOB in the schema.
        /// </summary>
        [Column(Storage = "_JOB", DbType = "VARCHAR2(9 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string JOB
        {
            get
            {
                return this._JOB;
            }
            set
            {
                if (this._JOB != value)
                {
                    this.OnJOBChanging(value);
                    this.SendPropertyChanging();
                    this._JOB = value;
                    this.SendPropertyChanged("JOB");
                    this.OnJOBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MGR in the schema.
        /// </summary>
        [Column(Storage = "_MGR", DbType = "NUMBER(4) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> MGR
        {
            get
            {
                return this._MGR;
            }
            set
            {
                if (this._MGR != value)
                {
                    if (this._EMP_MGR.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMGRChanging(value);
                    this.SendPropertyChanging();
                    this._MGR = value;
                    this.SendPropertyChanged("MGR");
                    this.OnMGRChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HIREDATE in the schema.
        /// </summary>
        [Column(Storage = "_HIREDATE", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> HIREDATE
        {
            get
            {
                return this._HIREDATE;
            }
            set
            {
                if (this._HIREDATE != value)
                {
                    this.OnHIREDATEChanging(value);
                    this.SendPropertyChanging();
                    this._HIREDATE = value;
                    this.SendPropertyChanged("HIREDATE");
                    this.OnHIREDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SAL in the schema.
        /// </summary>
        [Column(Storage = "_SAL", DbType = "NUMBER(7,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> SAL
        {
            get
            {
                return this._SAL;
            }
            set
            {
                if (this._SAL != value)
                {
                    this.OnSALChanging(value);
                    this.SendPropertyChanging();
                    this._SAL = value;
                    this.SendPropertyChanged("SAL");
                    this.OnSALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMM in the schema.
        /// </summary>
        [Column(Storage = "_COMM", DbType = "NUMBER(7,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> COMM
        {
            get
            {
                return this._COMM;
            }
            set
            {
                if (this._COMM != value)
                {
                    this.OnCOMMChanging(value);
                    this.SendPropertyChanging();
                    this._COMM = value;
                    this.SendPropertyChanged("COMM");
                    this.OnCOMMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPTNO in the schema.
        /// </summary>
        [Column(Storage = "_DEPTNO", DbType = "NUMBER(2) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> DEPTNO
        {
            get
            {
                return this._DEPTNO;
            }
            set
            {
                if (this._DEPTNO != value)
                {
                    if (this._DEPT.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDEPTNOChanging(value);
                    this.SendPropertyChanging();
                    this._DEPTNO = value;
                    this.SendPropertyChanged("DEPTNO");
                    this.OnDEPTNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMPs_MGR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="EMP_EMP", Storage="_EMPs_MGR", ThisKey="EMPNO", OtherKey="MGR", DeleteRule="NO ACTION")]
        public EntitySet<EMP> EMPs_MGR
        {
            get
            {
                return this._EMPs_MGR;
            }
            set
            {
                this._EMPs_MGR.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for EMP_MGR in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="EMP_EMP", Storage="_EMP_MGR", ThisKey="MGR", OtherKey="EMPNO", IsForeignKey=true)]
        public EMP EMP_MGR
        {
            get
            {
                return this._EMP_MGR.Entity;
            }
            set
            {
                EMP previousValue = this._EMP_MGR.Entity;
                if ((previousValue != value) || (this._EMP_MGR.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._EMP_MGR.Entity = null;
                        previousValue.EMPs_MGR.Remove(this);
                    }
                    this._EMP_MGR.Entity = value;
                    if (value != null)
                    {
                        this._MGR = value.EMPNO;
                        value.EMPs_MGR.Add(this);
                    }
                    else
                    {
                        this._MGR = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("EMP_MGR");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEPT in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEPT_EMP", Storage="_DEPT", ThisKey="DEPTNO", OtherKey="DEPTNO", IsForeignKey=true)]
        public DEPT DEPT
        {
            get
            {
                return this._DEPT.Entity;
            }
            set
            {
                DEPT previousValue = this._DEPT.Entity;
                if ((previousValue != value) || (this._DEPT.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._DEPT.Entity = null;
                        previousValue.EMPs.Remove(this);
                    }
                    this._DEPT.Entity = value;
                    if (value != null)
                    {
                        this._DEPTNO = value.DEPTNO;
                        value.EMPs.Add(this);
                    }
                    else
                    {
                        this._DEPTNO = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("DEPT");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_EMPs_MGR(EMP entity)
        {
            this.SendPropertyChanging("EMPs_MGR");
            entity.EMP_MGR = this;
        }
    
        private void detach_EMPs_MGR(EMP entity)
        {
            this.SendPropertyChanging("EMPs_MGR");
            entity.EMP_MGR = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.DEMOUSER in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.DEMO_USERS")]
    public partial class DEMOUSER : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _USERID;

        private string _USERNAME;

        private string _PASSWORD;

        private System.Nullable<System.DateTime> _CREATEDON;

        private System.Nullable<decimal> _QUOTA;

        private string _PRODUCTS;

        private System.Nullable<System.DateTime> _EXPIRESON;

        private string _ADMINUSER;
        #pragma warning restore 0649

        private EntitySet<DEMOORDER> _DEMOORDERs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnUSERIDChanging(decimal value);
        partial void OnUSERIDChanged();
        partial void OnUSERNAMEChanging(string value);
        partial void OnUSERNAMEChanged();
        partial void OnPASSWORDChanging(string value);
        partial void OnPASSWORDChanged();
        partial void OnCREATEDONChanging(System.Nullable<System.DateTime> value);
        partial void OnCREATEDONChanged();
        partial void OnQUOTAChanging(System.Nullable<decimal> value);
        partial void OnQUOTAChanged();
        partial void OnPRODUCTSChanging(string value);
        partial void OnPRODUCTSChanged();
        partial void OnEXPIRESONChanging(System.Nullable<System.DateTime> value);
        partial void OnEXPIRESONChanged();
        partial void OnADMINUSERChanging(string value);
        partial void OnADMINUSERChanged();
        #endregion

        public DEMOUSER()
        {
            this._DEMOORDERs = new EntitySet<DEMOORDER>(new Action<DEMOORDER>(this.attach_DEMOORDERs), new Action<DEMOORDER>(this.detach_DEMOORDERs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for USERID in the schema.
        /// </summary>
        [Column(Name = @"USER_ID", Storage = "_USERID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal USERID
        {
            get
            {
                return this._USERID;
            }
            set
            {
                if (this._USERID != value)
                {
                    this.OnUSERIDChanging(value);
                    this.SendPropertyChanging();
                    this._USERID = value;
                    this.SendPropertyChanged("USERID");
                    this.OnUSERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USERNAME in the schema.
        /// </summary>
        [Column(Name = @"USER_NAME", Storage = "_USERNAME", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string USERNAME
        {
            get
            {
                return this._USERNAME;
            }
            set
            {
                if (this._USERNAME != value)
                {
                    this.OnUSERNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._USERNAME = value;
                    this.SendPropertyChanged("USERNAME");
                    this.OnUSERNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PASSWORD in the schema.
        /// </summary>
        [Column(Storage = "_PASSWORD", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PASSWORD
        {
            get
            {
                return this._PASSWORD;
            }
            set
            {
                if (this._PASSWORD != value)
                {
                    this.OnPASSWORDChanging(value);
                    this.SendPropertyChanging();
                    this._PASSWORD = value;
                    this.SendPropertyChanged("PASSWORD");
                    this.OnPASSWORDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDON in the schema.
        /// </summary>
        [Column(Name = @"CREATED_ON", Storage = "_CREATEDON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> CREATEDON
        {
            get
            {
                return this._CREATEDON;
            }
            set
            {
                if (this._CREATEDON != value)
                {
                    this.OnCREATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDON = value;
                    this.SendPropertyChanged("CREATEDON");
                    this.OnCREATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QUOTA in the schema.
        /// </summary>
        [Column(Storage = "_QUOTA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> QUOTA
        {
            get
            {
                return this._QUOTA;
            }
            set
            {
                if (this._QUOTA != value)
                {
                    this.OnQUOTAChanging(value);
                    this.SendPropertyChanging();
                    this._QUOTA = value;
                    this.SendPropertyChanged("QUOTA");
                    this.OnQUOTAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTS in the schema.
        /// </summary>
        [Column(Storage = "_PRODUCTS", DbType = "CHAR(1) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRODUCTS
        {
            get
            {
                return this._PRODUCTS;
            }
            set
            {
                if (this._PRODUCTS != value)
                {
                    this.OnPRODUCTSChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTS = value;
                    this.SendPropertyChanged("PRODUCTS");
                    this.OnPRODUCTSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EXPIRESON in the schema.
        /// </summary>
        [Column(Name = @"EXPIRES_ON", Storage = "_EXPIRESON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> EXPIRESON
        {
            get
            {
                return this._EXPIRESON;
            }
            set
            {
                if (this._EXPIRESON != value)
                {
                    this.OnEXPIRESONChanging(value);
                    this.SendPropertyChanging();
                    this._EXPIRESON = value;
                    this.SendPropertyChanged("EXPIRESON");
                    this.OnEXPIRESONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ADMINUSER in the schema.
        /// </summary>
        [Column(Name = @"ADMIN_USER", Storage = "_ADMINUSER", DbType = "CHAR(1) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ADMINUSER
        {
            get
            {
                return this._ADMINUSER;
            }
            set
            {
                if (this._ADMINUSER != value)
                {
                    this.OnADMINUSERChanging(value);
                    this.SendPropertyChanging();
                    this._ADMINUSER = value;
                    this.SendPropertyChanged("ADMINUSER");
                    this.OnADMINUSERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEMOORDERs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEMOUSER_DEMOORDER", Storage="_DEMOORDERs", ThisKey="USERID", OtherKey="USERID", DeleteRule="NO ACTION")]
        public EntitySet<DEMOORDER> DEMOORDERs
        {
            get
            {
                return this._DEMOORDERs;
            }
            set
            {
                this._DEMOORDERs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DEMOORDERs(DEMOORDER entity)
        {
            this.SendPropertyChanging("DEMOORDERs");
            entity.DEMOUSER = this;
        }
    
        private void detach_DEMOORDERs(DEMOORDER entity)
        {
            this.SendPropertyChanging("DEMOORDERs");
            entity.DEMOUSER = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.DEMOCUSTOMER in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.DEMO_CUSTOMERS")]
    public partial class DEMOCUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CUSTOMERID;

        private string _CUSTFIRSTNAME;

        private string _CUSTLASTNAME;

        private string _CUSTSTREETADDRESS1;

        private string _CUSTSTREETADDRESS2;

        private string _CUSTCITY;

        private string _CUSTSTATE;

        private string _CUSTPOSTALCODE;

        private string _PHONENUMBER1;

        private string _PHONENUMBER2;

        private System.Nullable<double> _CREDITLIMIT;

        private string _CUSTEMAIL;
        #pragma warning restore 0649

        private EntitySet<DEMOORDER> _DEMOORDERs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCUSTOMERIDChanging(decimal value);
        partial void OnCUSTOMERIDChanged();
        partial void OnCUSTFIRSTNAMEChanging(string value);
        partial void OnCUSTFIRSTNAMEChanged();
        partial void OnCUSTLASTNAMEChanging(string value);
        partial void OnCUSTLASTNAMEChanged();
        partial void OnCUSTSTREETADDRESS1Changing(string value);
        partial void OnCUSTSTREETADDRESS1Changed();
        partial void OnCUSTSTREETADDRESS2Changing(string value);
        partial void OnCUSTSTREETADDRESS2Changed();
        partial void OnCUSTCITYChanging(string value);
        partial void OnCUSTCITYChanged();
        partial void OnCUSTSTATEChanging(string value);
        partial void OnCUSTSTATEChanged();
        partial void OnCUSTPOSTALCODEChanging(string value);
        partial void OnCUSTPOSTALCODEChanged();
        partial void OnPHONENUMBER1Changing(string value);
        partial void OnPHONENUMBER1Changed();
        partial void OnPHONENUMBER2Changing(string value);
        partial void OnPHONENUMBER2Changed();
        partial void OnCREDITLIMITChanging(System.Nullable<double> value);
        partial void OnCREDITLIMITChanged();
        partial void OnCUSTEMAILChanging(string value);
        partial void OnCUSTEMAILChanged();
        #endregion

        public DEMOCUSTOMER()
        {
            this._DEMOORDERs = new EntitySet<DEMOORDER>(new Action<DEMOORDER>(this.attach_DEMOORDERs), new Action<DEMOORDER>(this.detach_DEMOORDERs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CUSTOMERID in the schema.
        /// </summary>
        [Column(Name = @"CUSTOMER_ID", Storage = "_CUSTOMERID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal CUSTOMERID
        {
            get
            {
                return this._CUSTOMERID;
            }
            set
            {
                if (this._CUSTOMERID != value)
                {
                    this.OnCUSTOMERIDChanging(value);
                    this.SendPropertyChanging();
                    this._CUSTOMERID = value;
                    this.SendPropertyChanged("CUSTOMERID");
                    this.OnCUSTOMERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTFIRSTNAME in the schema.
        /// </summary>
        [Column(Name = @"CUST_FIRST_NAME", Storage = "_CUSTFIRSTNAME", CanBeNull = false, DbType = "VARCHAR2(20 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTFIRSTNAME
        {
            get
            {
                return this._CUSTFIRSTNAME;
            }
            set
            {
                if (this._CUSTFIRSTNAME != value)
                {
                    this.OnCUSTFIRSTNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._CUSTFIRSTNAME = value;
                    this.SendPropertyChanged("CUSTFIRSTNAME");
                    this.OnCUSTFIRSTNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTLASTNAME in the schema.
        /// </summary>
        [Column(Name = @"CUST_LAST_NAME", Storage = "_CUSTLASTNAME", CanBeNull = false, DbType = "VARCHAR2(20 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTLASTNAME
        {
            get
            {
                return this._CUSTLASTNAME;
            }
            set
            {
                if (this._CUSTLASTNAME != value)
                {
                    this.OnCUSTLASTNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._CUSTLASTNAME = value;
                    this.SendPropertyChanged("CUSTLASTNAME");
                    this.OnCUSTLASTNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTSTREETADDRESS1 in the schema.
        /// </summary>
        [Column(Name = @"CUST_STREET_ADDRESS1", Storage = "_CUSTSTREETADDRESS1", DbType = "VARCHAR2(60 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTSTREETADDRESS1
        {
            get
            {
                return this._CUSTSTREETADDRESS1;
            }
            set
            {
                if (this._CUSTSTREETADDRESS1 != value)
                {
                    this.OnCUSTSTREETADDRESS1Changing(value);
                    this.SendPropertyChanging();
                    this._CUSTSTREETADDRESS1 = value;
                    this.SendPropertyChanged("CUSTSTREETADDRESS1");
                    this.OnCUSTSTREETADDRESS1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTSTREETADDRESS2 in the schema.
        /// </summary>
        [Column(Name = @"CUST_STREET_ADDRESS2", Storage = "_CUSTSTREETADDRESS2", DbType = "VARCHAR2(60 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTSTREETADDRESS2
        {
            get
            {
                return this._CUSTSTREETADDRESS2;
            }
            set
            {
                if (this._CUSTSTREETADDRESS2 != value)
                {
                    this.OnCUSTSTREETADDRESS2Changing(value);
                    this.SendPropertyChanging();
                    this._CUSTSTREETADDRESS2 = value;
                    this.SendPropertyChanged("CUSTSTREETADDRESS2");
                    this.OnCUSTSTREETADDRESS2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTCITY in the schema.
        /// </summary>
        [Column(Name = @"CUST_CITY", Storage = "_CUSTCITY", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTCITY
        {
            get
            {
                return this._CUSTCITY;
            }
            set
            {
                if (this._CUSTCITY != value)
                {
                    this.OnCUSTCITYChanging(value);
                    this.SendPropertyChanging();
                    this._CUSTCITY = value;
                    this.SendPropertyChanged("CUSTCITY");
                    this.OnCUSTCITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTSTATE in the schema.
        /// </summary>
        [Column(Name = @"CUST_STATE", Storage = "_CUSTSTATE", DbType = "VARCHAR2(2 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTSTATE
        {
            get
            {
                return this._CUSTSTATE;
            }
            set
            {
                if (this._CUSTSTATE != value)
                {
                    this.OnCUSTSTATEChanging(value);
                    this.SendPropertyChanging();
                    this._CUSTSTATE = value;
                    this.SendPropertyChanged("CUSTSTATE");
                    this.OnCUSTSTATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTPOSTALCODE in the schema.
        /// </summary>
        [Column(Name = @"CUST_POSTAL_CODE", Storage = "_CUSTPOSTALCODE", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTPOSTALCODE
        {
            get
            {
                return this._CUSTPOSTALCODE;
            }
            set
            {
                if (this._CUSTPOSTALCODE != value)
                {
                    this.OnCUSTPOSTALCODEChanging(value);
                    this.SendPropertyChanging();
                    this._CUSTPOSTALCODE = value;
                    this.SendPropertyChanged("CUSTPOSTALCODE");
                    this.OnCUSTPOSTALCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PHONENUMBER1 in the schema.
        /// </summary>
        [Column(Name = @"PHONE_NUMBER1", Storage = "_PHONENUMBER1", DbType = "VARCHAR2(25 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PHONENUMBER1
        {
            get
            {
                return this._PHONENUMBER1;
            }
            set
            {
                if (this._PHONENUMBER1 != value)
                {
                    this.OnPHONENUMBER1Changing(value);
                    this.SendPropertyChanging();
                    this._PHONENUMBER1 = value;
                    this.SendPropertyChanged("PHONENUMBER1");
                    this.OnPHONENUMBER1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PHONENUMBER2 in the schema.
        /// </summary>
        [Column(Name = @"PHONE_NUMBER2", Storage = "_PHONENUMBER2", DbType = "VARCHAR2(25 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PHONENUMBER2
        {
            get
            {
                return this._PHONENUMBER2;
            }
            set
            {
                if (this._PHONENUMBER2 != value)
                {
                    this.OnPHONENUMBER2Changing(value);
                    this.SendPropertyChanging();
                    this._PHONENUMBER2 = value;
                    this.SendPropertyChanged("PHONENUMBER2");
                    this.OnPHONENUMBER2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREDITLIMIT in the schema.
        /// </summary>
        [Column(Name = @"CREDIT_LIMIT", Storage = "_CREDITLIMIT", DbType = "NUMBER(9,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> CREDITLIMIT
        {
            get
            {
                return this._CREDITLIMIT;
            }
            set
            {
                if (this._CREDITLIMIT != value)
                {
                    this.OnCREDITLIMITChanging(value);
                    this.SendPropertyChanging();
                    this._CREDITLIMIT = value;
                    this.SendPropertyChanged("CREDITLIMIT");
                    this.OnCREDITLIMITChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTEMAIL in the schema.
        /// </summary>
        [Column(Name = @"CUST_EMAIL", Storage = "_CUSTEMAIL", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CUSTEMAIL
        {
            get
            {
                return this._CUSTEMAIL;
            }
            set
            {
                if (this._CUSTEMAIL != value)
                {
                    this.OnCUSTEMAILChanging(value);
                    this.SendPropertyChanging();
                    this._CUSTEMAIL = value;
                    this.SendPropertyChanged("CUSTEMAIL");
                    this.OnCUSTEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEMOORDERs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEMOCUSTOMER_DEMOORDER", Storage="_DEMOORDERs", ThisKey="CUSTOMERID", OtherKey="CUSTOMERID", DeleteRule="NO ACTION")]
        public EntitySet<DEMOORDER> DEMOORDERs
        {
            get
            {
                return this._DEMOORDERs;
            }
            set
            {
                this._DEMOORDERs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DEMOORDERs(DEMOORDER entity)
        {
            this.SendPropertyChanging("DEMOORDERs");
            entity.DEMOCUSTOMER = this;
        }
    
        private void detach_DEMOORDERs(DEMOORDER entity)
        {
            this.SendPropertyChanging("DEMOORDERs");
            entity.DEMOCUSTOMER = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.DEMOORDER in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.DEMO_ORDERS")]
    public partial class DEMOORDER : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ORDERID;

        private decimal _CUSTOMERID;

        private System.Nullable<double> _ORDERTOTAL;

        private System.Nullable<System.DateTime> _ORDERTIMESTAMP;

        private System.Nullable<decimal> _USERID;
        #pragma warning restore 0649

        private EntityRef<DEMOCUSTOMER> _DEMOCUSTOMER;

        private EntityRef<DEMOUSER> _DEMOUSER;

        private EntitySet<DEMOORDERITEM> _DEMOORDERITEMs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnORDERIDChanging(decimal value);
        partial void OnORDERIDChanged();
        partial void OnCUSTOMERIDChanging(decimal value);
        partial void OnCUSTOMERIDChanged();
        partial void OnORDERTOTALChanging(System.Nullable<double> value);
        partial void OnORDERTOTALChanged();
        partial void OnORDERTIMESTAMPChanging(System.Nullable<System.DateTime> value);
        partial void OnORDERTIMESTAMPChanged();
        partial void OnUSERIDChanging(System.Nullable<decimal> value);
        partial void OnUSERIDChanged();
        #endregion

        public DEMOORDER()
        {
            this._DEMOCUSTOMER  = default(EntityRef<DEMOCUSTOMER>);
            this._DEMOUSER  = default(EntityRef<DEMOUSER>);
            this._DEMOORDERITEMs = new EntitySet<DEMOORDERITEM>(new Action<DEMOORDERITEM>(this.attach_DEMOORDERITEMs), new Action<DEMOORDERITEM>(this.detach_DEMOORDERITEMs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ORDERID in the schema.
        /// </summary>
        [Column(Name = @"ORDER_ID", Storage = "_ORDERID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ORDERID
        {
            get
            {
                return this._ORDERID;
            }
            set
            {
                if (this._ORDERID != value)
                {
                    this.OnORDERIDChanging(value);
                    this.SendPropertyChanging();
                    this._ORDERID = value;
                    this.SendPropertyChanged("ORDERID");
                    this.OnORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CUSTOMERID in the schema.
        /// </summary>
        [Column(Name = @"CUSTOMER_ID", Storage = "_CUSTOMERID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CUSTOMERID
        {
            get
            {
                return this._CUSTOMERID;
            }
            set
            {
                if (this._CUSTOMERID != value)
                {
                    if (this._DEMOCUSTOMER.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCUSTOMERIDChanging(value);
                    this.SendPropertyChanging();
                    this._CUSTOMERID = value;
                    this.SendPropertyChanged("CUSTOMERID");
                    this.OnCUSTOMERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ORDERTOTAL in the schema.
        /// </summary>
        [Column(Name = @"ORDER_TOTAL", Storage = "_ORDERTOTAL", DbType = "NUMBER(8,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> ORDERTOTAL
        {
            get
            {
                return this._ORDERTOTAL;
            }
            set
            {
                if (this._ORDERTOTAL != value)
                {
                    this.OnORDERTOTALChanging(value);
                    this.SendPropertyChanging();
                    this._ORDERTOTAL = value;
                    this.SendPropertyChanged("ORDERTOTAL");
                    this.OnORDERTOTALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ORDERTIMESTAMP in the schema.
        /// </summary>
        [Column(Name = @"ORDER_TIMESTAMP", Storage = "_ORDERTIMESTAMP", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> ORDERTIMESTAMP
        {
            get
            {
                return this._ORDERTIMESTAMP;
            }
            set
            {
                if (this._ORDERTIMESTAMP != value)
                {
                    this.OnORDERTIMESTAMPChanging(value);
                    this.SendPropertyChanging();
                    this._ORDERTIMESTAMP = value;
                    this.SendPropertyChanged("ORDERTIMESTAMP");
                    this.OnORDERTIMESTAMPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USERID in the schema.
        /// </summary>
        [Column(Name = @"USER_ID", Storage = "_USERID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> USERID
        {
            get
            {
                return this._USERID;
            }
            set
            {
                if (this._USERID != value)
                {
                    if (this._DEMOUSER.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnUSERIDChanging(value);
                    this.SendPropertyChanging();
                    this._USERID = value;
                    this.SendPropertyChanged("USERID");
                    this.OnUSERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEMOCUSTOMER in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEMOCUSTOMER_DEMOORDER", Storage="_DEMOCUSTOMER", ThisKey="CUSTOMERID", OtherKey="CUSTOMERID", IsForeignKey=true)]
        public DEMOCUSTOMER DEMOCUSTOMER
        {
            get
            {
                return this._DEMOCUSTOMER.Entity;
            }
            set
            {
                DEMOCUSTOMER previousValue = this._DEMOCUSTOMER.Entity;
                if ((previousValue != value) || (this._DEMOCUSTOMER.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._DEMOCUSTOMER.Entity = null;
                        previousValue.DEMOORDERs.Remove(this);
                    }
                    this._DEMOCUSTOMER.Entity = value;
                    if (value != null)
                    {
                        this._CUSTOMERID = value.CUSTOMERID;
                        value.DEMOORDERs.Add(this);
                    }
                    else
                    {
                        this._CUSTOMERID = default(decimal);
                    }
                    this.SendPropertyChanged("DEMOCUSTOMER");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEMOUSER in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEMOUSER_DEMOORDER", Storage="_DEMOUSER", ThisKey="USERID", OtherKey="USERID", IsForeignKey=true)]
        public DEMOUSER DEMOUSER
        {
            get
            {
                return this._DEMOUSER.Entity;
            }
            set
            {
                DEMOUSER previousValue = this._DEMOUSER.Entity;
                if ((previousValue != value) || (this._DEMOUSER.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._DEMOUSER.Entity = null;
                        previousValue.DEMOORDERs.Remove(this);
                    }
                    this._DEMOUSER.Entity = value;
                    if (value != null)
                    {
                        this._USERID = value.USERID;
                        value.DEMOORDERs.Add(this);
                    }
                    else
                    {
                        this._USERID = default(System.Nullable<decimal>);
                    }
                    this.SendPropertyChanged("DEMOUSER");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEMOORDERITEMs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEMOORDER_DEMOORDERITEM", Storage="_DEMOORDERITEMs", ThisKey="ORDERID", OtherKey="ORDERID", DeleteRule="CASCADE")]
        public EntitySet<DEMOORDERITEM> DEMOORDERITEMs
        {
            get
            {
                return this._DEMOORDERITEMs;
            }
            set
            {
                this._DEMOORDERITEMs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DEMOORDERITEMs(DEMOORDERITEM entity)
        {
            this.SendPropertyChanging("DEMOORDERITEMs");
            entity.DEMOORDER = this;
        }
    
        private void detach_DEMOORDERITEMs(DEMOORDERITEM entity)
        {
            this.SendPropertyChanging("DEMOORDERITEMs");
            entity.DEMOORDER = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.DEMOPRODUCTINFO in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.DEMO_PRODUCT_INFO")]
    public partial class DEMOPRODUCTINFO : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _PRODUCTID;

        private string _PRODUCTNAME;

        private string _PRODUCTDESCRIPTION;

        private string _CATEGORY;

        private string _PRODUCTAVAIL;

        private System.Nullable<double> _LISTPRICE;

        private byte[] _PRODUCTIMAGE;

        private string _MIMETYPE;

        private string _FILENAME;

        private System.Nullable<System.DateTime> _IMAGELASTUPDATE;
        #pragma warning restore 0649

        private EntitySet<DEMOORDERITEM> _DEMOORDERITEMs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnPRODUCTIDChanging(decimal value);
        partial void OnPRODUCTIDChanged();
        partial void OnPRODUCTNAMEChanging(string value);
        partial void OnPRODUCTNAMEChanged();
        partial void OnPRODUCTDESCRIPTIONChanging(string value);
        partial void OnPRODUCTDESCRIPTIONChanged();
        partial void OnCATEGORYChanging(string value);
        partial void OnCATEGORYChanged();
        partial void OnPRODUCTAVAILChanging(string value);
        partial void OnPRODUCTAVAILChanged();
        partial void OnLISTPRICEChanging(System.Nullable<double> value);
        partial void OnLISTPRICEChanged();
        partial void OnPRODUCTIMAGEChanging(byte[] value);
        partial void OnPRODUCTIMAGEChanged();
        partial void OnMIMETYPEChanging(string value);
        partial void OnMIMETYPEChanged();
        partial void OnFILENAMEChanging(string value);
        partial void OnFILENAMEChanged();
        partial void OnIMAGELASTUPDATEChanging(System.Nullable<System.DateTime> value);
        partial void OnIMAGELASTUPDATEChanged();
        #endregion

        public DEMOPRODUCTINFO()
        {
            this._DEMOORDERITEMs = new EntitySet<DEMOORDERITEM>(new Action<DEMOORDERITEM>(this.attach_DEMOORDERITEMs), new Action<DEMOORDERITEM>(this.detach_DEMOORDERITEMs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for PRODUCTID in the schema.
        /// </summary>
        [Column(Name = @"PRODUCT_ID", Storage = "_PRODUCTID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal PRODUCTID
        {
            get
            {
                return this._PRODUCTID;
            }
            set
            {
                if (this._PRODUCTID != value)
                {
                    this.OnPRODUCTIDChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTID = value;
                    this.SendPropertyChanged("PRODUCTID");
                    this.OnPRODUCTIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTNAME in the schema.
        /// </summary>
        [Column(Name = @"PRODUCT_NAME", Storage = "_PRODUCTNAME", DbType = "VARCHAR2(50 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRODUCTNAME
        {
            get
            {
                return this._PRODUCTNAME;
            }
            set
            {
                if (this._PRODUCTNAME != value)
                {
                    this.OnPRODUCTNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTNAME = value;
                    this.SendPropertyChanged("PRODUCTNAME");
                    this.OnPRODUCTNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTDESCRIPTION in the schema.
        /// </summary>
        [Column(Name = @"PRODUCT_DESCRIPTION", Storage = "_PRODUCTDESCRIPTION", DbType = "VARCHAR2(2000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRODUCTDESCRIPTION
        {
            get
            {
                return this._PRODUCTDESCRIPTION;
            }
            set
            {
                if (this._PRODUCTDESCRIPTION != value)
                {
                    this.OnPRODUCTDESCRIPTIONChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTDESCRIPTION = value;
                    this.SendPropertyChanged("PRODUCTDESCRIPTION");
                    this.OnPRODUCTDESCRIPTIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CATEGORY in the schema.
        /// </summary>
        [Column(Storage = "_CATEGORY", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CATEGORY
        {
            get
            {
                return this._CATEGORY;
            }
            set
            {
                if (this._CATEGORY != value)
                {
                    this.OnCATEGORYChanging(value);
                    this.SendPropertyChanging();
                    this._CATEGORY = value;
                    this.SendPropertyChanged("CATEGORY");
                    this.OnCATEGORYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTAVAIL in the schema.
        /// </summary>
        [Column(Name = @"PRODUCT_AVAIL", Storage = "_PRODUCTAVAIL", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRODUCTAVAIL
        {
            get
            {
                return this._PRODUCTAVAIL;
            }
            set
            {
                if (this._PRODUCTAVAIL != value)
                {
                    this.OnPRODUCTAVAILChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTAVAIL = value;
                    this.SendPropertyChanged("PRODUCTAVAIL");
                    this.OnPRODUCTAVAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LISTPRICE in the schema.
        /// </summary>
        [Column(Name = @"LIST_PRICE", Storage = "_LISTPRICE", DbType = "NUMBER(8,2) NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> LISTPRICE
        {
            get
            {
                return this._LISTPRICE;
            }
            set
            {
                if (this._LISTPRICE != value)
                {
                    this.OnLISTPRICEChanging(value);
                    this.SendPropertyChanging();
                    this._LISTPRICE = value;
                    this.SendPropertyChanged("LISTPRICE");
                    this.OnLISTPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTIMAGE in the schema.
        /// </summary>
        [Column(Name = @"PRODUCT_IMAGE", Storage = "_PRODUCTIMAGE", DbType = "BLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public byte[] PRODUCTIMAGE
        {
            get
            {
                return this._PRODUCTIMAGE;
            }
            set
            {
                if (this._PRODUCTIMAGE != value)
                {
                    this.OnPRODUCTIMAGEChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTIMAGE = value;
                    this.SendPropertyChanged("PRODUCTIMAGE");
                    this.OnPRODUCTIMAGEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MIMETYPE in the schema.
        /// </summary>
        [Column(Storage = "_MIMETYPE", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MIMETYPE
        {
            get
            {
                return this._MIMETYPE;
            }
            set
            {
                if (this._MIMETYPE != value)
                {
                    this.OnMIMETYPEChanging(value);
                    this.SendPropertyChanging();
                    this._MIMETYPE = value;
                    this.SendPropertyChanged("MIMETYPE");
                    this.OnMIMETYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FILENAME in the schema.
        /// </summary>
        [Column(Storage = "_FILENAME", DbType = "VARCHAR2(400 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string FILENAME
        {
            get
            {
                return this._FILENAME;
            }
            set
            {
                if (this._FILENAME != value)
                {
                    this.OnFILENAMEChanging(value);
                    this.SendPropertyChanging();
                    this._FILENAME = value;
                    this.SendPropertyChanged("FILENAME");
                    this.OnFILENAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IMAGELASTUPDATE in the schema.
        /// </summary>
        [Column(Name = @"IMAGE_LAST_UPDATE", Storage = "_IMAGELASTUPDATE", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> IMAGELASTUPDATE
        {
            get
            {
                return this._IMAGELASTUPDATE;
            }
            set
            {
                if (this._IMAGELASTUPDATE != value)
                {
                    this.OnIMAGELASTUPDATEChanging(value);
                    this.SendPropertyChanging();
                    this._IMAGELASTUPDATE = value;
                    this.SendPropertyChanged("IMAGELASTUPDATE");
                    this.OnIMAGELASTUPDATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEMOORDERITEMs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEMOPRODUCTINFO_DEMOORDERITEM", Storage="_DEMOORDERITEMs", ThisKey="PRODUCTID", OtherKey="PRODUCTID", DeleteRule="CASCADE")]
        public EntitySet<DEMOORDERITEM> DEMOORDERITEMs
        {
            get
            {
                return this._DEMOORDERITEMs;
            }
            set
            {
                this._DEMOORDERITEMs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DEMOORDERITEMs(DEMOORDERITEM entity)
        {
            this.SendPropertyChanging("DEMOORDERITEMs");
            entity.DEMOPRODUCTINFO = this;
        }
    
        private void detach_DEMOORDERITEMs(DEMOORDERITEM entity)
        {
            this.SendPropertyChanging("DEMOORDERITEMs");
            entity.DEMOPRODUCTINFO = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.DEMOORDERITEM in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.DEMO_ORDER_ITEMS")]
    public partial class DEMOORDERITEM : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _ORDERITEMID;

        private decimal _ORDERID;

        private decimal _PRODUCTID;

        private double _UNITPRICE;

        private int _QUANTITY;
        #pragma warning restore 0649

        private EntityRef<DEMOPRODUCTINFO> _DEMOPRODUCTINFO;

        private EntityRef<DEMOORDER> _DEMOORDER;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnORDERITEMIDChanging(int value);
        partial void OnORDERITEMIDChanged();
        partial void OnORDERIDChanging(decimal value);
        partial void OnORDERIDChanged();
        partial void OnPRODUCTIDChanging(decimal value);
        partial void OnPRODUCTIDChanged();
        partial void OnUNITPRICEChanging(double value);
        partial void OnUNITPRICEChanged();
        partial void OnQUANTITYChanging(int value);
        partial void OnQUANTITYChanged();
        #endregion

        public DEMOORDERITEM()
        {
            this._DEMOPRODUCTINFO  = default(EntityRef<DEMOPRODUCTINFO>);
            this._DEMOORDER  = default(EntityRef<DEMOORDER>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ORDERITEMID in the schema.
        /// </summary>
        [Column(Name = @"ORDER_ITEM_ID", Storage = "_ORDERITEMID", CanBeNull = false, DbType = "NUMBER(3) NOT NULL", IsPrimaryKey = true)]
        public int ORDERITEMID
        {
            get
            {
                return this._ORDERITEMID;
            }
            set
            {
                if (this._ORDERITEMID != value)
                {
                    this.OnORDERITEMIDChanging(value);
                    this.SendPropertyChanging();
                    this._ORDERITEMID = value;
                    this.SendPropertyChanged("ORDERITEMID");
                    this.OnORDERITEMIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ORDERID in the schema.
        /// </summary>
        [Column(Name = @"ORDER_ID", Storage = "_ORDERID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal ORDERID
        {
            get
            {
                return this._ORDERID;
            }
            set
            {
                if (this._ORDERID != value)
                {
                    if (this._DEMOORDER.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnORDERIDChanging(value);
                    this.SendPropertyChanging();
                    this._ORDERID = value;
                    this.SendPropertyChanged("ORDERID");
                    this.OnORDERIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTID in the schema.
        /// </summary>
        [Column(Name = @"PRODUCT_ID", Storage = "_PRODUCTID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PRODUCTID
        {
            get
            {
                return this._PRODUCTID;
            }
            set
            {
                if (this._PRODUCTID != value)
                {
                    if (this._DEMOPRODUCTINFO.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnPRODUCTIDChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTID = value;
                    this.SendPropertyChanged("PRODUCTID");
                    this.OnPRODUCTIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNITPRICE in the schema.
        /// </summary>
        [Column(Name = @"UNIT_PRICE", Storage = "_UNITPRICE", CanBeNull = false, DbType = "NUMBER(8,2) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public double UNITPRICE
        {
            get
            {
                return this._UNITPRICE;
            }
            set
            {
                if (this._UNITPRICE != value)
                {
                    this.OnUNITPRICEChanging(value);
                    this.SendPropertyChanging();
                    this._UNITPRICE = value;
                    this.SendPropertyChanged("UNITPRICE");
                    this.OnUNITPRICEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for QUANTITY in the schema.
        /// </summary>
        [Column(Storage = "_QUANTITY", CanBeNull = false, DbType = "NUMBER(8) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int QUANTITY
        {
            get
            {
                return this._QUANTITY;
            }
            set
            {
                if (this._QUANTITY != value)
                {
                    this.OnQUANTITYChanging(value);
                    this.SendPropertyChanging();
                    this._QUANTITY = value;
                    this.SendPropertyChanged("QUANTITY");
                    this.OnQUANTITYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEMOPRODUCTINFO in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEMOPRODUCTINFO_DEMOORDERITEM", Storage="_DEMOPRODUCTINFO", ThisKey="PRODUCTID", OtherKey="PRODUCTID", IsForeignKey=true)]
        public DEMOPRODUCTINFO DEMOPRODUCTINFO
        {
            get
            {
                return this._DEMOPRODUCTINFO.Entity;
            }
            set
            {
                DEMOPRODUCTINFO previousValue = this._DEMOPRODUCTINFO.Entity;
                if ((previousValue != value) || (this._DEMOPRODUCTINFO.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._DEMOPRODUCTINFO.Entity = null;
                        previousValue.DEMOORDERITEMs.Remove(this);
                    }
                    this._DEMOPRODUCTINFO.Entity = value;
                    if (value != null)
                    {
                        this._PRODUCTID = value.PRODUCTID;
                        value.DEMOORDERITEMs.Add(this);
                    }
                    else
                    {
                        this._PRODUCTID = default(decimal);
                    }
                    this.SendPropertyChanged("DEMOPRODUCTINFO");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DEMOORDER in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DEMOORDER_DEMOORDERITEM", Storage="_DEMOORDER", ThisKey="ORDERID", OtherKey="ORDERID", IsForeignKey=true)]
        public DEMOORDER DEMOORDER
        {
            get
            {
                return this._DEMOORDER.Entity;
            }
            set
            {
                DEMOORDER previousValue = this._DEMOORDER.Entity;
                if ((previousValue != value) || (this._DEMOORDER.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._DEMOORDER.Entity = null;
                        previousValue.DEMOORDERITEMs.Remove(this);
                    }
                    this._DEMOORDER.Entity = value;
                    if (value != null)
                    {
                        this._ORDERID = value.ORDERID;
                        value.DEMOORDERITEMs.Add(this);
                    }
                    else
                    {
                        this._ORDERID = default(decimal);
                    }
                    this.SendPropertyChanged("DEMOORDER");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.DEMOSTATE in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.DEMO_STATES")]
    public partial class DEMOSTATE
    {
        #pragma warning disable 0649

        private string _ST;

        private string _STATENAME;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnSTChanging(string value);
        partial void OnSTChanged();
        partial void OnSTATENAMEChanging(string value);
        partial void OnSTATENAMEChanged();
        #endregion

        public DEMOSTATE()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ST in the schema.
        /// </summary>
        [Column(Storage = "_ST", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ST
        {
            get
            {
                return this._ST;
            }
            set
            {
                if (this._ST != value)
                {
                    this._ST = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STATENAME in the schema.
        /// </summary>
        [Column(Name = @"STATE_NAME", Storage = "_STATENAME", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string STATENAME
        {
            get
            {
                return this._STATENAME;
            }
            set
            {
                if (this._STATENAME != value)
                {
                    this._STATENAME = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.APEXACL in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.APEX$_ACL")]
    public partial class APEXACL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private decimal _WSAPPID;

        private string _USERNAME;

        private string _PRIV;

        private System.DateTime _CREATEDON;

        private string _CREATEDBY;

        private System.Nullable<System.DateTime> _UPDATEDON;

        private string _UPDATEDBY;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnWSAPPIDChanging(decimal value);
        partial void OnWSAPPIDChanged();
        partial void OnUSERNAMEChanging(string value);
        partial void OnUSERNAMEChanged();
        partial void OnPRIVChanging(string value);
        partial void OnPRIVChanged();
        partial void OnCREATEDONChanging(System.DateTime value);
        partial void OnCREATEDONChanged();
        partial void OnCREATEDBYChanging(string value);
        partial void OnCREATEDBYChanged();
        partial void OnUPDATEDONChanging(System.Nullable<System.DateTime> value);
        partial void OnUPDATEDONChanged();
        partial void OnUPDATEDBYChanging(string value);
        partial void OnUPDATEDBYChanged();
        #endregion

        public APEXACL()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WSAPPID in the schema.
        /// </summary>
        [Column(Name = @"WS_APP_ID", Storage = "_WSAPPID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WSAPPID
        {
            get
            {
                return this._WSAPPID;
            }
            set
            {
                if (this._WSAPPID != value)
                {
                    this.OnWSAPPIDChanging(value);
                    this.SendPropertyChanging();
                    this._WSAPPID = value;
                    this.SendPropertyChanged("WSAPPID");
                    this.OnWSAPPIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USERNAME in the schema.
        /// </summary>
        [Column(Storage = "_USERNAME", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string USERNAME
        {
            get
            {
                return this._USERNAME;
            }
            set
            {
                if (this._USERNAME != value)
                {
                    this.OnUSERNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._USERNAME = value;
                    this.SendPropertyChanged("USERNAME");
                    this.OnUSERNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRIV in the schema.
        /// </summary>
        [Column(Storage = "_PRIV", CanBeNull = false, DbType = "VARCHAR2(1 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRIV
        {
            get
            {
                return this._PRIV;
            }
            set
            {
                if (this._PRIV != value)
                {
                    this.OnPRIVChanging(value);
                    this.SendPropertyChanging();
                    this._PRIV = value;
                    this.SendPropertyChanged("PRIV");
                    this.OnPRIVChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDON in the schema.
        /// </summary>
        [Column(Name = @"CREATED_ON", Storage = "_CREATEDON", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime CREATEDON
        {
            get
            {
                return this._CREATEDON;
            }
            set
            {
                if (this._CREATEDON != value)
                {
                    this.OnCREATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDON = value;
                    this.SendPropertyChanged("CREATEDON");
                    this.OnCREATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDBY in the schema.
        /// </summary>
        [Column(Name = @"CREATED_BY", Storage = "_CREATEDBY", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CREATEDBY
        {
            get
            {
                return this._CREATEDBY;
            }
            set
            {
                if (this._CREATEDBY != value)
                {
                    this.OnCREATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDBY = value;
                    this.SendPropertyChanged("CREATEDBY");
                    this.OnCREATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDON in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_ON", Storage = "_UPDATEDON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> UPDATEDON
        {
            get
            {
                return this._UPDATEDON;
            }
            set
            {
                if (this._UPDATEDON != value)
                {
                    this.OnUPDATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDON = value;
                    this.SendPropertyChanged("UPDATEDON");
                    this.OnUPDATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDBY in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_BY", Storage = "_UPDATEDBY", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UPDATEDBY
        {
            get
            {
                return this._UPDATEDBY;
            }
            set
            {
                if (this._UPDATEDBY != value)
                {
                    this.OnUPDATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDBY = value;
                    this.SendPropertyChanged("UPDATEDBY");
                    this.OnUPDATEDBYChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.APEXWSWEBPGSECTION in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.APEX$_WS_WEBPG_SECTIONS")]
    public partial class APEXWSWEBPGSECTION : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private decimal _WSAPPID;

        private System.Nullable<decimal> _WEBPAGEID;

        private System.Nullable<decimal> _DISPLAYSEQUENCE;

        private string _SECTIONTYPE;

        private string _TITLE;

        private string _CONTENT;

        private string _CONTENTUPPER;

        private System.Nullable<decimal> _NAVSTARTWEBPAGEID;

        private System.Nullable<decimal> _NAVMAXLEVEL;

        private string _NAVINCLUDELINK;

        private System.Nullable<decimal> _DATAGRIDID;

        private System.Nullable<decimal> _REPORTID;

        private System.Nullable<decimal> _DATASECTIONSTYLE;

        private string _CHARTTYPE;

        private string _CHART3D;

        private string _CHARTLABEL;

        private string _LABELAXISTITLE;

        private string _CHARTVALUE;

        private string _VALUEAXISTITLE;

        private string _CHARTAGGREGATE;

        private string _CHARTSORTING;

        private System.DateTime _CREATEDON;

        private string _CREATEDBY;

        private System.Nullable<System.DateTime> _UPDATEDON;

        private string _UPDATEDBY;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnWSAPPIDChanging(decimal value);
        partial void OnWSAPPIDChanged();
        partial void OnWEBPAGEIDChanging(System.Nullable<decimal> value);
        partial void OnWEBPAGEIDChanged();
        partial void OnDISPLAYSEQUENCEChanging(System.Nullable<decimal> value);
        partial void OnDISPLAYSEQUENCEChanged();
        partial void OnSECTIONTYPEChanging(string value);
        partial void OnSECTIONTYPEChanged();
        partial void OnTITLEChanging(string value);
        partial void OnTITLEChanged();
        partial void OnCONTENTChanging(string value);
        partial void OnCONTENTChanged();
        partial void OnCONTENTUPPERChanging(string value);
        partial void OnCONTENTUPPERChanged();
        partial void OnNAVSTARTWEBPAGEIDChanging(System.Nullable<decimal> value);
        partial void OnNAVSTARTWEBPAGEIDChanged();
        partial void OnNAVMAXLEVELChanging(System.Nullable<decimal> value);
        partial void OnNAVMAXLEVELChanged();
        partial void OnNAVINCLUDELINKChanging(string value);
        partial void OnNAVINCLUDELINKChanged();
        partial void OnDATAGRIDIDChanging(System.Nullable<decimal> value);
        partial void OnDATAGRIDIDChanged();
        partial void OnREPORTIDChanging(System.Nullable<decimal> value);
        partial void OnREPORTIDChanged();
        partial void OnDATASECTIONSTYLEChanging(System.Nullable<decimal> value);
        partial void OnDATASECTIONSTYLEChanged();
        partial void OnCHARTTYPEChanging(string value);
        partial void OnCHARTTYPEChanged();
        partial void OnCHART3DChanging(string value);
        partial void OnCHART3DChanged();
        partial void OnCHARTLABELChanging(string value);
        partial void OnCHARTLABELChanged();
        partial void OnLABELAXISTITLEChanging(string value);
        partial void OnLABELAXISTITLEChanged();
        partial void OnCHARTVALUEChanging(string value);
        partial void OnCHARTVALUEChanged();
        partial void OnVALUEAXISTITLEChanging(string value);
        partial void OnVALUEAXISTITLEChanged();
        partial void OnCHARTAGGREGATEChanging(string value);
        partial void OnCHARTAGGREGATEChanged();
        partial void OnCHARTSORTINGChanging(string value);
        partial void OnCHARTSORTINGChanged();
        partial void OnCREATEDONChanging(System.DateTime value);
        partial void OnCREATEDONChanged();
        partial void OnCREATEDBYChanging(string value);
        partial void OnCREATEDBYChanged();
        partial void OnUPDATEDONChanging(System.Nullable<System.DateTime> value);
        partial void OnUPDATEDONChanged();
        partial void OnUPDATEDBYChanging(string value);
        partial void OnUPDATEDBYChanged();
        #endregion

        public APEXWSWEBPGSECTION()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WSAPPID in the schema.
        /// </summary>
        [Column(Name = @"WS_APP_ID", Storage = "_WSAPPID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WSAPPID
        {
            get
            {
                return this._WSAPPID;
            }
            set
            {
                if (this._WSAPPID != value)
                {
                    this.OnWSAPPIDChanging(value);
                    this.SendPropertyChanging();
                    this._WSAPPID = value;
                    this.SendPropertyChanged("WSAPPID");
                    this.OnWSAPPIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WEBPAGEID in the schema.
        /// </summary>
        [Column(Name = @"WEBPAGE_ID", Storage = "_WEBPAGEID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> WEBPAGEID
        {
            get
            {
                return this._WEBPAGEID;
            }
            set
            {
                if (this._WEBPAGEID != value)
                {
                    this.OnWEBPAGEIDChanging(value);
                    this.SendPropertyChanging();
                    this._WEBPAGEID = value;
                    this.SendPropertyChanged("WEBPAGEID");
                    this.OnWEBPAGEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISPLAYSEQUENCE in the schema.
        /// </summary>
        [Column(Name = @"DISPLAY_SEQUENCE", Storage = "_DISPLAYSEQUENCE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> DISPLAYSEQUENCE
        {
            get
            {
                return this._DISPLAYSEQUENCE;
            }
            set
            {
                if (this._DISPLAYSEQUENCE != value)
                {
                    this.OnDISPLAYSEQUENCEChanging(value);
                    this.SendPropertyChanging();
                    this._DISPLAYSEQUENCE = value;
                    this.SendPropertyChanged("DISPLAYSEQUENCE");
                    this.OnDISPLAYSEQUENCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SECTIONTYPE in the schema.
        /// </summary>
        [Column(Name = @"SECTION_TYPE", Storage = "_SECTIONTYPE", CanBeNull = false, DbType = "VARCHAR2(30 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string SECTIONTYPE
        {
            get
            {
                return this._SECTIONTYPE;
            }
            set
            {
                if (this._SECTIONTYPE != value)
                {
                    this.OnSECTIONTYPEChanging(value);
                    this.SendPropertyChanging();
                    this._SECTIONTYPE = value;
                    this.SendPropertyChanged("SECTIONTYPE");
                    this.OnSECTIONTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TITLE in the schema.
        /// </summary>
        [Column(Storage = "_TITLE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TITLE
        {
            get
            {
                return this._TITLE;
            }
            set
            {
                if (this._TITLE != value)
                {
                    this.OnTITLEChanging(value);
                    this.SendPropertyChanging();
                    this._TITLE = value;
                    this.SendPropertyChanged("TITLE");
                    this.OnTITLEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONTENT in the schema.
        /// </summary>
        [Column(Storage = "_CONTENT", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONTENT
        {
            get
            {
                return this._CONTENT;
            }
            set
            {
                if (this._CONTENT != value)
                {
                    this.OnCONTENTChanging(value);
                    this.SendPropertyChanging();
                    this._CONTENT = value;
                    this.SendPropertyChanged("CONTENT");
                    this.OnCONTENTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONTENTUPPER in the schema.
        /// </summary>
        [Column(Name = @"CONTENT_UPPER", Storage = "_CONTENTUPPER", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONTENTUPPER
        {
            get
            {
                return this._CONTENTUPPER;
            }
            set
            {
                if (this._CONTENTUPPER != value)
                {
                    this.OnCONTENTUPPERChanging(value);
                    this.SendPropertyChanging();
                    this._CONTENTUPPER = value;
                    this.SendPropertyChanged("CONTENTUPPER");
                    this.OnCONTENTUPPERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAVSTARTWEBPAGEID in the schema.
        /// </summary>
        [Column(Name = @"NAV_START_WEBPAGE_ID", Storage = "_NAVSTARTWEBPAGEID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> NAVSTARTWEBPAGEID
        {
            get
            {
                return this._NAVSTARTWEBPAGEID;
            }
            set
            {
                if (this._NAVSTARTWEBPAGEID != value)
                {
                    this.OnNAVSTARTWEBPAGEIDChanging(value);
                    this.SendPropertyChanging();
                    this._NAVSTARTWEBPAGEID = value;
                    this.SendPropertyChanged("NAVSTARTWEBPAGEID");
                    this.OnNAVSTARTWEBPAGEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAVMAXLEVEL in the schema.
        /// </summary>
        [Column(Name = @"NAV_MAX_LEVEL", Storage = "_NAVMAXLEVEL", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> NAVMAXLEVEL
        {
            get
            {
                return this._NAVMAXLEVEL;
            }
            set
            {
                if (this._NAVMAXLEVEL != value)
                {
                    this.OnNAVMAXLEVELChanging(value);
                    this.SendPropertyChanging();
                    this._NAVMAXLEVEL = value;
                    this.SendPropertyChanged("NAVMAXLEVEL");
                    this.OnNAVMAXLEVELChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NAVINCLUDELINK in the schema.
        /// </summary>
        [Column(Name = @"NAV_INCLUDE_LINK", Storage = "_NAVINCLUDELINK", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NAVINCLUDELINK
        {
            get
            {
                return this._NAVINCLUDELINK;
            }
            set
            {
                if (this._NAVINCLUDELINK != value)
                {
                    this.OnNAVINCLUDELINKChanging(value);
                    this.SendPropertyChanging();
                    this._NAVINCLUDELINK = value;
                    this.SendPropertyChanged("NAVINCLUDELINK");
                    this.OnNAVINCLUDELINKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAGRIDID in the schema.
        /// </summary>
        [Column(Name = @"DATA_GRID_ID", Storage = "_DATAGRIDID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> DATAGRIDID
        {
            get
            {
                return this._DATAGRIDID;
            }
            set
            {
                if (this._DATAGRIDID != value)
                {
                    this.OnDATAGRIDIDChanging(value);
                    this.SendPropertyChanging();
                    this._DATAGRIDID = value;
                    this.SendPropertyChanged("DATAGRIDID");
                    this.OnDATAGRIDIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REPORTID in the schema.
        /// </summary>
        [Column(Name = @"REPORT_ID", Storage = "_REPORTID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> REPORTID
        {
            get
            {
                return this._REPORTID;
            }
            set
            {
                if (this._REPORTID != value)
                {
                    this.OnREPORTIDChanging(value);
                    this.SendPropertyChanging();
                    this._REPORTID = value;
                    this.SendPropertyChanged("REPORTID");
                    this.OnREPORTIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATASECTIONSTYLE in the schema.
        /// </summary>
        [Column(Name = @"DATA_SECTION_STYLE", Storage = "_DATASECTIONSTYLE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> DATASECTIONSTYLE
        {
            get
            {
                return this._DATASECTIONSTYLE;
            }
            set
            {
                if (this._DATASECTIONSTYLE != value)
                {
                    this.OnDATASECTIONSTYLEChanging(value);
                    this.SendPropertyChanging();
                    this._DATASECTIONSTYLE = value;
                    this.SendPropertyChanged("DATASECTIONSTYLE");
                    this.OnDATASECTIONSTYLEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHARTTYPE in the schema.
        /// </summary>
        [Column(Name = @"CHART_TYPE", Storage = "_CHARTTYPE", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CHARTTYPE
        {
            get
            {
                return this._CHARTTYPE;
            }
            set
            {
                if (this._CHARTTYPE != value)
                {
                    this.OnCHARTTYPEChanging(value);
                    this.SendPropertyChanging();
                    this._CHARTTYPE = value;
                    this.SendPropertyChanged("CHARTTYPE");
                    this.OnCHARTTYPEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHART3D in the schema.
        /// </summary>
        [Column(Name = @"CHART_3D", Storage = "_CHART3D", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CHART3D
        {
            get
            {
                return this._CHART3D;
            }
            set
            {
                if (this._CHART3D != value)
                {
                    this.OnCHART3DChanging(value);
                    this.SendPropertyChanging();
                    this._CHART3D = value;
                    this.SendPropertyChanged("CHART3D");
                    this.OnCHART3DChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHARTLABEL in the schema.
        /// </summary>
        [Column(Name = @"CHART_LABEL", Storage = "_CHARTLABEL", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CHARTLABEL
        {
            get
            {
                return this._CHARTLABEL;
            }
            set
            {
                if (this._CHARTLABEL != value)
                {
                    this.OnCHARTLABELChanging(value);
                    this.SendPropertyChanging();
                    this._CHARTLABEL = value;
                    this.SendPropertyChanged("CHARTLABEL");
                    this.OnCHARTLABELChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LABELAXISTITLE in the schema.
        /// </summary>
        [Column(Name = @"LABEL_AXIS_TITLE", Storage = "_LABELAXISTITLE", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LABELAXISTITLE
        {
            get
            {
                return this._LABELAXISTITLE;
            }
            set
            {
                if (this._LABELAXISTITLE != value)
                {
                    this.OnLABELAXISTITLEChanging(value);
                    this.SendPropertyChanging();
                    this._LABELAXISTITLE = value;
                    this.SendPropertyChanged("LABELAXISTITLE");
                    this.OnLABELAXISTITLEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHARTVALUE in the schema.
        /// </summary>
        [Column(Name = @"CHART_VALUE", Storage = "_CHARTVALUE", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CHARTVALUE
        {
            get
            {
                return this._CHARTVALUE;
            }
            set
            {
                if (this._CHARTVALUE != value)
                {
                    this.OnCHARTVALUEChanging(value);
                    this.SendPropertyChanging();
                    this._CHARTVALUE = value;
                    this.SendPropertyChanged("CHARTVALUE");
                    this.OnCHARTVALUEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALUEAXISTITLE in the schema.
        /// </summary>
        [Column(Name = @"VALUE_AXIS_TITLE", Storage = "_VALUEAXISTITLE", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string VALUEAXISTITLE
        {
            get
            {
                return this._VALUEAXISTITLE;
            }
            set
            {
                if (this._VALUEAXISTITLE != value)
                {
                    this.OnVALUEAXISTITLEChanging(value);
                    this.SendPropertyChanging();
                    this._VALUEAXISTITLE = value;
                    this.SendPropertyChanged("VALUEAXISTITLE");
                    this.OnVALUEAXISTITLEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHARTAGGREGATE in the schema.
        /// </summary>
        [Column(Name = @"CHART_AGGREGATE", Storage = "_CHARTAGGREGATE", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CHARTAGGREGATE
        {
            get
            {
                return this._CHARTAGGREGATE;
            }
            set
            {
                if (this._CHARTAGGREGATE != value)
                {
                    this.OnCHARTAGGREGATEChanging(value);
                    this.SendPropertyChanging();
                    this._CHARTAGGREGATE = value;
                    this.SendPropertyChanged("CHARTAGGREGATE");
                    this.OnCHARTAGGREGATEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHARTSORTING in the schema.
        /// </summary>
        [Column(Name = @"CHART_SORTING", Storage = "_CHARTSORTING", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string CHARTSORTING
        {
            get
            {
                return this._CHARTSORTING;
            }
            set
            {
                if (this._CHARTSORTING != value)
                {
                    this.OnCHARTSORTINGChanging(value);
                    this.SendPropertyChanging();
                    this._CHARTSORTING = value;
                    this.SendPropertyChanged("CHARTSORTING");
                    this.OnCHARTSORTINGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDON in the schema.
        /// </summary>
        [Column(Name = @"CREATED_ON", Storage = "_CREATEDON", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime CREATEDON
        {
            get
            {
                return this._CREATEDON;
            }
            set
            {
                if (this._CREATEDON != value)
                {
                    this.OnCREATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDON = value;
                    this.SendPropertyChanged("CREATEDON");
                    this.OnCREATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDBY in the schema.
        /// </summary>
        [Column(Name = @"CREATED_BY", Storage = "_CREATEDBY", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CREATEDBY
        {
            get
            {
                return this._CREATEDBY;
            }
            set
            {
                if (this._CREATEDBY != value)
                {
                    this.OnCREATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDBY = value;
                    this.SendPropertyChanged("CREATEDBY");
                    this.OnCREATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDON in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_ON", Storage = "_UPDATEDON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> UPDATEDON
        {
            get
            {
                return this._UPDATEDON;
            }
            set
            {
                if (this._UPDATEDON != value)
                {
                    this.OnUPDATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDON = value;
                    this.SendPropertyChanged("UPDATEDON");
                    this.OnUPDATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDBY in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_BY", Storage = "_UPDATEDBY", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UPDATEDBY
        {
            get
            {
                return this._UPDATEDBY;
            }
            set
            {
                if (this._UPDATEDBY != value)
                {
                    this.OnUPDATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDBY = value;
                    this.SendPropertyChanged("UPDATEDBY");
                    this.OnUPDATEDBYChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.APEXWSROW in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.APEX$_WS_ROWS")]
    public partial class APEXWSROW : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private decimal _WSAPPID;

        private decimal _DATAGRIDID;

        private string _UNIQUEVALUE;

        private string _TAGS;

        private System.Nullable<decimal> _PARENTROWID;

        private string _OWNER;

        private string _GEOCODE;

        private System.Nullable<decimal> _LOADORDER;

        private System.Nullable<decimal> _CHANGECOUNT;

        private System.DateTime _CREATEDON;

        private string _CREATEDBY;

        private System.Nullable<System.DateTime> _UPDATEDON;

        private string _UPDATEDBY;

        private string _C001;

        private string _C002;

        private string _C003;

        private string _C004;

        private string _C005;

        private string _C006;

        private string _C007;

        private string _C008;

        private string _C009;

        private string _C010;

        private string _C011;

        private string _C012;

        private string _C013;

        private string _C014;

        private string _C015;

        private string _C016;

        private string _C017;

        private string _C018;

        private string _C019;

        private string _C020;

        private string _C021;

        private string _C022;

        private string _C023;

        private string _C024;

        private string _C025;

        private string _C026;

        private string _C027;

        private string _C028;

        private string _C029;

        private string _C030;

        private string _C031;

        private string _C032;

        private string _C033;

        private string _C034;

        private string _C035;

        private string _C036;

        private string _C037;

        private string _C038;

        private string _C039;

        private string _C040;

        private string _C041;

        private string _C042;

        private string _C043;

        private string _C044;

        private string _C045;

        private string _C046;

        private string _C047;

        private string _C048;

        private string _C049;

        private string _C050;

        private System.Nullable<decimal> _N001;

        private System.Nullable<decimal> _N002;

        private System.Nullable<decimal> _N003;

        private System.Nullable<decimal> _N004;

        private System.Nullable<decimal> _N005;

        private System.Nullable<decimal> _N006;

        private System.Nullable<decimal> _N007;

        private System.Nullable<decimal> _N008;

        private System.Nullable<decimal> _N009;

        private System.Nullable<decimal> _N010;

        private System.Nullable<decimal> _N011;

        private System.Nullable<decimal> _N012;

        private System.Nullable<decimal> _N013;

        private System.Nullable<decimal> _N014;

        private System.Nullable<decimal> _N015;

        private System.Nullable<decimal> _N016;

        private System.Nullable<decimal> _N017;

        private System.Nullable<decimal> _N018;

        private System.Nullable<decimal> _N019;

        private System.Nullable<decimal> _N020;

        private System.Nullable<decimal> _N021;

        private System.Nullable<decimal> _N022;

        private System.Nullable<decimal> _N023;

        private System.Nullable<decimal> _N024;

        private System.Nullable<decimal> _N025;

        private System.Nullable<decimal> _N026;

        private System.Nullable<decimal> _N027;

        private System.Nullable<decimal> _N028;

        private System.Nullable<decimal> _N029;

        private System.Nullable<decimal> _N030;

        private System.Nullable<decimal> _N031;

        private System.Nullable<decimal> _N032;

        private System.Nullable<decimal> _N033;

        private System.Nullable<decimal> _N034;

        private System.Nullable<decimal> _N035;

        private System.Nullable<decimal> _N036;

        private System.Nullable<decimal> _N037;

        private System.Nullable<decimal> _N038;

        private System.Nullable<decimal> _N039;

        private System.Nullable<decimal> _N040;

        private System.Nullable<decimal> _N041;

        private System.Nullable<decimal> _N042;

        private System.Nullable<decimal> _N043;

        private System.Nullable<decimal> _N044;

        private System.Nullable<decimal> _N045;

        private System.Nullable<decimal> _N046;

        private System.Nullable<decimal> _N047;

        private System.Nullable<decimal> _N048;

        private System.Nullable<decimal> _N049;

        private System.Nullable<decimal> _N050;

        private System.Nullable<System.DateTime> _D001;

        private System.Nullable<System.DateTime> _D002;

        private System.Nullable<System.DateTime> _D003;

        private System.Nullable<System.DateTime> _D004;

        private System.Nullable<System.DateTime> _D005;

        private System.Nullable<System.DateTime> _D006;

        private System.Nullable<System.DateTime> _D007;

        private System.Nullable<System.DateTime> _D008;

        private System.Nullable<System.DateTime> _D009;

        private System.Nullable<System.DateTime> _D010;

        private System.Nullable<System.DateTime> _D011;

        private System.Nullable<System.DateTime> _D012;

        private System.Nullable<System.DateTime> _D013;

        private System.Nullable<System.DateTime> _D014;

        private System.Nullable<System.DateTime> _D015;

        private System.Nullable<System.DateTime> _D016;

        private System.Nullable<System.DateTime> _D017;

        private System.Nullable<System.DateTime> _D018;

        private System.Nullable<System.DateTime> _D019;

        private System.Nullable<System.DateTime> _D020;

        private System.Nullable<System.DateTime> _D021;

        private System.Nullable<System.DateTime> _D022;

        private System.Nullable<System.DateTime> _D023;

        private System.Nullable<System.DateTime> _D024;

        private System.Nullable<System.DateTime> _D025;

        private System.Nullable<System.DateTime> _D026;

        private System.Nullable<System.DateTime> _D027;

        private System.Nullable<System.DateTime> _D028;

        private System.Nullable<System.DateTime> _D029;

        private System.Nullable<System.DateTime> _D030;

        private System.Nullable<System.DateTime> _D031;

        private System.Nullable<System.DateTime> _D032;

        private System.Nullable<System.DateTime> _D033;

        private System.Nullable<System.DateTime> _D034;

        private System.Nullable<System.DateTime> _D035;

        private System.Nullable<System.DateTime> _D036;

        private System.Nullable<System.DateTime> _D037;

        private System.Nullable<System.DateTime> _D038;

        private System.Nullable<System.DateTime> _D039;

        private System.Nullable<System.DateTime> _D040;

        private System.Nullable<System.DateTime> _D041;

        private System.Nullable<System.DateTime> _D042;

        private System.Nullable<System.DateTime> _D043;

        private System.Nullable<System.DateTime> _D044;

        private System.Nullable<System.DateTime> _D045;

        private System.Nullable<System.DateTime> _D046;

        private System.Nullable<System.DateTime> _D047;

        private System.Nullable<System.DateTime> _D048;

        private System.Nullable<System.DateTime> _D049;

        private System.Nullable<System.DateTime> _D050;

        private string _CLOB001;

        private string _SEARCHCLOB;
        #pragma warning restore 0649

        private EntitySet<APEXWSTAG> _APEXWSTAGs;

        private EntitySet<APEXWSFILE> _APEXWSFILEs;

        private EntitySet<APEXWSNOTE> _APEXWSNOTEs;

        private EntitySet<APEXWSLINK> _APEXWSLINKs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnWSAPPIDChanging(decimal value);
        partial void OnWSAPPIDChanged();
        partial void OnDATAGRIDIDChanging(decimal value);
        partial void OnDATAGRIDIDChanged();
        partial void OnUNIQUEVALUEChanging(string value);
        partial void OnUNIQUEVALUEChanged();
        partial void OnTAGSChanging(string value);
        partial void OnTAGSChanged();
        partial void OnPARENTROWIDChanging(System.Nullable<decimal> value);
        partial void OnPARENTROWIDChanged();
        partial void OnOWNERChanging(string value);
        partial void OnOWNERChanged();
        partial void OnGEOCODEChanging(string value);
        partial void OnGEOCODEChanged();
        partial void OnLOADORDERChanging(System.Nullable<decimal> value);
        partial void OnLOADORDERChanged();
        partial void OnCHANGECOUNTChanging(System.Nullable<decimal> value);
        partial void OnCHANGECOUNTChanged();
        partial void OnCREATEDONChanging(System.DateTime value);
        partial void OnCREATEDONChanged();
        partial void OnCREATEDBYChanging(string value);
        partial void OnCREATEDBYChanged();
        partial void OnUPDATEDONChanging(System.Nullable<System.DateTime> value);
        partial void OnUPDATEDONChanged();
        partial void OnUPDATEDBYChanging(string value);
        partial void OnUPDATEDBYChanged();
        partial void OnC001Changing(string value);
        partial void OnC001Changed();
        partial void OnC002Changing(string value);
        partial void OnC002Changed();
        partial void OnC003Changing(string value);
        partial void OnC003Changed();
        partial void OnC004Changing(string value);
        partial void OnC004Changed();
        partial void OnC005Changing(string value);
        partial void OnC005Changed();
        partial void OnC006Changing(string value);
        partial void OnC006Changed();
        partial void OnC007Changing(string value);
        partial void OnC007Changed();
        partial void OnC008Changing(string value);
        partial void OnC008Changed();
        partial void OnC009Changing(string value);
        partial void OnC009Changed();
        partial void OnC010Changing(string value);
        partial void OnC010Changed();
        partial void OnC011Changing(string value);
        partial void OnC011Changed();
        partial void OnC012Changing(string value);
        partial void OnC012Changed();
        partial void OnC013Changing(string value);
        partial void OnC013Changed();
        partial void OnC014Changing(string value);
        partial void OnC014Changed();
        partial void OnC015Changing(string value);
        partial void OnC015Changed();
        partial void OnC016Changing(string value);
        partial void OnC016Changed();
        partial void OnC017Changing(string value);
        partial void OnC017Changed();
        partial void OnC018Changing(string value);
        partial void OnC018Changed();
        partial void OnC019Changing(string value);
        partial void OnC019Changed();
        partial void OnC020Changing(string value);
        partial void OnC020Changed();
        partial void OnC021Changing(string value);
        partial void OnC021Changed();
        partial void OnC022Changing(string value);
        partial void OnC022Changed();
        partial void OnC023Changing(string value);
        partial void OnC023Changed();
        partial void OnC024Changing(string value);
        partial void OnC024Changed();
        partial void OnC025Changing(string value);
        partial void OnC025Changed();
        partial void OnC026Changing(string value);
        partial void OnC026Changed();
        partial void OnC027Changing(string value);
        partial void OnC027Changed();
        partial void OnC028Changing(string value);
        partial void OnC028Changed();
        partial void OnC029Changing(string value);
        partial void OnC029Changed();
        partial void OnC030Changing(string value);
        partial void OnC030Changed();
        partial void OnC031Changing(string value);
        partial void OnC031Changed();
        partial void OnC032Changing(string value);
        partial void OnC032Changed();
        partial void OnC033Changing(string value);
        partial void OnC033Changed();
        partial void OnC034Changing(string value);
        partial void OnC034Changed();
        partial void OnC035Changing(string value);
        partial void OnC035Changed();
        partial void OnC036Changing(string value);
        partial void OnC036Changed();
        partial void OnC037Changing(string value);
        partial void OnC037Changed();
        partial void OnC038Changing(string value);
        partial void OnC038Changed();
        partial void OnC039Changing(string value);
        partial void OnC039Changed();
        partial void OnC040Changing(string value);
        partial void OnC040Changed();
        partial void OnC041Changing(string value);
        partial void OnC041Changed();
        partial void OnC042Changing(string value);
        partial void OnC042Changed();
        partial void OnC043Changing(string value);
        partial void OnC043Changed();
        partial void OnC044Changing(string value);
        partial void OnC044Changed();
        partial void OnC045Changing(string value);
        partial void OnC045Changed();
        partial void OnC046Changing(string value);
        partial void OnC046Changed();
        partial void OnC047Changing(string value);
        partial void OnC047Changed();
        partial void OnC048Changing(string value);
        partial void OnC048Changed();
        partial void OnC049Changing(string value);
        partial void OnC049Changed();
        partial void OnC050Changing(string value);
        partial void OnC050Changed();
        partial void OnN001Changing(System.Nullable<decimal> value);
        partial void OnN001Changed();
        partial void OnN002Changing(System.Nullable<decimal> value);
        partial void OnN002Changed();
        partial void OnN003Changing(System.Nullable<decimal> value);
        partial void OnN003Changed();
        partial void OnN004Changing(System.Nullable<decimal> value);
        partial void OnN004Changed();
        partial void OnN005Changing(System.Nullable<decimal> value);
        partial void OnN005Changed();
        partial void OnN006Changing(System.Nullable<decimal> value);
        partial void OnN006Changed();
        partial void OnN007Changing(System.Nullable<decimal> value);
        partial void OnN007Changed();
        partial void OnN008Changing(System.Nullable<decimal> value);
        partial void OnN008Changed();
        partial void OnN009Changing(System.Nullable<decimal> value);
        partial void OnN009Changed();
        partial void OnN010Changing(System.Nullable<decimal> value);
        partial void OnN010Changed();
        partial void OnN011Changing(System.Nullable<decimal> value);
        partial void OnN011Changed();
        partial void OnN012Changing(System.Nullable<decimal> value);
        partial void OnN012Changed();
        partial void OnN013Changing(System.Nullable<decimal> value);
        partial void OnN013Changed();
        partial void OnN014Changing(System.Nullable<decimal> value);
        partial void OnN014Changed();
        partial void OnN015Changing(System.Nullable<decimal> value);
        partial void OnN015Changed();
        partial void OnN016Changing(System.Nullable<decimal> value);
        partial void OnN016Changed();
        partial void OnN017Changing(System.Nullable<decimal> value);
        partial void OnN017Changed();
        partial void OnN018Changing(System.Nullable<decimal> value);
        partial void OnN018Changed();
        partial void OnN019Changing(System.Nullable<decimal> value);
        partial void OnN019Changed();
        partial void OnN020Changing(System.Nullable<decimal> value);
        partial void OnN020Changed();
        partial void OnN021Changing(System.Nullable<decimal> value);
        partial void OnN021Changed();
        partial void OnN022Changing(System.Nullable<decimal> value);
        partial void OnN022Changed();
        partial void OnN023Changing(System.Nullable<decimal> value);
        partial void OnN023Changed();
        partial void OnN024Changing(System.Nullable<decimal> value);
        partial void OnN024Changed();
        partial void OnN025Changing(System.Nullable<decimal> value);
        partial void OnN025Changed();
        partial void OnN026Changing(System.Nullable<decimal> value);
        partial void OnN026Changed();
        partial void OnN027Changing(System.Nullable<decimal> value);
        partial void OnN027Changed();
        partial void OnN028Changing(System.Nullable<decimal> value);
        partial void OnN028Changed();
        partial void OnN029Changing(System.Nullable<decimal> value);
        partial void OnN029Changed();
        partial void OnN030Changing(System.Nullable<decimal> value);
        partial void OnN030Changed();
        partial void OnN031Changing(System.Nullable<decimal> value);
        partial void OnN031Changed();
        partial void OnN032Changing(System.Nullable<decimal> value);
        partial void OnN032Changed();
        partial void OnN033Changing(System.Nullable<decimal> value);
        partial void OnN033Changed();
        partial void OnN034Changing(System.Nullable<decimal> value);
        partial void OnN034Changed();
        partial void OnN035Changing(System.Nullable<decimal> value);
        partial void OnN035Changed();
        partial void OnN036Changing(System.Nullable<decimal> value);
        partial void OnN036Changed();
        partial void OnN037Changing(System.Nullable<decimal> value);
        partial void OnN037Changed();
        partial void OnN038Changing(System.Nullable<decimal> value);
        partial void OnN038Changed();
        partial void OnN039Changing(System.Nullable<decimal> value);
        partial void OnN039Changed();
        partial void OnN040Changing(System.Nullable<decimal> value);
        partial void OnN040Changed();
        partial void OnN041Changing(System.Nullable<decimal> value);
        partial void OnN041Changed();
        partial void OnN042Changing(System.Nullable<decimal> value);
        partial void OnN042Changed();
        partial void OnN043Changing(System.Nullable<decimal> value);
        partial void OnN043Changed();
        partial void OnN044Changing(System.Nullable<decimal> value);
        partial void OnN044Changed();
        partial void OnN045Changing(System.Nullable<decimal> value);
        partial void OnN045Changed();
        partial void OnN046Changing(System.Nullable<decimal> value);
        partial void OnN046Changed();
        partial void OnN047Changing(System.Nullable<decimal> value);
        partial void OnN047Changed();
        partial void OnN048Changing(System.Nullable<decimal> value);
        partial void OnN048Changed();
        partial void OnN049Changing(System.Nullable<decimal> value);
        partial void OnN049Changed();
        partial void OnN050Changing(System.Nullable<decimal> value);
        partial void OnN050Changed();
        partial void OnD001Changing(System.Nullable<System.DateTime> value);
        partial void OnD001Changed();
        partial void OnD002Changing(System.Nullable<System.DateTime> value);
        partial void OnD002Changed();
        partial void OnD003Changing(System.Nullable<System.DateTime> value);
        partial void OnD003Changed();
        partial void OnD004Changing(System.Nullable<System.DateTime> value);
        partial void OnD004Changed();
        partial void OnD005Changing(System.Nullable<System.DateTime> value);
        partial void OnD005Changed();
        partial void OnD006Changing(System.Nullable<System.DateTime> value);
        partial void OnD006Changed();
        partial void OnD007Changing(System.Nullable<System.DateTime> value);
        partial void OnD007Changed();
        partial void OnD008Changing(System.Nullable<System.DateTime> value);
        partial void OnD008Changed();
        partial void OnD009Changing(System.Nullable<System.DateTime> value);
        partial void OnD009Changed();
        partial void OnD010Changing(System.Nullable<System.DateTime> value);
        partial void OnD010Changed();
        partial void OnD011Changing(System.Nullable<System.DateTime> value);
        partial void OnD011Changed();
        partial void OnD012Changing(System.Nullable<System.DateTime> value);
        partial void OnD012Changed();
        partial void OnD013Changing(System.Nullable<System.DateTime> value);
        partial void OnD013Changed();
        partial void OnD014Changing(System.Nullable<System.DateTime> value);
        partial void OnD014Changed();
        partial void OnD015Changing(System.Nullable<System.DateTime> value);
        partial void OnD015Changed();
        partial void OnD016Changing(System.Nullable<System.DateTime> value);
        partial void OnD016Changed();
        partial void OnD017Changing(System.Nullable<System.DateTime> value);
        partial void OnD017Changed();
        partial void OnD018Changing(System.Nullable<System.DateTime> value);
        partial void OnD018Changed();
        partial void OnD019Changing(System.Nullable<System.DateTime> value);
        partial void OnD019Changed();
        partial void OnD020Changing(System.Nullable<System.DateTime> value);
        partial void OnD020Changed();
        partial void OnD021Changing(System.Nullable<System.DateTime> value);
        partial void OnD021Changed();
        partial void OnD022Changing(System.Nullable<System.DateTime> value);
        partial void OnD022Changed();
        partial void OnD023Changing(System.Nullable<System.DateTime> value);
        partial void OnD023Changed();
        partial void OnD024Changing(System.Nullable<System.DateTime> value);
        partial void OnD024Changed();
        partial void OnD025Changing(System.Nullable<System.DateTime> value);
        partial void OnD025Changed();
        partial void OnD026Changing(System.Nullable<System.DateTime> value);
        partial void OnD026Changed();
        partial void OnD027Changing(System.Nullable<System.DateTime> value);
        partial void OnD027Changed();
        partial void OnD028Changing(System.Nullable<System.DateTime> value);
        partial void OnD028Changed();
        partial void OnD029Changing(System.Nullable<System.DateTime> value);
        partial void OnD029Changed();
        partial void OnD030Changing(System.Nullable<System.DateTime> value);
        partial void OnD030Changed();
        partial void OnD031Changing(System.Nullable<System.DateTime> value);
        partial void OnD031Changed();
        partial void OnD032Changing(System.Nullable<System.DateTime> value);
        partial void OnD032Changed();
        partial void OnD033Changing(System.Nullable<System.DateTime> value);
        partial void OnD033Changed();
        partial void OnD034Changing(System.Nullable<System.DateTime> value);
        partial void OnD034Changed();
        partial void OnD035Changing(System.Nullable<System.DateTime> value);
        partial void OnD035Changed();
        partial void OnD036Changing(System.Nullable<System.DateTime> value);
        partial void OnD036Changed();
        partial void OnD037Changing(System.Nullable<System.DateTime> value);
        partial void OnD037Changed();
        partial void OnD038Changing(System.Nullable<System.DateTime> value);
        partial void OnD038Changed();
        partial void OnD039Changing(System.Nullable<System.DateTime> value);
        partial void OnD039Changed();
        partial void OnD040Changing(System.Nullable<System.DateTime> value);
        partial void OnD040Changed();
        partial void OnD041Changing(System.Nullable<System.DateTime> value);
        partial void OnD041Changed();
        partial void OnD042Changing(System.Nullable<System.DateTime> value);
        partial void OnD042Changed();
        partial void OnD043Changing(System.Nullable<System.DateTime> value);
        partial void OnD043Changed();
        partial void OnD044Changing(System.Nullable<System.DateTime> value);
        partial void OnD044Changed();
        partial void OnD045Changing(System.Nullable<System.DateTime> value);
        partial void OnD045Changed();
        partial void OnD046Changing(System.Nullable<System.DateTime> value);
        partial void OnD046Changed();
        partial void OnD047Changing(System.Nullable<System.DateTime> value);
        partial void OnD047Changed();
        partial void OnD048Changing(System.Nullable<System.DateTime> value);
        partial void OnD048Changed();
        partial void OnD049Changing(System.Nullable<System.DateTime> value);
        partial void OnD049Changed();
        partial void OnD050Changing(System.Nullable<System.DateTime> value);
        partial void OnD050Changed();
        partial void OnCLOB001Changing(string value);
        partial void OnCLOB001Changed();
        partial void OnSEARCHCLOBChanging(string value);
        partial void OnSEARCHCLOBChanged();
        #endregion

        public APEXWSROW()
        {
            this._APEXWSTAGs = new EntitySet<APEXWSTAG>(new Action<APEXWSTAG>(this.attach_APEXWSTAGs), new Action<APEXWSTAG>(this.detach_APEXWSTAGs));
            this._APEXWSFILEs = new EntitySet<APEXWSFILE>(new Action<APEXWSFILE>(this.attach_APEXWSFILEs), new Action<APEXWSFILE>(this.detach_APEXWSFILEs));
            this._APEXWSNOTEs = new EntitySet<APEXWSNOTE>(new Action<APEXWSNOTE>(this.attach_APEXWSNOTEs), new Action<APEXWSNOTE>(this.detach_APEXWSNOTEs));
            this._APEXWSLINKs = new EntitySet<APEXWSLINK>(new Action<APEXWSLINK>(this.attach_APEXWSLINKs), new Action<APEXWSLINK>(this.detach_APEXWSLINKs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WSAPPID in the schema.
        /// </summary>
        [Column(Name = @"WS_APP_ID", Storage = "_WSAPPID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WSAPPID
        {
            get
            {
                return this._WSAPPID;
            }
            set
            {
                if (this._WSAPPID != value)
                {
                    this.OnWSAPPIDChanging(value);
                    this.SendPropertyChanging();
                    this._WSAPPID = value;
                    this.SendPropertyChanged("WSAPPID");
                    this.OnWSAPPIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAGRIDID in the schema.
        /// </summary>
        [Column(Name = @"DATA_GRID_ID", Storage = "_DATAGRIDID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DATAGRIDID
        {
            get
            {
                return this._DATAGRIDID;
            }
            set
            {
                if (this._DATAGRIDID != value)
                {
                    this.OnDATAGRIDIDChanging(value);
                    this.SendPropertyChanging();
                    this._DATAGRIDID = value;
                    this.SendPropertyChanged("DATAGRIDID");
                    this.OnDATAGRIDIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UNIQUEVALUE in the schema.
        /// </summary>
        [Column(Name = @"UNIQUE_VALUE", Storage = "_UNIQUEVALUE", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UNIQUEVALUE
        {
            get
            {
                return this._UNIQUEVALUE;
            }
            set
            {
                if (this._UNIQUEVALUE != value)
                {
                    this.OnUNIQUEVALUEChanging(value);
                    this.SendPropertyChanging();
                    this._UNIQUEVALUE = value;
                    this.SendPropertyChanged("UNIQUEVALUE");
                    this.OnUNIQUEVALUEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TAGS in the schema.
        /// </summary>
        [Column(Storage = "_TAGS", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TAGS
        {
            get
            {
                return this._TAGS;
            }
            set
            {
                if (this._TAGS != value)
                {
                    this.OnTAGSChanging(value);
                    this.SendPropertyChanging();
                    this._TAGS = value;
                    this.SendPropertyChanged("TAGS");
                    this.OnTAGSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PARENTROWID in the schema.
        /// </summary>
        [Column(Name = @"PARENT_ROW_ID", Storage = "_PARENTROWID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> PARENTROWID
        {
            get
            {
                return this._PARENTROWID;
            }
            set
            {
                if (this._PARENTROWID != value)
                {
                    this.OnPARENTROWIDChanging(value);
                    this.SendPropertyChanging();
                    this._PARENTROWID = value;
                    this.SendPropertyChanged("PARENTROWID");
                    this.OnPARENTROWIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OWNER in the schema.
        /// </summary>
        [Column(Storage = "_OWNER", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string OWNER
        {
            get
            {
                return this._OWNER;
            }
            set
            {
                if (this._OWNER != value)
                {
                    this.OnOWNERChanging(value);
                    this.SendPropertyChanging();
                    this._OWNER = value;
                    this.SendPropertyChanged("OWNER");
                    this.OnOWNERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GEOCODE in the schema.
        /// </summary>
        [Column(Storage = "_GEOCODE", DbType = "VARCHAR2(512 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string GEOCODE
        {
            get
            {
                return this._GEOCODE;
            }
            set
            {
                if (this._GEOCODE != value)
                {
                    this.OnGEOCODEChanging(value);
                    this.SendPropertyChanging();
                    this._GEOCODE = value;
                    this.SendPropertyChanged("GEOCODE");
                    this.OnGEOCODEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOADORDER in the schema.
        /// </summary>
        [Column(Name = @"LOAD_ORDER", Storage = "_LOADORDER", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> LOADORDER
        {
            get
            {
                return this._LOADORDER;
            }
            set
            {
                if (this._LOADORDER != value)
                {
                    this.OnLOADORDERChanging(value);
                    this.SendPropertyChanging();
                    this._LOADORDER = value;
                    this.SendPropertyChanged("LOADORDER");
                    this.OnLOADORDERChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHANGECOUNT in the schema.
        /// </summary>
        [Column(Name = @"CHANGE_COUNT", Storage = "_CHANGECOUNT", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> CHANGECOUNT
        {
            get
            {
                return this._CHANGECOUNT;
            }
            set
            {
                if (this._CHANGECOUNT != value)
                {
                    this.OnCHANGECOUNTChanging(value);
                    this.SendPropertyChanging();
                    this._CHANGECOUNT = value;
                    this.SendPropertyChanged("CHANGECOUNT");
                    this.OnCHANGECOUNTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDON in the schema.
        /// </summary>
        [Column(Name = @"CREATED_ON", Storage = "_CREATEDON", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime CREATEDON
        {
            get
            {
                return this._CREATEDON;
            }
            set
            {
                if (this._CREATEDON != value)
                {
                    this.OnCREATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDON = value;
                    this.SendPropertyChanged("CREATEDON");
                    this.OnCREATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDBY in the schema.
        /// </summary>
        [Column(Name = @"CREATED_BY", Storage = "_CREATEDBY", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CREATEDBY
        {
            get
            {
                return this._CREATEDBY;
            }
            set
            {
                if (this._CREATEDBY != value)
                {
                    this.OnCREATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDBY = value;
                    this.SendPropertyChanged("CREATEDBY");
                    this.OnCREATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDON in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_ON", Storage = "_UPDATEDON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> UPDATEDON
        {
            get
            {
                return this._UPDATEDON;
            }
            set
            {
                if (this._UPDATEDON != value)
                {
                    this.OnUPDATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDON = value;
                    this.SendPropertyChanged("UPDATEDON");
                    this.OnUPDATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDBY in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_BY", Storage = "_UPDATEDBY", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UPDATEDBY
        {
            get
            {
                return this._UPDATEDBY;
            }
            set
            {
                if (this._UPDATEDBY != value)
                {
                    this.OnUPDATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDBY = value;
                    this.SendPropertyChanged("UPDATEDBY");
                    this.OnUPDATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C001 in the schema.
        /// </summary>
        [Column(Storage = "_C001", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C001
        {
            get
            {
                return this._C001;
            }
            set
            {
                if (this._C001 != value)
                {
                    this.OnC001Changing(value);
                    this.SendPropertyChanging();
                    this._C001 = value;
                    this.SendPropertyChanged("C001");
                    this.OnC001Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C002 in the schema.
        /// </summary>
        [Column(Storage = "_C002", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C002
        {
            get
            {
                return this._C002;
            }
            set
            {
                if (this._C002 != value)
                {
                    this.OnC002Changing(value);
                    this.SendPropertyChanging();
                    this._C002 = value;
                    this.SendPropertyChanged("C002");
                    this.OnC002Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C003 in the schema.
        /// </summary>
        [Column(Storage = "_C003", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C003
        {
            get
            {
                return this._C003;
            }
            set
            {
                if (this._C003 != value)
                {
                    this.OnC003Changing(value);
                    this.SendPropertyChanging();
                    this._C003 = value;
                    this.SendPropertyChanged("C003");
                    this.OnC003Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C004 in the schema.
        /// </summary>
        [Column(Storage = "_C004", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C004
        {
            get
            {
                return this._C004;
            }
            set
            {
                if (this._C004 != value)
                {
                    this.OnC004Changing(value);
                    this.SendPropertyChanging();
                    this._C004 = value;
                    this.SendPropertyChanged("C004");
                    this.OnC004Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C005 in the schema.
        /// </summary>
        [Column(Storage = "_C005", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C005
        {
            get
            {
                return this._C005;
            }
            set
            {
                if (this._C005 != value)
                {
                    this.OnC005Changing(value);
                    this.SendPropertyChanging();
                    this._C005 = value;
                    this.SendPropertyChanged("C005");
                    this.OnC005Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C006 in the schema.
        /// </summary>
        [Column(Storage = "_C006", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C006
        {
            get
            {
                return this._C006;
            }
            set
            {
                if (this._C006 != value)
                {
                    this.OnC006Changing(value);
                    this.SendPropertyChanging();
                    this._C006 = value;
                    this.SendPropertyChanged("C006");
                    this.OnC006Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C007 in the schema.
        /// </summary>
        [Column(Storage = "_C007", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C007
        {
            get
            {
                return this._C007;
            }
            set
            {
                if (this._C007 != value)
                {
                    this.OnC007Changing(value);
                    this.SendPropertyChanging();
                    this._C007 = value;
                    this.SendPropertyChanged("C007");
                    this.OnC007Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C008 in the schema.
        /// </summary>
        [Column(Storage = "_C008", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C008
        {
            get
            {
                return this._C008;
            }
            set
            {
                if (this._C008 != value)
                {
                    this.OnC008Changing(value);
                    this.SendPropertyChanging();
                    this._C008 = value;
                    this.SendPropertyChanged("C008");
                    this.OnC008Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C009 in the schema.
        /// </summary>
        [Column(Storage = "_C009", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C009
        {
            get
            {
                return this._C009;
            }
            set
            {
                if (this._C009 != value)
                {
                    this.OnC009Changing(value);
                    this.SendPropertyChanging();
                    this._C009 = value;
                    this.SendPropertyChanged("C009");
                    this.OnC009Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C010 in the schema.
        /// </summary>
        [Column(Storage = "_C010", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C010
        {
            get
            {
                return this._C010;
            }
            set
            {
                if (this._C010 != value)
                {
                    this.OnC010Changing(value);
                    this.SendPropertyChanging();
                    this._C010 = value;
                    this.SendPropertyChanged("C010");
                    this.OnC010Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C011 in the schema.
        /// </summary>
        [Column(Storage = "_C011", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C011
        {
            get
            {
                return this._C011;
            }
            set
            {
                if (this._C011 != value)
                {
                    this.OnC011Changing(value);
                    this.SendPropertyChanging();
                    this._C011 = value;
                    this.SendPropertyChanged("C011");
                    this.OnC011Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C012 in the schema.
        /// </summary>
        [Column(Storage = "_C012", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C012
        {
            get
            {
                return this._C012;
            }
            set
            {
                if (this._C012 != value)
                {
                    this.OnC012Changing(value);
                    this.SendPropertyChanging();
                    this._C012 = value;
                    this.SendPropertyChanged("C012");
                    this.OnC012Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C013 in the schema.
        /// </summary>
        [Column(Storage = "_C013", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C013
        {
            get
            {
                return this._C013;
            }
            set
            {
                if (this._C013 != value)
                {
                    this.OnC013Changing(value);
                    this.SendPropertyChanging();
                    this._C013 = value;
                    this.SendPropertyChanged("C013");
                    this.OnC013Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C014 in the schema.
        /// </summary>
        [Column(Storage = "_C014", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C014
        {
            get
            {
                return this._C014;
            }
            set
            {
                if (this._C014 != value)
                {
                    this.OnC014Changing(value);
                    this.SendPropertyChanging();
                    this._C014 = value;
                    this.SendPropertyChanged("C014");
                    this.OnC014Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C015 in the schema.
        /// </summary>
        [Column(Storage = "_C015", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C015
        {
            get
            {
                return this._C015;
            }
            set
            {
                if (this._C015 != value)
                {
                    this.OnC015Changing(value);
                    this.SendPropertyChanging();
                    this._C015 = value;
                    this.SendPropertyChanged("C015");
                    this.OnC015Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C016 in the schema.
        /// </summary>
        [Column(Storage = "_C016", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C016
        {
            get
            {
                return this._C016;
            }
            set
            {
                if (this._C016 != value)
                {
                    this.OnC016Changing(value);
                    this.SendPropertyChanging();
                    this._C016 = value;
                    this.SendPropertyChanged("C016");
                    this.OnC016Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C017 in the schema.
        /// </summary>
        [Column(Storage = "_C017", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C017
        {
            get
            {
                return this._C017;
            }
            set
            {
                if (this._C017 != value)
                {
                    this.OnC017Changing(value);
                    this.SendPropertyChanging();
                    this._C017 = value;
                    this.SendPropertyChanged("C017");
                    this.OnC017Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C018 in the schema.
        /// </summary>
        [Column(Storage = "_C018", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C018
        {
            get
            {
                return this._C018;
            }
            set
            {
                if (this._C018 != value)
                {
                    this.OnC018Changing(value);
                    this.SendPropertyChanging();
                    this._C018 = value;
                    this.SendPropertyChanged("C018");
                    this.OnC018Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C019 in the schema.
        /// </summary>
        [Column(Storage = "_C019", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C019
        {
            get
            {
                return this._C019;
            }
            set
            {
                if (this._C019 != value)
                {
                    this.OnC019Changing(value);
                    this.SendPropertyChanging();
                    this._C019 = value;
                    this.SendPropertyChanged("C019");
                    this.OnC019Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C020 in the schema.
        /// </summary>
        [Column(Storage = "_C020", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C020
        {
            get
            {
                return this._C020;
            }
            set
            {
                if (this._C020 != value)
                {
                    this.OnC020Changing(value);
                    this.SendPropertyChanging();
                    this._C020 = value;
                    this.SendPropertyChanged("C020");
                    this.OnC020Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C021 in the schema.
        /// </summary>
        [Column(Storage = "_C021", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C021
        {
            get
            {
                return this._C021;
            }
            set
            {
                if (this._C021 != value)
                {
                    this.OnC021Changing(value);
                    this.SendPropertyChanging();
                    this._C021 = value;
                    this.SendPropertyChanged("C021");
                    this.OnC021Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C022 in the schema.
        /// </summary>
        [Column(Storage = "_C022", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C022
        {
            get
            {
                return this._C022;
            }
            set
            {
                if (this._C022 != value)
                {
                    this.OnC022Changing(value);
                    this.SendPropertyChanging();
                    this._C022 = value;
                    this.SendPropertyChanged("C022");
                    this.OnC022Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C023 in the schema.
        /// </summary>
        [Column(Storage = "_C023", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C023
        {
            get
            {
                return this._C023;
            }
            set
            {
                if (this._C023 != value)
                {
                    this.OnC023Changing(value);
                    this.SendPropertyChanging();
                    this._C023 = value;
                    this.SendPropertyChanged("C023");
                    this.OnC023Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C024 in the schema.
        /// </summary>
        [Column(Storage = "_C024", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C024
        {
            get
            {
                return this._C024;
            }
            set
            {
                if (this._C024 != value)
                {
                    this.OnC024Changing(value);
                    this.SendPropertyChanging();
                    this._C024 = value;
                    this.SendPropertyChanged("C024");
                    this.OnC024Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C025 in the schema.
        /// </summary>
        [Column(Storage = "_C025", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C025
        {
            get
            {
                return this._C025;
            }
            set
            {
                if (this._C025 != value)
                {
                    this.OnC025Changing(value);
                    this.SendPropertyChanging();
                    this._C025 = value;
                    this.SendPropertyChanged("C025");
                    this.OnC025Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C026 in the schema.
        /// </summary>
        [Column(Storage = "_C026", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C026
        {
            get
            {
                return this._C026;
            }
            set
            {
                if (this._C026 != value)
                {
                    this.OnC026Changing(value);
                    this.SendPropertyChanging();
                    this._C026 = value;
                    this.SendPropertyChanged("C026");
                    this.OnC026Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C027 in the schema.
        /// </summary>
        [Column(Storage = "_C027", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C027
        {
            get
            {
                return this._C027;
            }
            set
            {
                if (this._C027 != value)
                {
                    this.OnC027Changing(value);
                    this.SendPropertyChanging();
                    this._C027 = value;
                    this.SendPropertyChanged("C027");
                    this.OnC027Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C028 in the schema.
        /// </summary>
        [Column(Storage = "_C028", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C028
        {
            get
            {
                return this._C028;
            }
            set
            {
                if (this._C028 != value)
                {
                    this.OnC028Changing(value);
                    this.SendPropertyChanging();
                    this._C028 = value;
                    this.SendPropertyChanged("C028");
                    this.OnC028Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C029 in the schema.
        /// </summary>
        [Column(Storage = "_C029", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C029
        {
            get
            {
                return this._C029;
            }
            set
            {
                if (this._C029 != value)
                {
                    this.OnC029Changing(value);
                    this.SendPropertyChanging();
                    this._C029 = value;
                    this.SendPropertyChanged("C029");
                    this.OnC029Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C030 in the schema.
        /// </summary>
        [Column(Storage = "_C030", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C030
        {
            get
            {
                return this._C030;
            }
            set
            {
                if (this._C030 != value)
                {
                    this.OnC030Changing(value);
                    this.SendPropertyChanging();
                    this._C030 = value;
                    this.SendPropertyChanged("C030");
                    this.OnC030Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C031 in the schema.
        /// </summary>
        [Column(Storage = "_C031", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C031
        {
            get
            {
                return this._C031;
            }
            set
            {
                if (this._C031 != value)
                {
                    this.OnC031Changing(value);
                    this.SendPropertyChanging();
                    this._C031 = value;
                    this.SendPropertyChanged("C031");
                    this.OnC031Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C032 in the schema.
        /// </summary>
        [Column(Storage = "_C032", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C032
        {
            get
            {
                return this._C032;
            }
            set
            {
                if (this._C032 != value)
                {
                    this.OnC032Changing(value);
                    this.SendPropertyChanging();
                    this._C032 = value;
                    this.SendPropertyChanged("C032");
                    this.OnC032Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C033 in the schema.
        /// </summary>
        [Column(Storage = "_C033", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C033
        {
            get
            {
                return this._C033;
            }
            set
            {
                if (this._C033 != value)
                {
                    this.OnC033Changing(value);
                    this.SendPropertyChanging();
                    this._C033 = value;
                    this.SendPropertyChanged("C033");
                    this.OnC033Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C034 in the schema.
        /// </summary>
        [Column(Storage = "_C034", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C034
        {
            get
            {
                return this._C034;
            }
            set
            {
                if (this._C034 != value)
                {
                    this.OnC034Changing(value);
                    this.SendPropertyChanging();
                    this._C034 = value;
                    this.SendPropertyChanged("C034");
                    this.OnC034Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C035 in the schema.
        /// </summary>
        [Column(Storage = "_C035", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C035
        {
            get
            {
                return this._C035;
            }
            set
            {
                if (this._C035 != value)
                {
                    this.OnC035Changing(value);
                    this.SendPropertyChanging();
                    this._C035 = value;
                    this.SendPropertyChanged("C035");
                    this.OnC035Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C036 in the schema.
        /// </summary>
        [Column(Storage = "_C036", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C036
        {
            get
            {
                return this._C036;
            }
            set
            {
                if (this._C036 != value)
                {
                    this.OnC036Changing(value);
                    this.SendPropertyChanging();
                    this._C036 = value;
                    this.SendPropertyChanged("C036");
                    this.OnC036Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C037 in the schema.
        /// </summary>
        [Column(Storage = "_C037", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C037
        {
            get
            {
                return this._C037;
            }
            set
            {
                if (this._C037 != value)
                {
                    this.OnC037Changing(value);
                    this.SendPropertyChanging();
                    this._C037 = value;
                    this.SendPropertyChanged("C037");
                    this.OnC037Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C038 in the schema.
        /// </summary>
        [Column(Storage = "_C038", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C038
        {
            get
            {
                return this._C038;
            }
            set
            {
                if (this._C038 != value)
                {
                    this.OnC038Changing(value);
                    this.SendPropertyChanging();
                    this._C038 = value;
                    this.SendPropertyChanged("C038");
                    this.OnC038Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C039 in the schema.
        /// </summary>
        [Column(Storage = "_C039", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C039
        {
            get
            {
                return this._C039;
            }
            set
            {
                if (this._C039 != value)
                {
                    this.OnC039Changing(value);
                    this.SendPropertyChanging();
                    this._C039 = value;
                    this.SendPropertyChanged("C039");
                    this.OnC039Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C040 in the schema.
        /// </summary>
        [Column(Storage = "_C040", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C040
        {
            get
            {
                return this._C040;
            }
            set
            {
                if (this._C040 != value)
                {
                    this.OnC040Changing(value);
                    this.SendPropertyChanging();
                    this._C040 = value;
                    this.SendPropertyChanged("C040");
                    this.OnC040Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C041 in the schema.
        /// </summary>
        [Column(Storage = "_C041", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C041
        {
            get
            {
                return this._C041;
            }
            set
            {
                if (this._C041 != value)
                {
                    this.OnC041Changing(value);
                    this.SendPropertyChanging();
                    this._C041 = value;
                    this.SendPropertyChanged("C041");
                    this.OnC041Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C042 in the schema.
        /// </summary>
        [Column(Storage = "_C042", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C042
        {
            get
            {
                return this._C042;
            }
            set
            {
                if (this._C042 != value)
                {
                    this.OnC042Changing(value);
                    this.SendPropertyChanging();
                    this._C042 = value;
                    this.SendPropertyChanged("C042");
                    this.OnC042Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C043 in the schema.
        /// </summary>
        [Column(Storage = "_C043", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C043
        {
            get
            {
                return this._C043;
            }
            set
            {
                if (this._C043 != value)
                {
                    this.OnC043Changing(value);
                    this.SendPropertyChanging();
                    this._C043 = value;
                    this.SendPropertyChanged("C043");
                    this.OnC043Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C044 in the schema.
        /// </summary>
        [Column(Storage = "_C044", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C044
        {
            get
            {
                return this._C044;
            }
            set
            {
                if (this._C044 != value)
                {
                    this.OnC044Changing(value);
                    this.SendPropertyChanging();
                    this._C044 = value;
                    this.SendPropertyChanged("C044");
                    this.OnC044Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C045 in the schema.
        /// </summary>
        [Column(Storage = "_C045", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C045
        {
            get
            {
                return this._C045;
            }
            set
            {
                if (this._C045 != value)
                {
                    this.OnC045Changing(value);
                    this.SendPropertyChanging();
                    this._C045 = value;
                    this.SendPropertyChanged("C045");
                    this.OnC045Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C046 in the schema.
        /// </summary>
        [Column(Storage = "_C046", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C046
        {
            get
            {
                return this._C046;
            }
            set
            {
                if (this._C046 != value)
                {
                    this.OnC046Changing(value);
                    this.SendPropertyChanging();
                    this._C046 = value;
                    this.SendPropertyChanged("C046");
                    this.OnC046Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C047 in the schema.
        /// </summary>
        [Column(Storage = "_C047", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C047
        {
            get
            {
                return this._C047;
            }
            set
            {
                if (this._C047 != value)
                {
                    this.OnC047Changing(value);
                    this.SendPropertyChanging();
                    this._C047 = value;
                    this.SendPropertyChanged("C047");
                    this.OnC047Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C048 in the schema.
        /// </summary>
        [Column(Storage = "_C048", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C048
        {
            get
            {
                return this._C048;
            }
            set
            {
                if (this._C048 != value)
                {
                    this.OnC048Changing(value);
                    this.SendPropertyChanging();
                    this._C048 = value;
                    this.SendPropertyChanged("C048");
                    this.OnC048Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C049 in the schema.
        /// </summary>
        [Column(Storage = "_C049", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C049
        {
            get
            {
                return this._C049;
            }
            set
            {
                if (this._C049 != value)
                {
                    this.OnC049Changing(value);
                    this.SendPropertyChanging();
                    this._C049 = value;
                    this.SendPropertyChanged("C049");
                    this.OnC049Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for C050 in the schema.
        /// </summary>
        [Column(Storage = "_C050", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string C050
        {
            get
            {
                return this._C050;
            }
            set
            {
                if (this._C050 != value)
                {
                    this.OnC050Changing(value);
                    this.SendPropertyChanging();
                    this._C050 = value;
                    this.SendPropertyChanged("C050");
                    this.OnC050Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N001 in the schema.
        /// </summary>
        [Column(Storage = "_N001", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N001
        {
            get
            {
                return this._N001;
            }
            set
            {
                if (this._N001 != value)
                {
                    this.OnN001Changing(value);
                    this.SendPropertyChanging();
                    this._N001 = value;
                    this.SendPropertyChanged("N001");
                    this.OnN001Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N002 in the schema.
        /// </summary>
        [Column(Storage = "_N002", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N002
        {
            get
            {
                return this._N002;
            }
            set
            {
                if (this._N002 != value)
                {
                    this.OnN002Changing(value);
                    this.SendPropertyChanging();
                    this._N002 = value;
                    this.SendPropertyChanged("N002");
                    this.OnN002Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N003 in the schema.
        /// </summary>
        [Column(Storage = "_N003", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N003
        {
            get
            {
                return this._N003;
            }
            set
            {
                if (this._N003 != value)
                {
                    this.OnN003Changing(value);
                    this.SendPropertyChanging();
                    this._N003 = value;
                    this.SendPropertyChanged("N003");
                    this.OnN003Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N004 in the schema.
        /// </summary>
        [Column(Storage = "_N004", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N004
        {
            get
            {
                return this._N004;
            }
            set
            {
                if (this._N004 != value)
                {
                    this.OnN004Changing(value);
                    this.SendPropertyChanging();
                    this._N004 = value;
                    this.SendPropertyChanged("N004");
                    this.OnN004Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N005 in the schema.
        /// </summary>
        [Column(Storage = "_N005", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N005
        {
            get
            {
                return this._N005;
            }
            set
            {
                if (this._N005 != value)
                {
                    this.OnN005Changing(value);
                    this.SendPropertyChanging();
                    this._N005 = value;
                    this.SendPropertyChanged("N005");
                    this.OnN005Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N006 in the schema.
        /// </summary>
        [Column(Storage = "_N006", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N006
        {
            get
            {
                return this._N006;
            }
            set
            {
                if (this._N006 != value)
                {
                    this.OnN006Changing(value);
                    this.SendPropertyChanging();
                    this._N006 = value;
                    this.SendPropertyChanged("N006");
                    this.OnN006Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N007 in the schema.
        /// </summary>
        [Column(Storage = "_N007", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N007
        {
            get
            {
                return this._N007;
            }
            set
            {
                if (this._N007 != value)
                {
                    this.OnN007Changing(value);
                    this.SendPropertyChanging();
                    this._N007 = value;
                    this.SendPropertyChanged("N007");
                    this.OnN007Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N008 in the schema.
        /// </summary>
        [Column(Storage = "_N008", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N008
        {
            get
            {
                return this._N008;
            }
            set
            {
                if (this._N008 != value)
                {
                    this.OnN008Changing(value);
                    this.SendPropertyChanging();
                    this._N008 = value;
                    this.SendPropertyChanged("N008");
                    this.OnN008Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N009 in the schema.
        /// </summary>
        [Column(Storage = "_N009", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N009
        {
            get
            {
                return this._N009;
            }
            set
            {
                if (this._N009 != value)
                {
                    this.OnN009Changing(value);
                    this.SendPropertyChanging();
                    this._N009 = value;
                    this.SendPropertyChanged("N009");
                    this.OnN009Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N010 in the schema.
        /// </summary>
        [Column(Storage = "_N010", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N010
        {
            get
            {
                return this._N010;
            }
            set
            {
                if (this._N010 != value)
                {
                    this.OnN010Changing(value);
                    this.SendPropertyChanging();
                    this._N010 = value;
                    this.SendPropertyChanged("N010");
                    this.OnN010Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N011 in the schema.
        /// </summary>
        [Column(Storage = "_N011", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N011
        {
            get
            {
                return this._N011;
            }
            set
            {
                if (this._N011 != value)
                {
                    this.OnN011Changing(value);
                    this.SendPropertyChanging();
                    this._N011 = value;
                    this.SendPropertyChanged("N011");
                    this.OnN011Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N012 in the schema.
        /// </summary>
        [Column(Storage = "_N012", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N012
        {
            get
            {
                return this._N012;
            }
            set
            {
                if (this._N012 != value)
                {
                    this.OnN012Changing(value);
                    this.SendPropertyChanging();
                    this._N012 = value;
                    this.SendPropertyChanged("N012");
                    this.OnN012Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N013 in the schema.
        /// </summary>
        [Column(Storage = "_N013", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N013
        {
            get
            {
                return this._N013;
            }
            set
            {
                if (this._N013 != value)
                {
                    this.OnN013Changing(value);
                    this.SendPropertyChanging();
                    this._N013 = value;
                    this.SendPropertyChanged("N013");
                    this.OnN013Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N014 in the schema.
        /// </summary>
        [Column(Storage = "_N014", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N014
        {
            get
            {
                return this._N014;
            }
            set
            {
                if (this._N014 != value)
                {
                    this.OnN014Changing(value);
                    this.SendPropertyChanging();
                    this._N014 = value;
                    this.SendPropertyChanged("N014");
                    this.OnN014Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N015 in the schema.
        /// </summary>
        [Column(Storage = "_N015", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N015
        {
            get
            {
                return this._N015;
            }
            set
            {
                if (this._N015 != value)
                {
                    this.OnN015Changing(value);
                    this.SendPropertyChanging();
                    this._N015 = value;
                    this.SendPropertyChanged("N015");
                    this.OnN015Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N016 in the schema.
        /// </summary>
        [Column(Storage = "_N016", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N016
        {
            get
            {
                return this._N016;
            }
            set
            {
                if (this._N016 != value)
                {
                    this.OnN016Changing(value);
                    this.SendPropertyChanging();
                    this._N016 = value;
                    this.SendPropertyChanged("N016");
                    this.OnN016Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N017 in the schema.
        /// </summary>
        [Column(Storage = "_N017", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N017
        {
            get
            {
                return this._N017;
            }
            set
            {
                if (this._N017 != value)
                {
                    this.OnN017Changing(value);
                    this.SendPropertyChanging();
                    this._N017 = value;
                    this.SendPropertyChanged("N017");
                    this.OnN017Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N018 in the schema.
        /// </summary>
        [Column(Storage = "_N018", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N018
        {
            get
            {
                return this._N018;
            }
            set
            {
                if (this._N018 != value)
                {
                    this.OnN018Changing(value);
                    this.SendPropertyChanging();
                    this._N018 = value;
                    this.SendPropertyChanged("N018");
                    this.OnN018Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N019 in the schema.
        /// </summary>
        [Column(Storage = "_N019", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N019
        {
            get
            {
                return this._N019;
            }
            set
            {
                if (this._N019 != value)
                {
                    this.OnN019Changing(value);
                    this.SendPropertyChanging();
                    this._N019 = value;
                    this.SendPropertyChanged("N019");
                    this.OnN019Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N020 in the schema.
        /// </summary>
        [Column(Storage = "_N020", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N020
        {
            get
            {
                return this._N020;
            }
            set
            {
                if (this._N020 != value)
                {
                    this.OnN020Changing(value);
                    this.SendPropertyChanging();
                    this._N020 = value;
                    this.SendPropertyChanged("N020");
                    this.OnN020Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N021 in the schema.
        /// </summary>
        [Column(Storage = "_N021", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N021
        {
            get
            {
                return this._N021;
            }
            set
            {
                if (this._N021 != value)
                {
                    this.OnN021Changing(value);
                    this.SendPropertyChanging();
                    this._N021 = value;
                    this.SendPropertyChanged("N021");
                    this.OnN021Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N022 in the schema.
        /// </summary>
        [Column(Storage = "_N022", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N022
        {
            get
            {
                return this._N022;
            }
            set
            {
                if (this._N022 != value)
                {
                    this.OnN022Changing(value);
                    this.SendPropertyChanging();
                    this._N022 = value;
                    this.SendPropertyChanged("N022");
                    this.OnN022Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N023 in the schema.
        /// </summary>
        [Column(Storage = "_N023", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N023
        {
            get
            {
                return this._N023;
            }
            set
            {
                if (this._N023 != value)
                {
                    this.OnN023Changing(value);
                    this.SendPropertyChanging();
                    this._N023 = value;
                    this.SendPropertyChanged("N023");
                    this.OnN023Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N024 in the schema.
        /// </summary>
        [Column(Storage = "_N024", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N024
        {
            get
            {
                return this._N024;
            }
            set
            {
                if (this._N024 != value)
                {
                    this.OnN024Changing(value);
                    this.SendPropertyChanging();
                    this._N024 = value;
                    this.SendPropertyChanged("N024");
                    this.OnN024Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N025 in the schema.
        /// </summary>
        [Column(Storage = "_N025", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N025
        {
            get
            {
                return this._N025;
            }
            set
            {
                if (this._N025 != value)
                {
                    this.OnN025Changing(value);
                    this.SendPropertyChanging();
                    this._N025 = value;
                    this.SendPropertyChanged("N025");
                    this.OnN025Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N026 in the schema.
        /// </summary>
        [Column(Storage = "_N026", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N026
        {
            get
            {
                return this._N026;
            }
            set
            {
                if (this._N026 != value)
                {
                    this.OnN026Changing(value);
                    this.SendPropertyChanging();
                    this._N026 = value;
                    this.SendPropertyChanged("N026");
                    this.OnN026Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N027 in the schema.
        /// </summary>
        [Column(Storage = "_N027", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N027
        {
            get
            {
                return this._N027;
            }
            set
            {
                if (this._N027 != value)
                {
                    this.OnN027Changing(value);
                    this.SendPropertyChanging();
                    this._N027 = value;
                    this.SendPropertyChanged("N027");
                    this.OnN027Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N028 in the schema.
        /// </summary>
        [Column(Storage = "_N028", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N028
        {
            get
            {
                return this._N028;
            }
            set
            {
                if (this._N028 != value)
                {
                    this.OnN028Changing(value);
                    this.SendPropertyChanging();
                    this._N028 = value;
                    this.SendPropertyChanged("N028");
                    this.OnN028Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N029 in the schema.
        /// </summary>
        [Column(Storage = "_N029", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N029
        {
            get
            {
                return this._N029;
            }
            set
            {
                if (this._N029 != value)
                {
                    this.OnN029Changing(value);
                    this.SendPropertyChanging();
                    this._N029 = value;
                    this.SendPropertyChanged("N029");
                    this.OnN029Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N030 in the schema.
        /// </summary>
        [Column(Storage = "_N030", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N030
        {
            get
            {
                return this._N030;
            }
            set
            {
                if (this._N030 != value)
                {
                    this.OnN030Changing(value);
                    this.SendPropertyChanging();
                    this._N030 = value;
                    this.SendPropertyChanged("N030");
                    this.OnN030Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N031 in the schema.
        /// </summary>
        [Column(Storage = "_N031", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N031
        {
            get
            {
                return this._N031;
            }
            set
            {
                if (this._N031 != value)
                {
                    this.OnN031Changing(value);
                    this.SendPropertyChanging();
                    this._N031 = value;
                    this.SendPropertyChanged("N031");
                    this.OnN031Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N032 in the schema.
        /// </summary>
        [Column(Storage = "_N032", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N032
        {
            get
            {
                return this._N032;
            }
            set
            {
                if (this._N032 != value)
                {
                    this.OnN032Changing(value);
                    this.SendPropertyChanging();
                    this._N032 = value;
                    this.SendPropertyChanged("N032");
                    this.OnN032Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N033 in the schema.
        /// </summary>
        [Column(Storage = "_N033", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N033
        {
            get
            {
                return this._N033;
            }
            set
            {
                if (this._N033 != value)
                {
                    this.OnN033Changing(value);
                    this.SendPropertyChanging();
                    this._N033 = value;
                    this.SendPropertyChanged("N033");
                    this.OnN033Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N034 in the schema.
        /// </summary>
        [Column(Storage = "_N034", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N034
        {
            get
            {
                return this._N034;
            }
            set
            {
                if (this._N034 != value)
                {
                    this.OnN034Changing(value);
                    this.SendPropertyChanging();
                    this._N034 = value;
                    this.SendPropertyChanged("N034");
                    this.OnN034Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N035 in the schema.
        /// </summary>
        [Column(Storage = "_N035", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N035
        {
            get
            {
                return this._N035;
            }
            set
            {
                if (this._N035 != value)
                {
                    this.OnN035Changing(value);
                    this.SendPropertyChanging();
                    this._N035 = value;
                    this.SendPropertyChanged("N035");
                    this.OnN035Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N036 in the schema.
        /// </summary>
        [Column(Storage = "_N036", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N036
        {
            get
            {
                return this._N036;
            }
            set
            {
                if (this._N036 != value)
                {
                    this.OnN036Changing(value);
                    this.SendPropertyChanging();
                    this._N036 = value;
                    this.SendPropertyChanged("N036");
                    this.OnN036Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N037 in the schema.
        /// </summary>
        [Column(Storage = "_N037", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N037
        {
            get
            {
                return this._N037;
            }
            set
            {
                if (this._N037 != value)
                {
                    this.OnN037Changing(value);
                    this.SendPropertyChanging();
                    this._N037 = value;
                    this.SendPropertyChanged("N037");
                    this.OnN037Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N038 in the schema.
        /// </summary>
        [Column(Storage = "_N038", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N038
        {
            get
            {
                return this._N038;
            }
            set
            {
                if (this._N038 != value)
                {
                    this.OnN038Changing(value);
                    this.SendPropertyChanging();
                    this._N038 = value;
                    this.SendPropertyChanged("N038");
                    this.OnN038Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N039 in the schema.
        /// </summary>
        [Column(Storage = "_N039", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N039
        {
            get
            {
                return this._N039;
            }
            set
            {
                if (this._N039 != value)
                {
                    this.OnN039Changing(value);
                    this.SendPropertyChanging();
                    this._N039 = value;
                    this.SendPropertyChanged("N039");
                    this.OnN039Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N040 in the schema.
        /// </summary>
        [Column(Storage = "_N040", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N040
        {
            get
            {
                return this._N040;
            }
            set
            {
                if (this._N040 != value)
                {
                    this.OnN040Changing(value);
                    this.SendPropertyChanging();
                    this._N040 = value;
                    this.SendPropertyChanged("N040");
                    this.OnN040Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N041 in the schema.
        /// </summary>
        [Column(Storage = "_N041", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N041
        {
            get
            {
                return this._N041;
            }
            set
            {
                if (this._N041 != value)
                {
                    this.OnN041Changing(value);
                    this.SendPropertyChanging();
                    this._N041 = value;
                    this.SendPropertyChanged("N041");
                    this.OnN041Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N042 in the schema.
        /// </summary>
        [Column(Storage = "_N042", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N042
        {
            get
            {
                return this._N042;
            }
            set
            {
                if (this._N042 != value)
                {
                    this.OnN042Changing(value);
                    this.SendPropertyChanging();
                    this._N042 = value;
                    this.SendPropertyChanged("N042");
                    this.OnN042Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N043 in the schema.
        /// </summary>
        [Column(Storage = "_N043", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N043
        {
            get
            {
                return this._N043;
            }
            set
            {
                if (this._N043 != value)
                {
                    this.OnN043Changing(value);
                    this.SendPropertyChanging();
                    this._N043 = value;
                    this.SendPropertyChanged("N043");
                    this.OnN043Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N044 in the schema.
        /// </summary>
        [Column(Storage = "_N044", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N044
        {
            get
            {
                return this._N044;
            }
            set
            {
                if (this._N044 != value)
                {
                    this.OnN044Changing(value);
                    this.SendPropertyChanging();
                    this._N044 = value;
                    this.SendPropertyChanged("N044");
                    this.OnN044Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N045 in the schema.
        /// </summary>
        [Column(Storage = "_N045", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N045
        {
            get
            {
                return this._N045;
            }
            set
            {
                if (this._N045 != value)
                {
                    this.OnN045Changing(value);
                    this.SendPropertyChanging();
                    this._N045 = value;
                    this.SendPropertyChanged("N045");
                    this.OnN045Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N046 in the schema.
        /// </summary>
        [Column(Storage = "_N046", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N046
        {
            get
            {
                return this._N046;
            }
            set
            {
                if (this._N046 != value)
                {
                    this.OnN046Changing(value);
                    this.SendPropertyChanging();
                    this._N046 = value;
                    this.SendPropertyChanged("N046");
                    this.OnN046Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N047 in the schema.
        /// </summary>
        [Column(Storage = "_N047", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N047
        {
            get
            {
                return this._N047;
            }
            set
            {
                if (this._N047 != value)
                {
                    this.OnN047Changing(value);
                    this.SendPropertyChanging();
                    this._N047 = value;
                    this.SendPropertyChanged("N047");
                    this.OnN047Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N048 in the schema.
        /// </summary>
        [Column(Storage = "_N048", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N048
        {
            get
            {
                return this._N048;
            }
            set
            {
                if (this._N048 != value)
                {
                    this.OnN048Changing(value);
                    this.SendPropertyChanging();
                    this._N048 = value;
                    this.SendPropertyChanged("N048");
                    this.OnN048Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N049 in the schema.
        /// </summary>
        [Column(Storage = "_N049", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N049
        {
            get
            {
                return this._N049;
            }
            set
            {
                if (this._N049 != value)
                {
                    this.OnN049Changing(value);
                    this.SendPropertyChanging();
                    this._N049 = value;
                    this.SendPropertyChanged("N049");
                    this.OnN049Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for N050 in the schema.
        /// </summary>
        [Column(Storage = "_N050", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> N050
        {
            get
            {
                return this._N050;
            }
            set
            {
                if (this._N050 != value)
                {
                    this.OnN050Changing(value);
                    this.SendPropertyChanging();
                    this._N050 = value;
                    this.SendPropertyChanged("N050");
                    this.OnN050Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D001 in the schema.
        /// </summary>
        [Column(Storage = "_D001", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D001
        {
            get
            {
                return this._D001;
            }
            set
            {
                if (this._D001 != value)
                {
                    this.OnD001Changing(value);
                    this.SendPropertyChanging();
                    this._D001 = value;
                    this.SendPropertyChanged("D001");
                    this.OnD001Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D002 in the schema.
        /// </summary>
        [Column(Storage = "_D002", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D002
        {
            get
            {
                return this._D002;
            }
            set
            {
                if (this._D002 != value)
                {
                    this.OnD002Changing(value);
                    this.SendPropertyChanging();
                    this._D002 = value;
                    this.SendPropertyChanged("D002");
                    this.OnD002Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D003 in the schema.
        /// </summary>
        [Column(Storage = "_D003", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D003
        {
            get
            {
                return this._D003;
            }
            set
            {
                if (this._D003 != value)
                {
                    this.OnD003Changing(value);
                    this.SendPropertyChanging();
                    this._D003 = value;
                    this.SendPropertyChanged("D003");
                    this.OnD003Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D004 in the schema.
        /// </summary>
        [Column(Storage = "_D004", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D004
        {
            get
            {
                return this._D004;
            }
            set
            {
                if (this._D004 != value)
                {
                    this.OnD004Changing(value);
                    this.SendPropertyChanging();
                    this._D004 = value;
                    this.SendPropertyChanged("D004");
                    this.OnD004Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D005 in the schema.
        /// </summary>
        [Column(Storage = "_D005", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D005
        {
            get
            {
                return this._D005;
            }
            set
            {
                if (this._D005 != value)
                {
                    this.OnD005Changing(value);
                    this.SendPropertyChanging();
                    this._D005 = value;
                    this.SendPropertyChanged("D005");
                    this.OnD005Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D006 in the schema.
        /// </summary>
        [Column(Storage = "_D006", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D006
        {
            get
            {
                return this._D006;
            }
            set
            {
                if (this._D006 != value)
                {
                    this.OnD006Changing(value);
                    this.SendPropertyChanging();
                    this._D006 = value;
                    this.SendPropertyChanged("D006");
                    this.OnD006Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D007 in the schema.
        /// </summary>
        [Column(Storage = "_D007", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D007
        {
            get
            {
                return this._D007;
            }
            set
            {
                if (this._D007 != value)
                {
                    this.OnD007Changing(value);
                    this.SendPropertyChanging();
                    this._D007 = value;
                    this.SendPropertyChanged("D007");
                    this.OnD007Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D008 in the schema.
        /// </summary>
        [Column(Storage = "_D008", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D008
        {
            get
            {
                return this._D008;
            }
            set
            {
                if (this._D008 != value)
                {
                    this.OnD008Changing(value);
                    this.SendPropertyChanging();
                    this._D008 = value;
                    this.SendPropertyChanged("D008");
                    this.OnD008Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D009 in the schema.
        /// </summary>
        [Column(Storage = "_D009", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D009
        {
            get
            {
                return this._D009;
            }
            set
            {
                if (this._D009 != value)
                {
                    this.OnD009Changing(value);
                    this.SendPropertyChanging();
                    this._D009 = value;
                    this.SendPropertyChanged("D009");
                    this.OnD009Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D010 in the schema.
        /// </summary>
        [Column(Storage = "_D010", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D010
        {
            get
            {
                return this._D010;
            }
            set
            {
                if (this._D010 != value)
                {
                    this.OnD010Changing(value);
                    this.SendPropertyChanging();
                    this._D010 = value;
                    this.SendPropertyChanged("D010");
                    this.OnD010Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D011 in the schema.
        /// </summary>
        [Column(Storage = "_D011", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D011
        {
            get
            {
                return this._D011;
            }
            set
            {
                if (this._D011 != value)
                {
                    this.OnD011Changing(value);
                    this.SendPropertyChanging();
                    this._D011 = value;
                    this.SendPropertyChanged("D011");
                    this.OnD011Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D012 in the schema.
        /// </summary>
        [Column(Storage = "_D012", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D012
        {
            get
            {
                return this._D012;
            }
            set
            {
                if (this._D012 != value)
                {
                    this.OnD012Changing(value);
                    this.SendPropertyChanging();
                    this._D012 = value;
                    this.SendPropertyChanged("D012");
                    this.OnD012Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D013 in the schema.
        /// </summary>
        [Column(Storage = "_D013", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D013
        {
            get
            {
                return this._D013;
            }
            set
            {
                if (this._D013 != value)
                {
                    this.OnD013Changing(value);
                    this.SendPropertyChanging();
                    this._D013 = value;
                    this.SendPropertyChanged("D013");
                    this.OnD013Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D014 in the schema.
        /// </summary>
        [Column(Storage = "_D014", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D014
        {
            get
            {
                return this._D014;
            }
            set
            {
                if (this._D014 != value)
                {
                    this.OnD014Changing(value);
                    this.SendPropertyChanging();
                    this._D014 = value;
                    this.SendPropertyChanged("D014");
                    this.OnD014Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D015 in the schema.
        /// </summary>
        [Column(Storage = "_D015", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D015
        {
            get
            {
                return this._D015;
            }
            set
            {
                if (this._D015 != value)
                {
                    this.OnD015Changing(value);
                    this.SendPropertyChanging();
                    this._D015 = value;
                    this.SendPropertyChanged("D015");
                    this.OnD015Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D016 in the schema.
        /// </summary>
        [Column(Storage = "_D016", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D016
        {
            get
            {
                return this._D016;
            }
            set
            {
                if (this._D016 != value)
                {
                    this.OnD016Changing(value);
                    this.SendPropertyChanging();
                    this._D016 = value;
                    this.SendPropertyChanged("D016");
                    this.OnD016Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D017 in the schema.
        /// </summary>
        [Column(Storage = "_D017", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D017
        {
            get
            {
                return this._D017;
            }
            set
            {
                if (this._D017 != value)
                {
                    this.OnD017Changing(value);
                    this.SendPropertyChanging();
                    this._D017 = value;
                    this.SendPropertyChanged("D017");
                    this.OnD017Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D018 in the schema.
        /// </summary>
        [Column(Storage = "_D018", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D018
        {
            get
            {
                return this._D018;
            }
            set
            {
                if (this._D018 != value)
                {
                    this.OnD018Changing(value);
                    this.SendPropertyChanging();
                    this._D018 = value;
                    this.SendPropertyChanged("D018");
                    this.OnD018Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D019 in the schema.
        /// </summary>
        [Column(Storage = "_D019", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D019
        {
            get
            {
                return this._D019;
            }
            set
            {
                if (this._D019 != value)
                {
                    this.OnD019Changing(value);
                    this.SendPropertyChanging();
                    this._D019 = value;
                    this.SendPropertyChanged("D019");
                    this.OnD019Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D020 in the schema.
        /// </summary>
        [Column(Storage = "_D020", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D020
        {
            get
            {
                return this._D020;
            }
            set
            {
                if (this._D020 != value)
                {
                    this.OnD020Changing(value);
                    this.SendPropertyChanging();
                    this._D020 = value;
                    this.SendPropertyChanged("D020");
                    this.OnD020Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D021 in the schema.
        /// </summary>
        [Column(Storage = "_D021", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D021
        {
            get
            {
                return this._D021;
            }
            set
            {
                if (this._D021 != value)
                {
                    this.OnD021Changing(value);
                    this.SendPropertyChanging();
                    this._D021 = value;
                    this.SendPropertyChanged("D021");
                    this.OnD021Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D022 in the schema.
        /// </summary>
        [Column(Storage = "_D022", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D022
        {
            get
            {
                return this._D022;
            }
            set
            {
                if (this._D022 != value)
                {
                    this.OnD022Changing(value);
                    this.SendPropertyChanging();
                    this._D022 = value;
                    this.SendPropertyChanged("D022");
                    this.OnD022Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D023 in the schema.
        /// </summary>
        [Column(Storage = "_D023", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D023
        {
            get
            {
                return this._D023;
            }
            set
            {
                if (this._D023 != value)
                {
                    this.OnD023Changing(value);
                    this.SendPropertyChanging();
                    this._D023 = value;
                    this.SendPropertyChanged("D023");
                    this.OnD023Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D024 in the schema.
        /// </summary>
        [Column(Storage = "_D024", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D024
        {
            get
            {
                return this._D024;
            }
            set
            {
                if (this._D024 != value)
                {
                    this.OnD024Changing(value);
                    this.SendPropertyChanging();
                    this._D024 = value;
                    this.SendPropertyChanged("D024");
                    this.OnD024Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D025 in the schema.
        /// </summary>
        [Column(Storage = "_D025", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D025
        {
            get
            {
                return this._D025;
            }
            set
            {
                if (this._D025 != value)
                {
                    this.OnD025Changing(value);
                    this.SendPropertyChanging();
                    this._D025 = value;
                    this.SendPropertyChanged("D025");
                    this.OnD025Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D026 in the schema.
        /// </summary>
        [Column(Storage = "_D026", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D026
        {
            get
            {
                return this._D026;
            }
            set
            {
                if (this._D026 != value)
                {
                    this.OnD026Changing(value);
                    this.SendPropertyChanging();
                    this._D026 = value;
                    this.SendPropertyChanged("D026");
                    this.OnD026Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D027 in the schema.
        /// </summary>
        [Column(Storage = "_D027", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D027
        {
            get
            {
                return this._D027;
            }
            set
            {
                if (this._D027 != value)
                {
                    this.OnD027Changing(value);
                    this.SendPropertyChanging();
                    this._D027 = value;
                    this.SendPropertyChanged("D027");
                    this.OnD027Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D028 in the schema.
        /// </summary>
        [Column(Storage = "_D028", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D028
        {
            get
            {
                return this._D028;
            }
            set
            {
                if (this._D028 != value)
                {
                    this.OnD028Changing(value);
                    this.SendPropertyChanging();
                    this._D028 = value;
                    this.SendPropertyChanged("D028");
                    this.OnD028Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D029 in the schema.
        /// </summary>
        [Column(Storage = "_D029", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D029
        {
            get
            {
                return this._D029;
            }
            set
            {
                if (this._D029 != value)
                {
                    this.OnD029Changing(value);
                    this.SendPropertyChanging();
                    this._D029 = value;
                    this.SendPropertyChanged("D029");
                    this.OnD029Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D030 in the schema.
        /// </summary>
        [Column(Storage = "_D030", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D030
        {
            get
            {
                return this._D030;
            }
            set
            {
                if (this._D030 != value)
                {
                    this.OnD030Changing(value);
                    this.SendPropertyChanging();
                    this._D030 = value;
                    this.SendPropertyChanged("D030");
                    this.OnD030Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D031 in the schema.
        /// </summary>
        [Column(Storage = "_D031", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D031
        {
            get
            {
                return this._D031;
            }
            set
            {
                if (this._D031 != value)
                {
                    this.OnD031Changing(value);
                    this.SendPropertyChanging();
                    this._D031 = value;
                    this.SendPropertyChanged("D031");
                    this.OnD031Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D032 in the schema.
        /// </summary>
        [Column(Storage = "_D032", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D032
        {
            get
            {
                return this._D032;
            }
            set
            {
                if (this._D032 != value)
                {
                    this.OnD032Changing(value);
                    this.SendPropertyChanging();
                    this._D032 = value;
                    this.SendPropertyChanged("D032");
                    this.OnD032Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D033 in the schema.
        /// </summary>
        [Column(Storage = "_D033", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D033
        {
            get
            {
                return this._D033;
            }
            set
            {
                if (this._D033 != value)
                {
                    this.OnD033Changing(value);
                    this.SendPropertyChanging();
                    this._D033 = value;
                    this.SendPropertyChanged("D033");
                    this.OnD033Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D034 in the schema.
        /// </summary>
        [Column(Storage = "_D034", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D034
        {
            get
            {
                return this._D034;
            }
            set
            {
                if (this._D034 != value)
                {
                    this.OnD034Changing(value);
                    this.SendPropertyChanging();
                    this._D034 = value;
                    this.SendPropertyChanged("D034");
                    this.OnD034Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D035 in the schema.
        /// </summary>
        [Column(Storage = "_D035", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D035
        {
            get
            {
                return this._D035;
            }
            set
            {
                if (this._D035 != value)
                {
                    this.OnD035Changing(value);
                    this.SendPropertyChanging();
                    this._D035 = value;
                    this.SendPropertyChanged("D035");
                    this.OnD035Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D036 in the schema.
        /// </summary>
        [Column(Storage = "_D036", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D036
        {
            get
            {
                return this._D036;
            }
            set
            {
                if (this._D036 != value)
                {
                    this.OnD036Changing(value);
                    this.SendPropertyChanging();
                    this._D036 = value;
                    this.SendPropertyChanged("D036");
                    this.OnD036Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D037 in the schema.
        /// </summary>
        [Column(Storage = "_D037", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D037
        {
            get
            {
                return this._D037;
            }
            set
            {
                if (this._D037 != value)
                {
                    this.OnD037Changing(value);
                    this.SendPropertyChanging();
                    this._D037 = value;
                    this.SendPropertyChanged("D037");
                    this.OnD037Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D038 in the schema.
        /// </summary>
        [Column(Storage = "_D038", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D038
        {
            get
            {
                return this._D038;
            }
            set
            {
                if (this._D038 != value)
                {
                    this.OnD038Changing(value);
                    this.SendPropertyChanging();
                    this._D038 = value;
                    this.SendPropertyChanged("D038");
                    this.OnD038Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D039 in the schema.
        /// </summary>
        [Column(Storage = "_D039", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D039
        {
            get
            {
                return this._D039;
            }
            set
            {
                if (this._D039 != value)
                {
                    this.OnD039Changing(value);
                    this.SendPropertyChanging();
                    this._D039 = value;
                    this.SendPropertyChanged("D039");
                    this.OnD039Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D040 in the schema.
        /// </summary>
        [Column(Storage = "_D040", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D040
        {
            get
            {
                return this._D040;
            }
            set
            {
                if (this._D040 != value)
                {
                    this.OnD040Changing(value);
                    this.SendPropertyChanging();
                    this._D040 = value;
                    this.SendPropertyChanged("D040");
                    this.OnD040Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D041 in the schema.
        /// </summary>
        [Column(Storage = "_D041", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D041
        {
            get
            {
                return this._D041;
            }
            set
            {
                if (this._D041 != value)
                {
                    this.OnD041Changing(value);
                    this.SendPropertyChanging();
                    this._D041 = value;
                    this.SendPropertyChanged("D041");
                    this.OnD041Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D042 in the schema.
        /// </summary>
        [Column(Storage = "_D042", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D042
        {
            get
            {
                return this._D042;
            }
            set
            {
                if (this._D042 != value)
                {
                    this.OnD042Changing(value);
                    this.SendPropertyChanging();
                    this._D042 = value;
                    this.SendPropertyChanged("D042");
                    this.OnD042Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D043 in the schema.
        /// </summary>
        [Column(Storage = "_D043", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D043
        {
            get
            {
                return this._D043;
            }
            set
            {
                if (this._D043 != value)
                {
                    this.OnD043Changing(value);
                    this.SendPropertyChanging();
                    this._D043 = value;
                    this.SendPropertyChanged("D043");
                    this.OnD043Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D044 in the schema.
        /// </summary>
        [Column(Storage = "_D044", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D044
        {
            get
            {
                return this._D044;
            }
            set
            {
                if (this._D044 != value)
                {
                    this.OnD044Changing(value);
                    this.SendPropertyChanging();
                    this._D044 = value;
                    this.SendPropertyChanged("D044");
                    this.OnD044Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D045 in the schema.
        /// </summary>
        [Column(Storage = "_D045", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D045
        {
            get
            {
                return this._D045;
            }
            set
            {
                if (this._D045 != value)
                {
                    this.OnD045Changing(value);
                    this.SendPropertyChanging();
                    this._D045 = value;
                    this.SendPropertyChanged("D045");
                    this.OnD045Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D046 in the schema.
        /// </summary>
        [Column(Storage = "_D046", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D046
        {
            get
            {
                return this._D046;
            }
            set
            {
                if (this._D046 != value)
                {
                    this.OnD046Changing(value);
                    this.SendPropertyChanging();
                    this._D046 = value;
                    this.SendPropertyChanged("D046");
                    this.OnD046Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D047 in the schema.
        /// </summary>
        [Column(Storage = "_D047", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D047
        {
            get
            {
                return this._D047;
            }
            set
            {
                if (this._D047 != value)
                {
                    this.OnD047Changing(value);
                    this.SendPropertyChanging();
                    this._D047 = value;
                    this.SendPropertyChanged("D047");
                    this.OnD047Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D048 in the schema.
        /// </summary>
        [Column(Storage = "_D048", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D048
        {
            get
            {
                return this._D048;
            }
            set
            {
                if (this._D048 != value)
                {
                    this.OnD048Changing(value);
                    this.SendPropertyChanging();
                    this._D048 = value;
                    this.SendPropertyChanged("D048");
                    this.OnD048Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D049 in the schema.
        /// </summary>
        [Column(Storage = "_D049", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D049
        {
            get
            {
                return this._D049;
            }
            set
            {
                if (this._D049 != value)
                {
                    this.OnD049Changing(value);
                    this.SendPropertyChanging();
                    this._D049 = value;
                    this.SendPropertyChanged("D049");
                    this.OnD049Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for D050 in the schema.
        /// </summary>
        [Column(Storage = "_D050", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> D050
        {
            get
            {
                return this._D050;
            }
            set
            {
                if (this._D050 != value)
                {
                    this.OnD050Changing(value);
                    this.SendPropertyChanging();
                    this._D050 = value;
                    this.SendPropertyChanged("D050");
                    this.OnD050Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLOB001 in the schema.
        /// </summary>
        [Column(Storage = "_CLOB001", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLOB001
        {
            get
            {
                return this._CLOB001;
            }
            set
            {
                if (this._CLOB001 != value)
                {
                    this.OnCLOB001Changing(value);
                    this.SendPropertyChanging();
                    this._CLOB001 = value;
                    this.SendPropertyChanged("CLOB001");
                    this.OnCLOB001Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SEARCHCLOB in the schema.
        /// </summary>
        [Column(Name = @"SEARCH_CLOB", Storage = "_SEARCHCLOB", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string SEARCHCLOB
        {
            get
            {
                return this._SEARCHCLOB;
            }
            set
            {
                if (this._SEARCHCLOB != value)
                {
                    this.OnSEARCHCLOBChanging(value);
                    this.SendPropertyChanging();
                    this._SEARCHCLOB = value;
                    this.SendPropertyChanged("SEARCHCLOB");
                    this.OnSEARCHCLOBChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APEXWSTAGs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="APEXWSROW_APEXWSTAG", Storage="_APEXWSTAGs", ThisKey="ID", OtherKey="ROWID", DeleteRule="CASCADE")]
        public EntitySet<APEXWSTAG> APEXWSTAGs
        {
            get
            {
                return this._APEXWSTAGs;
            }
            set
            {
                this._APEXWSTAGs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for APEXWSFILEs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="APEXWSROW_APEXWSFILE", Storage="_APEXWSFILEs", ThisKey="ID", OtherKey="ROWID", DeleteRule="CASCADE")]
        public EntitySet<APEXWSFILE> APEXWSFILEs
        {
            get
            {
                return this._APEXWSFILEs;
            }
            set
            {
                this._APEXWSFILEs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for APEXWSNOTEs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="APEXWSROW_APEXWSNOTE", Storage="_APEXWSNOTEs", ThisKey="ID", OtherKey="ROWID", DeleteRule="CASCADE")]
        public EntitySet<APEXWSNOTE> APEXWSNOTEs
        {
            get
            {
                return this._APEXWSNOTEs;
            }
            set
            {
                this._APEXWSNOTEs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for APEXWSLINKs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="APEXWSROW_APEXWSLINK", Storage="_APEXWSLINKs", ThisKey="ID", OtherKey="ROWID", DeleteRule="CASCADE")]
        public EntitySet<APEXWSLINK> APEXWSLINKs
        {
            get
            {
                return this._APEXWSLINKs;
            }
            set
            {
                this._APEXWSLINKs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_APEXWSTAGs(APEXWSTAG entity)
        {
            this.SendPropertyChanging("APEXWSTAGs");
            entity.APEXWSROW = this;
        }
    
        private void detach_APEXWSTAGs(APEXWSTAG entity)
        {
            this.SendPropertyChanging("APEXWSTAGs");
            entity.APEXWSROW = null;
        }

        private void attach_APEXWSFILEs(APEXWSFILE entity)
        {
            this.SendPropertyChanging("APEXWSFILEs");
            entity.APEXWSROW = this;
        }
    
        private void detach_APEXWSFILEs(APEXWSFILE entity)
        {
            this.SendPropertyChanging("APEXWSFILEs");
            entity.APEXWSROW = null;
        }

        private void attach_APEXWSNOTEs(APEXWSNOTE entity)
        {
            this.SendPropertyChanging("APEXWSNOTEs");
            entity.APEXWSROW = this;
        }
    
        private void detach_APEXWSNOTEs(APEXWSNOTE entity)
        {
            this.SendPropertyChanging("APEXWSNOTEs");
            entity.APEXWSROW = null;
        }

        private void attach_APEXWSLINKs(APEXWSLINK entity)
        {
            this.SendPropertyChanging("APEXWSLINKs");
            entity.APEXWSROW = this;
        }
    
        private void detach_APEXWSLINKs(APEXWSLINK entity)
        {
            this.SendPropertyChanging("APEXWSLINKs");
            entity.APEXWSROW = null;
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.APEXWSHISTORY in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.APEX$_WS_HISTORY")]
    public partial class APEXWSHISTORY
    {
        #pragma warning disable 0649

        private decimal _ROWID;

        private decimal _WSAPPID;

        private decimal _DATAGRIDID;

        private string _COLUMNNAME;

        private string _OLDVALUE;

        private string _NEWVALUE;

        private string _APPLICATIONUSERID;

        private System.Nullable<System.DateTime> _CHANGEDATE;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnROWIDChanging(decimal value);
        partial void OnROWIDChanged();
        partial void OnWSAPPIDChanging(decimal value);
        partial void OnWSAPPIDChanged();
        partial void OnDATAGRIDIDChanging(decimal value);
        partial void OnDATAGRIDIDChanged();
        partial void OnCOLUMNNAMEChanging(string value);
        partial void OnCOLUMNNAMEChanged();
        partial void OnOLDVALUEChanging(string value);
        partial void OnOLDVALUEChanged();
        partial void OnNEWVALUEChanging(string value);
        partial void OnNEWVALUEChanged();
        partial void OnAPPLICATIONUSERIDChanging(string value);
        partial void OnAPPLICATIONUSERIDChanged();
        partial void OnCHANGEDATEChanging(System.Nullable<System.DateTime> value);
        partial void OnCHANGEDATEChanged();
        #endregion

        public APEXWSHISTORY()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ROWID in the schema.
        /// </summary>
        [Column(Name = @"ROW_ID", Storage = "_ROWID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal ROWID
        {
            get
            {
                return this._ROWID;
            }
            set
            {
                if (this._ROWID != value)
                {
                    this._ROWID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WSAPPID in the schema.
        /// </summary>
        [Column(Name = @"WS_APP_ID", Storage = "_WSAPPID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WSAPPID
        {
            get
            {
                return this._WSAPPID;
            }
            set
            {
                if (this._WSAPPID != value)
                {
                    this._WSAPPID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAGRIDID in the schema.
        /// </summary>
        [Column(Name = @"DATA_GRID_ID", Storage = "_DATAGRIDID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal DATAGRIDID
        {
            get
            {
                return this._DATAGRIDID;
            }
            set
            {
                if (this._DATAGRIDID != value)
                {
                    this._DATAGRIDID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COLUMNNAME in the schema.
        /// </summary>
        [Column(Name = @"COLUMN_NAME", Storage = "_COLUMNNAME", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string COLUMNNAME
        {
            get
            {
                return this._COLUMNNAME;
            }
            set
            {
                if (this._COLUMNNAME != value)
                {
                    this._COLUMNNAME = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OLDVALUE in the schema.
        /// </summary>
        [Column(Name = @"OLD_VALUE", Storage = "_OLDVALUE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string OLDVALUE
        {
            get
            {
                return this._OLDVALUE;
            }
            set
            {
                if (this._OLDVALUE != value)
                {
                    this._OLDVALUE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NEWVALUE in the schema.
        /// </summary>
        [Column(Name = @"NEW_VALUE", Storage = "_NEWVALUE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NEWVALUE
        {
            get
            {
                return this._NEWVALUE;
            }
            set
            {
                if (this._NEWVALUE != value)
                {
                    this._NEWVALUE = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APPLICATIONUSERID in the schema.
        /// </summary>
        [Column(Name = @"APPLICATION_USER_ID", Storage = "_APPLICATIONUSERID", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string APPLICATIONUSERID
        {
            get
            {
                return this._APPLICATIONUSERID;
            }
            set
            {
                if (this._APPLICATIONUSERID != value)
                {
                    this._APPLICATIONUSERID = value;
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHANGEDATE in the schema.
        /// </summary>
        [Column(Name = @"CHANGE_DATE", Storage = "_CHANGEDATE", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> CHANGEDATE
        {
            get
            {
                return this._CHANGEDATE;
            }
            set
            {
                if (this._CHANGEDATE != value)
                {
                    this._CHANGEDATE = value;
                }
            }
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.APEXWSNOTE in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.APEX$_WS_NOTES")]
    public partial class APEXWSNOTE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private decimal _WSAPPID;

        private System.Nullable<decimal> _DATAGRIDID;

        private System.Nullable<decimal> _ROWID;

        private System.Nullable<decimal> _WEBPAGEID;

        private string _COMPONENTLEVEL;

        private string _CONTENT;

        private System.DateTime _CREATEDON;

        private string _CREATEDBY;

        private System.Nullable<System.DateTime> _UPDATEDON;

        private string _UPDATEDBY;
        #pragma warning restore 0649

        private EntityRef<APEXWSROW> _APEXWSROW;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnWSAPPIDChanging(decimal value);
        partial void OnWSAPPIDChanged();
        partial void OnDATAGRIDIDChanging(System.Nullable<decimal> value);
        partial void OnDATAGRIDIDChanged();
        partial void OnROWIDChanging(System.Nullable<decimal> value);
        partial void OnROWIDChanged();
        partial void OnWEBPAGEIDChanging(System.Nullable<decimal> value);
        partial void OnWEBPAGEIDChanged();
        partial void OnCOMPONENTLEVELChanging(string value);
        partial void OnCOMPONENTLEVELChanged();
        partial void OnCONTENTChanging(string value);
        partial void OnCONTENTChanged();
        partial void OnCREATEDONChanging(System.DateTime value);
        partial void OnCREATEDONChanged();
        partial void OnCREATEDBYChanging(string value);
        partial void OnCREATEDBYChanged();
        partial void OnUPDATEDONChanging(System.Nullable<System.DateTime> value);
        partial void OnUPDATEDONChanged();
        partial void OnUPDATEDBYChanging(string value);
        partial void OnUPDATEDBYChanged();
        #endregion

        public APEXWSNOTE()
        {
            this._APEXWSROW  = default(EntityRef<APEXWSROW>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WSAPPID in the schema.
        /// </summary>
        [Column(Name = @"WS_APP_ID", Storage = "_WSAPPID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WSAPPID
        {
            get
            {
                return this._WSAPPID;
            }
            set
            {
                if (this._WSAPPID != value)
                {
                    this.OnWSAPPIDChanging(value);
                    this.SendPropertyChanging();
                    this._WSAPPID = value;
                    this.SendPropertyChanged("WSAPPID");
                    this.OnWSAPPIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAGRIDID in the schema.
        /// </summary>
        [Column(Name = @"DATA_GRID_ID", Storage = "_DATAGRIDID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> DATAGRIDID
        {
            get
            {
                return this._DATAGRIDID;
            }
            set
            {
                if (this._DATAGRIDID != value)
                {
                    this.OnDATAGRIDIDChanging(value);
                    this.SendPropertyChanging();
                    this._DATAGRIDID = value;
                    this.SendPropertyChanged("DATAGRIDID");
                    this.OnDATAGRIDIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ROWID in the schema.
        /// </summary>
        [Column(Name = @"ROW_ID", Storage = "_ROWID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> ROWID
        {
            get
            {
                return this._ROWID;
            }
            set
            {
                if (this._ROWID != value)
                {
                    if (this._APEXWSROW.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnROWIDChanging(value);
                    this.SendPropertyChanging();
                    this._ROWID = value;
                    this.SendPropertyChanged("ROWID");
                    this.OnROWIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WEBPAGEID in the schema.
        /// </summary>
        [Column(Name = @"WEBPAGE_ID", Storage = "_WEBPAGEID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> WEBPAGEID
        {
            get
            {
                return this._WEBPAGEID;
            }
            set
            {
                if (this._WEBPAGEID != value)
                {
                    this.OnWEBPAGEIDChanging(value);
                    this.SendPropertyChanging();
                    this._WEBPAGEID = value;
                    this.SendPropertyChanged("WEBPAGEID");
                    this.OnWEBPAGEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMPONENTLEVEL in the schema.
        /// </summary>
        [Column(Name = @"COMPONENT_LEVEL", Storage = "_COMPONENTLEVEL", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMPONENTLEVEL
        {
            get
            {
                return this._COMPONENTLEVEL;
            }
            set
            {
                if (this._COMPONENTLEVEL != value)
                {
                    this.OnCOMPONENTLEVELChanging(value);
                    this.SendPropertyChanging();
                    this._COMPONENTLEVEL = value;
                    this.SendPropertyChanged("COMPONENTLEVEL");
                    this.OnCOMPONENTLEVELChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CONTENT in the schema.
        /// </summary>
        [Column(Storage = "_CONTENT", DbType = "CLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string CONTENT
        {
            get
            {
                return this._CONTENT;
            }
            set
            {
                if (this._CONTENT != value)
                {
                    this.OnCONTENTChanging(value);
                    this.SendPropertyChanging();
                    this._CONTENT = value;
                    this.SendPropertyChanged("CONTENT");
                    this.OnCONTENTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDON in the schema.
        /// </summary>
        [Column(Name = @"CREATED_ON", Storage = "_CREATEDON", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime CREATEDON
        {
            get
            {
                return this._CREATEDON;
            }
            set
            {
                if (this._CREATEDON != value)
                {
                    this.OnCREATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDON = value;
                    this.SendPropertyChanged("CREATEDON");
                    this.OnCREATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDBY in the schema.
        /// </summary>
        [Column(Name = @"CREATED_BY", Storage = "_CREATEDBY", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CREATEDBY
        {
            get
            {
                return this._CREATEDBY;
            }
            set
            {
                if (this._CREATEDBY != value)
                {
                    this.OnCREATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDBY = value;
                    this.SendPropertyChanged("CREATEDBY");
                    this.OnCREATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDON in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_ON", Storage = "_UPDATEDON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> UPDATEDON
        {
            get
            {
                return this._UPDATEDON;
            }
            set
            {
                if (this._UPDATEDON != value)
                {
                    this.OnUPDATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDON = value;
                    this.SendPropertyChanged("UPDATEDON");
                    this.OnUPDATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDBY in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_BY", Storage = "_UPDATEDBY", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UPDATEDBY
        {
            get
            {
                return this._UPDATEDBY;
            }
            set
            {
                if (this._UPDATEDBY != value)
                {
                    this.OnUPDATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDBY = value;
                    this.SendPropertyChanged("UPDATEDBY");
                    this.OnUPDATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APEXWSROW in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="APEXWSROW_APEXWSNOTE", Storage="_APEXWSROW", ThisKey="ROWID", OtherKey="ID", IsForeignKey=true)]
        public APEXWSROW APEXWSROW
        {
            get
            {
                return this._APEXWSROW.Entity;
            }
            set
            {
                APEXWSROW previousValue = this._APEXWSROW.Entity;
                if ((previousValue != value) || (this._APEXWSROW.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._APEXWSROW.Entity = null;
                        previousValue.APEXWSNOTEs.Remove(this);
                    }
                    this._APEXWSROW.Entity = value;
                    if (value != null)
                    {
                        this._ROWID = value.ID;
                        value.APEXWSNOTEs.Add(this);
                    }
                    else
                    {
                        this._ROWID = default(System.Nullable<decimal>);
                    }
                    this.SendPropertyChanged("APEXWSROW");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PORTAFOLIOContext.APEXWSLINK in the schema.
    /// </summary>
    [Table(Name = @"PORTAFOLIO10.APEX$_WS_LINKS")]
    public partial class APEXWSLINK : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private decimal _WSAPPID;

        private System.Nullable<decimal> _DATAGRIDID;

        private System.Nullable<decimal> _ROWID;

        private System.Nullable<decimal> _WEBPAGEID;

        private string _COMPONENTLEVEL;

        private string _TAGS;

        private string _SHOWONHOMEPAGE;

        private string _LINKNAME;

        private string _URL;

        private string _LINKDESCRIPTION;

        private System.Nullable<decimal> _DISPLAYSEQUENCE;

        private System.DateTime _CREATEDON;

        private string _CREATEDBY;

        private System.Nullable<System.DateTime> _UPDATEDON;

        private string _UPDATEDBY;
        #pragma warning restore 0649

        private EntityRef<APEXWSROW> _APEXWSROW;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnWSAPPIDChanging(decimal value);
        partial void OnWSAPPIDChanged();
        partial void OnDATAGRIDIDChanging(System.Nullable<decimal> value);
        partial void OnDATAGRIDIDChanged();
        partial void OnROWIDChanging(System.Nullable<decimal> value);
        partial void OnROWIDChanged();
        partial void OnWEBPAGEIDChanging(System.Nullable<decimal> value);
        partial void OnWEBPAGEIDChanged();
        partial void OnCOMPONENTLEVELChanging(string value);
        partial void OnCOMPONENTLEVELChanged();
        partial void OnTAGSChanging(string value);
        partial void OnTAGSChanged();
        partial void OnSHOWONHOMEPAGEChanging(string value);
        partial void OnSHOWONHOMEPAGEChanged();
        partial void OnLINKNAMEChanging(string value);
        partial void OnLINKNAMEChanged();
        partial void OnURLChanging(string value);
        partial void OnURLChanged();
        partial void OnLINKDESCRIPTIONChanging(string value);
        partial void OnLINKDESCRIPTIONChanged();
        partial void OnDISPLAYSEQUENCEChanging(System.Nullable<decimal> value);
        partial void OnDISPLAYSEQUENCEChanged();
        partial void OnCREATEDONChanging(System.DateTime value);
        partial void OnCREATEDONChanged();
        partial void OnCREATEDBYChanging(string value);
        partial void OnCREATEDBYChanged();
        partial void OnUPDATEDONChanging(System.Nullable<System.DateTime> value);
        partial void OnUPDATEDONChanged();
        partial void OnUPDATEDBYChanging(string value);
        partial void OnUPDATEDBYChanged();
        #endregion

        public APEXWSLINK()
        {
            this._APEXWSROW  = default(EntityRef<APEXWSROW>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WSAPPID in the schema.
        /// </summary>
        [Column(Name = @"WS_APP_ID", Storage = "_WSAPPID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal WSAPPID
        {
            get
            {
                return this._WSAPPID;
            }
            set
            {
                if (this._WSAPPID != value)
                {
                    this.OnWSAPPIDChanging(value);
                    this.SendPropertyChanging();
                    this._WSAPPID = value;
                    this.SendPropertyChanged("WSAPPID");
                    this.OnWSAPPIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DATAGRIDID in the schema.
        /// </summary>
        [Column(Name = @"DATA_GRID_ID", Storage = "_DATAGRIDID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> DATAGRIDID
        {
            get
            {
                return this._DATAGRIDID;
            }
            set
            {
                if (this._DATAGRIDID != value)
                {
                    this.OnDATAGRIDIDChanging(value);
                    this.SendPropertyChanging();
                    this._DATAGRIDID = value;
                    this.SendPropertyChanged("DATAGRIDID");
                    this.OnDATAGRIDIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ROWID in the schema.
        /// </summary>
        [Column(Name = @"ROW_ID", Storage = "_ROWID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> ROWID
        {
            get
            {
                return this._ROWID;
            }
            set
            {
                if (this._ROWID != value)
                {
                    if (this._APEXWSROW.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnROWIDChanging(value);
                    this.SendPropertyChanging();
                    this._ROWID = value;
                    this.SendPropertyChanged("ROWID");
                    this.OnROWIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for WEBPAGEID in the schema.
        /// </summary>
        [Column(Name = @"WEBPAGE_ID", Storage = "_WEBPAGEID", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> WEBPAGEID
        {
            get
            {
                return this._WEBPAGEID;
            }
            set
            {
                if (this._WEBPAGEID != value)
                {
                    this.OnWEBPAGEIDChanging(value);
                    this.SendPropertyChanging();
                    this._WEBPAGEID = value;
                    this.SendPropertyChanged("WEBPAGEID");
                    this.OnWEBPAGEIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMPONENTLEVEL in the schema.
        /// </summary>
        [Column(Name = @"COMPONENT_LEVEL", Storage = "_COMPONENTLEVEL", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMPONENTLEVEL
        {
            get
            {
                return this._COMPONENTLEVEL;
            }
            set
            {
                if (this._COMPONENTLEVEL != value)
                {
                    this.OnCOMPONENTLEVELChanging(value);
                    this.SendPropertyChanging();
                    this._COMPONENTLEVEL = value;
                    this.SendPropertyChanged("COMPONENTLEVEL");
                    this.OnCOMPONENTLEVELChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TAGS in the schema.
        /// </summary>
        [Column(Storage = "_TAGS", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TAGS
        {
            get
            {
                return this._TAGS;
            }
            set
            {
                if (this._TAGS != value)
                {
                    this.OnTAGSChanging(value);
                    this.SendPropertyChanging();
                    this._TAGS = value;
                    this.SendPropertyChanged("TAGS");
                    this.OnTAGSChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SHOWONHOMEPAGE in the schema.
        /// </summary>
        [Column(Name = @"SHOW_ON_HOMEPAGE", Storage = "_SHOWONHOMEPAGE", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SHOWONHOMEPAGE
        {
            get
            {
                return this._SHOWONHOMEPAGE;
            }
            set
            {
                if (this._SHOWONHOMEPAGE != value)
                {
                    this.OnSHOWONHOMEPAGEChanging(value);
                    this.SendPropertyChanging();
                    this._SHOWONHOMEPAGE = value;
                    this.SendPropertyChanged("SHOWONHOMEPAGE");
                    this.OnSHOWONHOMEPAGEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LINKNAME in the schema.
        /// </summary>
        [Column(Name = @"LINK_NAME", Storage = "_LINKNAME", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string LINKNAME
        {
            get
            {
                return this._LINKNAME;
            }
            set
            {
                if (this._LINKNAME != value)
                {
                    this.OnLINKNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._LINKNAME = value;
                    this.SendPropertyChanged("LINKNAME");
                    this.OnLINKNAMEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for URL in the schema.
        /// </summary>
        [Column(Storage = "_URL", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string URL
        {
            get
            {
                return this._URL;
            }
            set
            {
                if (this._URL != value)
                {
                    this.OnURLChanging(value);
                    this.SendPropertyChanging();
                    this._URL = value;
                    this.SendPropertyChanged("URL");
                    this.OnURLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LINKDESCRIPTION in the schema.
        /// </summary>
        [Column(Name = @"LINK_DESCRIPTION", Storage = "_LINKDESCRIPTION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LINKDESCRIPTION
        {
            get
            {
                return this._LINKDESCRIPTION;
            }
            set
            {
                if (this._LINKDESCRIPTION != value)
                {
                    this.OnLINKDESCRIPTIONChanging(value);
                    this.SendPropertyChanging();
                    this._LINKDESCRIPTION = value;
                    this.SendPropertyChanged("LINKDESCRIPTION");
                    this.OnLINKDESCRIPTIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DISPLAYSEQUENCE in the schema.
        /// </summary>
        [Column(Name = @"DISPLAY_SEQUENCE", Storage = "_DISPLAYSEQUENCE", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> DISPLAYSEQUENCE
        {
            get
            {
                return this._DISPLAYSEQUENCE;
            }
            set
            {
                if (this._DISPLAYSEQUENCE != value)
                {
                    this.OnDISPLAYSEQUENCEChanging(value);
                    this.SendPropertyChanging();
                    this._DISPLAYSEQUENCE = value;
                    this.SendPropertyChanged("DISPLAYSEQUENCE");
                    this.OnDISPLAYSEQUENCEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDON in the schema.
        /// </summary>
        [Column(Name = @"CREATED_ON", Storage = "_CREATEDON", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime CREATEDON
        {
            get
            {
                return this._CREATEDON;
            }
            set
            {
                if (this._CREATEDON != value)
                {
                    this.OnCREATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDON = value;
                    this.SendPropertyChanged("CREATEDON");
                    this.OnCREATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CREATEDBY in the schema.
        /// </summary>
        [Column(Name = @"CREATED_BY", Storage = "_CREATEDBY", CanBeNull = false, DbType = "VARCHAR2(255 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CREATEDBY
        {
            get
            {
                return this._CREATEDBY;
            }
            set
            {
                if (this._CREATEDBY != value)
                {
                    this.OnCREATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._CREATEDBY = value;
                    this.SendPropertyChanged("CREATEDBY");
                    this.OnCREATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDON in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_ON", Storage = "_UPDATEDON", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> UPDATEDON
        {
            get
            {
                return this._UPDATEDON;
            }
            set
            {
                if (this._UPDATEDON != value)
                {
                    this.OnUPDATEDONChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDON = value;
                    this.SendPropertyChanged("UPDATEDON");
                    this.OnUPDATEDONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UPDATEDBY in the schema.
        /// </summary>
        [Column(Name = @"UPDATED_BY", Storage = "_UPDATEDBY", DbType = "VARCHAR2(255 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string UPDATEDBY
        {
            get
            {
                return this._UPDATEDBY;
            }
            set
            {
                if (this._UPDATEDBY != value)
                {
                    this.OnUPDATEDBYChanging(value);
                    this.SendPropertyChanging();
                    this._UPDATEDBY = value;
                    this.SendPropertyChanged("UPDATEDBY");
                    this.OnUPDATEDBYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APEXWSROW in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="APEXWSROW_APEXWSLINK", Storage="_APEXWSROW", ThisKey="ROWID", OtherKey="ID", IsForeignKey=true)]
        public APEXWSROW APEXWSROW
        {
            get
            {
                return this._APEXWSROW.Entity;
            }
            set
            {
                APEXWSROW previousValue = this._APEXWSROW.Entity;
                if ((previousValue != value) || (this._APEXWSROW.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._APEXWSROW.Entity = null;
                        previousValue.APEXWSLINKs.Remove(this);
                    }
                    this._APEXWSROW.Entity = value;
                    if (value != null)
                    {
                        this._ROWID = value.ID;
                        value.APEXWSLINKs.Add(this);
                    }
                    else
                    {
                        this._ROWID = default(System.Nullable<decimal>);
                    }
                    this.SendPropertyChanged("APEXWSROW");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}

namespace PORTAFOLIOContext
{

    /// <summary>
    /// There are no comments for SELECTSUMARSTOCKResult in the schema.
    /// </summary>
    public partial class SELECTSUMARSTOCKResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _NOMBREPRODUCTO;

        private decimal _VALORPRODUCTO;

        private decimal _STOCKPRODUCTOPRODUCTOR;

        private string _DESCRIPCIONPRODUCTO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNOMBREPRODUCTOChanging(string value);
        partial void OnNOMBREPRODUCTOChanged();
        partial void OnVALORPRODUCTOChanging(decimal value);
        partial void OnVALORPRODUCTOChanged();
        partial void OnSTOCKPRODUCTOPRODUCTORChanging(decimal value);
        partial void OnSTOCKPRODUCTOPRODUCTORChanged();
        partial void OnDESCRIPCIONPRODUCTOChanging(string value);
        partial void OnDESCRIPCIONPRODUCTOChanged();
        #endregion

        public SELECTSUMARSTOCKResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for NOMBREPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPRODUCTO
        {
            get
            {
                return this._NOMBREPRODUCTO;
            }
            set
            {
                if (this._NOMBREPRODUCTO != value)
                {
                    this.OnNOMBREPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPRODUCTO = value;
                    this.SendPropertyChanged("NOMBREPRODUCTO");
                    this.OnNOMBREPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORPRODUCTO
        {
            get
            {
                return this._VALORPRODUCTO;
            }
            set
            {
                if (this._VALORPRODUCTO != value)
                {
                    this.OnVALORPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORPRODUCTO = value;
                    this.SendPropertyChanged("VALORPRODUCTO");
                    this.OnVALORPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STOCKPRODUCTOPRODUCTOR in the schema.
        /// </summary>
        [Column(Storage = "_STOCKPRODUCTOPRODUCTOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal STOCKPRODUCTOPRODUCTOR
        {
            get
            {
                return this._STOCKPRODUCTOPRODUCTOR;
            }
            set
            {
                if (this._STOCKPRODUCTOPRODUCTOR != value)
                {
                    this.OnSTOCKPRODUCTOPRODUCTORChanging(value);
                    this.SendPropertyChanging();
                    this._STOCKPRODUCTOPRODUCTOR = value;
                    this.SendPropertyChanged("STOCKPRODUCTOPRODUCTOR");
                    this.OnSTOCKPRODUCTOPRODUCTORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCIONPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCIONPRODUCTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCIONPRODUCTO
        {
            get
            {
                return this._DESCRIPCIONPRODUCTO;
            }
            set
            {
                if (this._DESCRIPCIONPRODUCTO != value)
                {
                    this.OnDESCRIPCIONPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCIONPRODUCTO = value;
                    this.SendPropertyChanged("DESCRIPCIONPRODUCTO");
                    this.OnDESCRIPCIONPRODUCTOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTPRODUCTOSADMCODResult in the schema.
    /// </summary>
    public partial class SELECTPRODUCTOSADMCODResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CODPRODUCTO;

        private string _NOMBBRE;

        private decimal _VALOR;

        private string _ESTADO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODPRODUCTOChanging(decimal value);
        partial void OnCODPRODUCTOChanged();
        partial void OnNOMBBREChanging(string value);
        partial void OnNOMBBREChanged();
        partial void OnVALORChanging(decimal value);
        partial void OnVALORChanged();
        partial void OnESTADOChanging(string value);
        partial void OnESTADOChanged();
        #endregion

        public SELECTPRODUCTOSADMCODResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODPRODUCTO in the schema.
        /// </summary>
        [Column(Name = @"COD_PRODUCTO", Storage = "_CODPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CODPRODUCTO
        {
            get
            {
                return this._CODPRODUCTO;
            }
            set
            {
                if (this._CODPRODUCTO != value)
                {
                    this.OnCODPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._CODPRODUCTO = value;
                    this.SendPropertyChanged("CODPRODUCTO");
                    this.OnCODPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBBRE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBBRE
        {
            get
            {
                return this._NOMBBRE;
            }
            set
            {
                if (this._NOMBBRE != value)
                {
                    this.OnNOMBBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBBRE = value;
                    this.SendPropertyChanged("NOMBBRE");
                    this.OnNOMBBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALOR in the schema.
        /// </summary>
        [Column(Storage = "_VALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALOR
        {
            get
            {
                return this._VALOR;
            }
            set
            {
                if (this._VALOR != value)
                {
                    this.OnVALORChanging(value);
                    this.SendPropertyChanging();
                    this._VALOR = value;
                    this.SendPropertyChanged("VALOR");
                    this.OnVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADO
        {
            get
            {
                return this._ESTADO;
            }
            set
            {
                if (this._ESTADO != value)
                {
                    this.OnESTADOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADO = value;
                    this.SendPropertyChanged("ESTADO");
                    this.OnESTADOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTPRODUCTORPORPRODCOMResult in the schema.
    /// </summary>
    public partial class SELECTPRODUCTORPORPRODCOMResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUT;

        private string _Nombre;

        private decimal _Stock;

        private string _Direccion;

        private string _Comuna;

        private string _Provincia;

        private string _Region;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnStockChanging(decimal value);
        partial void OnStockChanged();
        partial void OnDireccionChanging(string value);
        partial void OnDireccionChanged();
        partial void OnComunaChanging(string value);
        partial void OnComunaChanged();
        partial void OnProvinciaChanging(string value);
        partial void OnProvinciaChanged();
        partial void OnRegionChanging(string value);
        partial void OnRegionChanged();
        #endregion

        public SELECTPRODUCTORPORPRODCOMResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"""Nombre""", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging();
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Stock in the schema.
        /// </summary>
        [Column(Name = @"""Stock""", Storage = "_Stock", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Stock
        {
            get
            {
                return this._Stock;
            }
            set
            {
                if (this._Stock != value)
                {
                    this.OnStockChanging(value);
                    this.SendPropertyChanging();
                    this._Stock = value;
                    this.SendPropertyChanged("Stock");
                    this.OnStockChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Direccion in the schema.
        /// </summary>
        [Column(Name = @"""Direccion""", Storage = "_Direccion", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Direccion
        {
            get
            {
                return this._Direccion;
            }
            set
            {
                if (this._Direccion != value)
                {
                    this.OnDireccionChanging(value);
                    this.SendPropertyChanging();
                    this._Direccion = value;
                    this.SendPropertyChanged("Direccion");
                    this.OnDireccionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Comuna in the schema.
        /// </summary>
        [Column(Name = @"""Comuna""", Storage = "_Comuna", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Comuna
        {
            get
            {
                return this._Comuna;
            }
            set
            {
                if (this._Comuna != value)
                {
                    this.OnComunaChanging(value);
                    this.SendPropertyChanging();
                    this._Comuna = value;
                    this.SendPropertyChanged("Comuna");
                    this.OnComunaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Provincia in the schema.
        /// </summary>
        [Column(Name = @"""Provincia""", Storage = "_Provincia", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Provincia
        {
            get
            {
                return this._Provincia;
            }
            set
            {
                if (this._Provincia != value)
                {
                    this.OnProvinciaChanging(value);
                    this.SendPropertyChanging();
                    this._Provincia = value;
                    this.SendPropertyChanged("Provincia");
                    this.OnProvinciaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Region in the schema.
        /// </summary>
        [Column(Name = @"""region""", Storage = "_Region", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Region
        {
            get
            {
                return this._Region;
            }
            set
            {
                if (this._Region != value)
                {
                    this.OnRegionChanging(value);
                    this.SendPropertyChanging();
                    this._Region = value;
                    this.SendPropertyChanged("Region");
                    this.OnRegionChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTAGREGARALCARROResult in the schema.
    /// </summary>
    public partial class SELECTAGREGARALCARROResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CODPRODUCTO;

        private string _NOMBRE;

        private decimal _VALOR;

        private string _RUT;

        private decimal _STOCK;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODPRODUCTOChanging(decimal value);
        partial void OnCODPRODUCTOChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnVALORChanging(decimal value);
        partial void OnVALORChanged();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnSTOCKChanging(decimal value);
        partial void OnSTOCKChanged();
        #endregion

        public SELECTAGREGARALCARROResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODPRODUCTO in the schema.
        /// </summary>
        [Column(Name = @"COD_PRODUCTO", Storage = "_CODPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CODPRODUCTO
        {
            get
            {
                return this._CODPRODUCTO;
            }
            set
            {
                if (this._CODPRODUCTO != value)
                {
                    this.OnCODPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._CODPRODUCTO = value;
                    this.SendPropertyChanged("CODPRODUCTO");
                    this.OnCODPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALOR in the schema.
        /// </summary>
        [Column(Storage = "_VALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALOR
        {
            get
            {
                return this._VALOR;
            }
            set
            {
                if (this._VALOR != value)
                {
                    this.OnVALORChanging(value);
                    this.SendPropertyChanging();
                    this._VALOR = value;
                    this.SendPropertyChanged("VALOR");
                    this.OnVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STOCK in the schema.
        /// </summary>
        [Column(Storage = "_STOCK", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal STOCK
        {
            get
            {
                return this._STOCK;
            }
            set
            {
                if (this._STOCK != value)
                {
                    this.OnSTOCKChanging(value);
                    this.SendPropertyChanging();
                    this._STOCK = value;
                    this.SendPropertyChanged("STOCK");
                    this.OnSTOCKChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for MOSTRARPROVINCIAResult in the schema.
    /// </summary>
    public partial class MOSTRARPROVINCIAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDPROVINCIA;

        private string _NOMBREPROVINCIA;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDPROVINCIAChanging(decimal value);
        partial void OnIDPROVINCIAChanged();
        partial void OnNOMBREPROVINCIAChanging(string value);
        partial void OnNOMBREPROVINCIAChanged();
        #endregion

        public MOSTRARPROVINCIAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDPROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_IDPROVINCIA", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDPROVINCIA
        {
            get
            {
                return this._IDPROVINCIA;
            }
            set
            {
                if (this._IDPROVINCIA != value)
                {
                    this.OnIDPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._IDPROVINCIA = value;
                    this.SendPropertyChanged("IDPROVINCIA");
                    this.OnIDPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREPROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPROVINCIA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPROVINCIA
        {
            get
            {
                return this._NOMBREPROVINCIA;
            }
            set
            {
                if (this._NOMBREPROVINCIA != value)
                {
                    this.OnNOMBREPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPROVINCIA = value;
                    this.SendPropertyChanged("NOMBREPROVINCIA");
                    this.OnNOMBREPROVINCIAChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for MOSTRARCOMUNAResult in the schema.
    /// </summary>
    public partial class MOSTRARCOMUNAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDCOMUNA;

        private string _NOMBRECOMUNA;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDCOMUNAChanging(decimal value);
        partial void OnIDCOMUNAChanged();
        partial void OnNOMBRECOMUNAChanging(string value);
        partial void OnNOMBRECOMUNAChanged();
        #endregion

        public MOSTRARCOMUNAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDCOMUNA in the schema.
        /// </summary>
        [Column(Storage = "_IDCOMUNA", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDCOMUNA
        {
            get
            {
                return this._IDCOMUNA;
            }
            set
            {
                if (this._IDCOMUNA != value)
                {
                    this.OnIDCOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._IDCOMUNA = value;
                    this.SendPropertyChanged("IDCOMUNA");
                    this.OnIDCOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRECOMUNA in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRECOMUNA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRECOMUNA
        {
            get
            {
                return this._NOMBRECOMUNA;
            }
            set
            {
                if (this._NOMBRECOMUNA != value)
                {
                    this.OnNOMBRECOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRECOMUNA = value;
                    this.SendPropertyChanged("NOMBRECOMUNA");
                    this.OnNOMBRECOMUNAChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for HISTORIALDECOMPRAFECHAResult in the schema.
    /// </summary>
    public partial class HISTORIALDECOMPRAFECHAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CodBoleta;

        private decimal _Total;

        private System.DateTime _Fechaemision;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodBoletaChanging(decimal value);
        partial void OnCodBoletaChanged();
        partial void OnTotalChanging(decimal value);
        partial void OnTotalChanged();
        partial void OnFechaemisionChanging(System.DateTime value);
        partial void OnFechaemisionChanged();
        #endregion

        public HISTORIALDECOMPRAFECHAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodBoleta in the schema.
        /// </summary>
        [Column(Name = @"""Cod_boleta""", Storage = "_CodBoleta", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CodBoleta
        {
            get
            {
                return this._CodBoleta;
            }
            set
            {
                if (this._CodBoleta != value)
                {
                    this.OnCodBoletaChanging(value);
                    this.SendPropertyChanging();
                    this._CodBoleta = value;
                    this.SendPropertyChanged("CodBoleta");
                    this.OnCodBoletaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Total in the schema.
        /// </summary>
        [Column(Name = @"""Total""", Storage = "_Total", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if (this._Total != value)
                {
                    this.OnTotalChanging(value);
                    this.SendPropertyChanging();
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fechaemision in the schema.
        /// </summary>
        [Column(Name = @"""Fecha emision""", Storage = "_Fechaemision", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime Fechaemision
        {
            get
            {
                return this._Fechaemision;
            }
            set
            {
                if (this._Fechaemision != value)
                {
                    this.OnFechaemisionChanging(value);
                    this.SendPropertyChanging();
                    this._Fechaemision = value;
                    this.SendPropertyChanged("Fechaemision");
                    this.OnFechaemisionChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for DETALLESENCEROResult in the schema.
    /// </summary>
    public partial class DETALLESENCEROResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDDETALLEDOC;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDDETALLEDOCChanging(decimal value);
        partial void OnIDDETALLEDOCChanged();
        #endregion

        public DETALLESENCEROResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDDETALLEDOC in the schema.
        /// </summary>
        [Column(Storage = "_IDDETALLEDOC", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDDETALLEDOC
        {
            get
            {
                return this._IDDETALLEDOC;
            }
            set
            {
                if (this._IDDETALLEDOC != value)
                {
                    this.OnIDDETALLEDOCChanging(value);
                    this.SendPropertyChanging();
                    this._IDDETALLEDOC = value;
                    this.SendPropertyChanged("IDDETALLEDOC");
                    this.OnIDDETALLEDOCChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BUSCARIDPRODPORCODDETALLEResult in the schema.
    /// </summary>
    public partial class BUSCARIDPRODPORCODDETALLEResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _PRODUCTOIDPRODUCTO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnPRODUCTOIDPRODUCTOChanging(decimal value);
        partial void OnPRODUCTOIDPRODUCTOChanged();
        #endregion

        public BUSCARIDPRODPORCODDETALLEResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for PRODUCTOIDPRODUCTO in the schema.
        /// </summary>
        [Column(Name = @"PRODUCTO_IDPRODUCTO", Storage = "_PRODUCTOIDPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PRODUCTOIDPRODUCTO
        {
            get
            {
                return this._PRODUCTOIDPRODUCTO;
            }
            set
            {
                if (this._PRODUCTOIDPRODUCTO != value)
                {
                    this.OnPRODUCTOIDPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTOIDPRODUCTO = value;
                    this.SendPropertyChanged("PRODUCTOIDPRODUCTO");
                    this.OnPRODUCTOIDPRODUCTOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTUSUARIOSADMNOMBREResult in the schema.
    /// </summary>
    public partial class SELECTUSUARIOSADMNOMBREResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUT;

        private string _NOMBRE;

        private string _APATERNO;

        private string _AMATERNO;

        private string _CORREO;

        private decimal _FONO;

        private string _ESTADO;

        private decimal _TipoUsuario;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPATERNOChanging(string value);
        partial void OnAPATERNOChanged();
        partial void OnAMATERNOChanging(string value);
        partial void OnAMATERNOChanged();
        partial void OnCORREOChanging(string value);
        partial void OnCORREOChanged();
        partial void OnFONOChanging(decimal value);
        partial void OnFONOChanged();
        partial void OnESTADOChanging(string value);
        partial void OnESTADOChanged();
        partial void OnTipoUsuarioChanging(decimal value);
        partial void OnTipoUsuarioChanged();
        #endregion

        public SELECTUSUARIOSADMNOMBREResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A PATERNO""", Storage = "_APATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APATERNO
        {
            get
            {
                return this._APATERNO;
            }
            set
            {
                if (this._APATERNO != value)
                {
                    this.OnAPATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._APATERNO = value;
                    this.SendPropertyChanged("APATERNO");
                    this.OnAPATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A MATERNO""", Storage = "_AMATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMATERNO
        {
            get
            {
                return this._AMATERNO;
            }
            set
            {
                if (this._AMATERNO != value)
                {
                    this.OnAMATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._AMATERNO = value;
                    this.SendPropertyChanged("AMATERNO");
                    this.OnAMATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREO in the schema.
        /// </summary>
        [Column(Storage = "_CORREO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREO
        {
            get
            {
                return this._CORREO;
            }
            set
            {
                if (this._CORREO != value)
                {
                    this.OnCORREOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREO = value;
                    this.SendPropertyChanged("CORREO");
                    this.OnCORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONO in the schema.
        /// </summary>
        [Column(Storage = "_FONO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal FONO
        {
            get
            {
                return this._FONO;
            }
            set
            {
                if (this._FONO != value)
                {
                    this.OnFONOChanging(value);
                    this.SendPropertyChanging();
                    this._FONO = value;
                    this.SendPropertyChanged("FONO");
                    this.OnFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADO
        {
            get
            {
                return this._ESTADO;
            }
            set
            {
                if (this._ESTADO != value)
                {
                    this.OnESTADOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADO = value;
                    this.SendPropertyChanged("ESTADO");
                    this.OnESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoUsuario in the schema.
        /// </summary>
        [Column(Name = @"""TipoUsuario""", Storage = "_TipoUsuario", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TipoUsuario
        {
            get
            {
                return this._TipoUsuario;
            }
            set
            {
                if (this._TipoUsuario != value)
                {
                    this.OnTipoUsuarioChanging(value);
                    this.SendPropertyChanging();
                    this._TipoUsuario = value;
                    this.SendPropertyChanged("TipoUsuario");
                    this.OnTipoUsuarioChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTUSUARIOSADMResult in the schema.
    /// </summary>
    public partial class SELECTUSUARIOSADMResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUT;

        private string _NOMBRE;

        private string _APATERNO;

        private string _AMATERNO;

        private string _CORREO;

        private decimal _FONO;

        private string _ESTADO;

        private decimal _TipoUsuario;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPATERNOChanging(string value);
        partial void OnAPATERNOChanged();
        partial void OnAMATERNOChanging(string value);
        partial void OnAMATERNOChanged();
        partial void OnCORREOChanging(string value);
        partial void OnCORREOChanged();
        partial void OnFONOChanging(decimal value);
        partial void OnFONOChanged();
        partial void OnESTADOChanging(string value);
        partial void OnESTADOChanged();
        partial void OnTipoUsuarioChanging(decimal value);
        partial void OnTipoUsuarioChanged();
        #endregion

        public SELECTUSUARIOSADMResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A PATERNO""", Storage = "_APATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APATERNO
        {
            get
            {
                return this._APATERNO;
            }
            set
            {
                if (this._APATERNO != value)
                {
                    this.OnAPATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._APATERNO = value;
                    this.SendPropertyChanged("APATERNO");
                    this.OnAPATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A MATERNO""", Storage = "_AMATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMATERNO
        {
            get
            {
                return this._AMATERNO;
            }
            set
            {
                if (this._AMATERNO != value)
                {
                    this.OnAMATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._AMATERNO = value;
                    this.SendPropertyChanged("AMATERNO");
                    this.OnAMATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREO in the schema.
        /// </summary>
        [Column(Storage = "_CORREO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREO
        {
            get
            {
                return this._CORREO;
            }
            set
            {
                if (this._CORREO != value)
                {
                    this.OnCORREOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREO = value;
                    this.SendPropertyChanged("CORREO");
                    this.OnCORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONO in the schema.
        /// </summary>
        [Column(Storage = "_FONO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal FONO
        {
            get
            {
                return this._FONO;
            }
            set
            {
                if (this._FONO != value)
                {
                    this.OnFONOChanging(value);
                    this.SendPropertyChanging();
                    this._FONO = value;
                    this.SendPropertyChanged("FONO");
                    this.OnFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADO
        {
            get
            {
                return this._ESTADO;
            }
            set
            {
                if (this._ESTADO != value)
                {
                    this.OnESTADOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADO = value;
                    this.SendPropertyChanged("ESTADO");
                    this.OnESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoUsuario in the schema.
        /// </summary>
        [Column(Name = @"""tipoUsuario""", Storage = "_TipoUsuario", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TipoUsuario
        {
            get
            {
                return this._TipoUsuario;
            }
            set
            {
                if (this._TipoUsuario != value)
                {
                    this.OnTipoUsuarioChanging(value);
                    this.SendPropertyChanging();
                    this._TipoUsuario = value;
                    this.SendPropertyChanged("TipoUsuario");
                    this.OnTipoUsuarioChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTUSUARIOBYRUTResult in the schema.
    /// </summary>
    public partial class SELECTUSUARIOBYRUTResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUT;

        private string _NOMBRE;

        private string _APATERNO;

        private string _AMATERNO;

        private string _CORREO;

        private decimal _FONO;

        private string _DESCRIPCION;

        private string _DIRECCION;

        private string _COMUNA;

        private string _PROVINCIA;

        private string _REGION;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPATERNOChanging(string value);
        partial void OnAPATERNOChanged();
        partial void OnAMATERNOChanging(string value);
        partial void OnAMATERNOChanged();
        partial void OnCORREOChanging(string value);
        partial void OnCORREOChanged();
        partial void OnFONOChanging(decimal value);
        partial void OnFONOChanged();
        partial void OnDESCRIPCIONChanging(string value);
        partial void OnDESCRIPCIONChanged();
        partial void OnDIRECCIONChanging(string value);
        partial void OnDIRECCIONChanged();
        partial void OnCOMUNAChanging(string value);
        partial void OnCOMUNAChanged();
        partial void OnPROVINCIAChanging(string value);
        partial void OnPROVINCIAChanged();
        partial void OnREGIONChanging(string value);
        partial void OnREGIONChanged();
        #endregion

        public SELECTUSUARIOBYRUTResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A PATERNO""", Storage = "_APATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APATERNO
        {
            get
            {
                return this._APATERNO;
            }
            set
            {
                if (this._APATERNO != value)
                {
                    this.OnAPATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._APATERNO = value;
                    this.SendPropertyChanged("APATERNO");
                    this.OnAPATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A MATERNO""", Storage = "_AMATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMATERNO
        {
            get
            {
                return this._AMATERNO;
            }
            set
            {
                if (this._AMATERNO != value)
                {
                    this.OnAMATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._AMATERNO = value;
                    this.SendPropertyChanged("AMATERNO");
                    this.OnAMATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREO in the schema.
        /// </summary>
        [Column(Storage = "_CORREO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREO
        {
            get
            {
                return this._CORREO;
            }
            set
            {
                if (this._CORREO != value)
                {
                    this.OnCORREOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREO = value;
                    this.SendPropertyChanged("CORREO");
                    this.OnCORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONO in the schema.
        /// </summary>
        [Column(Storage = "_FONO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal FONO
        {
            get
            {
                return this._FONO;
            }
            set
            {
                if (this._FONO != value)
                {
                    this.OnFONOChanging(value);
                    this.SendPropertyChanging();
                    this._FONO = value;
                    this.SendPropertyChanged("FONO");
                    this.OnFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCION
        {
            get
            {
                return this._DESCRIPCION;
            }
            set
            {
                if (this._DESCRIPCION != value)
                {
                    this.OnDESCRIPCIONChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCION = value;
                    this.SendPropertyChanged("DESCRIPCION");
                    this.OnDESCRIPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIRECCION in the schema.
        /// </summary>
        [Column(Storage = "_DIRECCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIRECCION
        {
            get
            {
                return this._DIRECCION;
            }
            set
            {
                if (this._DIRECCION != value)
                {
                    this.OnDIRECCIONChanging(value);
                    this.SendPropertyChanging();
                    this._DIRECCION = value;
                    this.SendPropertyChanged("DIRECCION");
                    this.OnDIRECCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMUNA in the schema.
        /// </summary>
        [Column(Storage = "_COMUNA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMUNA
        {
            get
            {
                return this._COMUNA;
            }
            set
            {
                if (this._COMUNA != value)
                {
                    this.OnCOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._COMUNA = value;
                    this.SendPropertyChanged("COMUNA");
                    this.OnCOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_PROVINCIA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVINCIA
        {
            get
            {
                return this._PROVINCIA;
            }
            set
            {
                if (this._PROVINCIA != value)
                {
                    this.OnPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._PROVINCIA = value;
                    this.SendPropertyChanged("PROVINCIA");
                    this.OnPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGION in the schema.
        /// </summary>
        [Column(Storage = "_REGION", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGION
        {
            get
            {
                return this._REGION;
            }
            set
            {
                if (this._REGION != value)
                {
                    this.OnREGIONChanging(value);
                    this.SendPropertyChanging();
                    this._REGION = value;
                    this.SendPropertyChanged("REGION");
                    this.OnREGIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTPRODUCTO2Result in the schema.
    /// </summary>
    public partial class SELECTPRODUCTO2Result: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CODPRODUCTO;

        private string _NOMBBRE;

        private decimal _VALOR;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODPRODUCTOChanging(decimal value);
        partial void OnCODPRODUCTOChanged();
        partial void OnNOMBBREChanging(string value);
        partial void OnNOMBBREChanged();
        partial void OnVALORChanging(decimal value);
        partial void OnVALORChanged();
        #endregion

        public SELECTPRODUCTO2Result()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODPRODUCTO in the schema.
        /// </summary>
        [Column(Name = @"COD_PRODUCTO", Storage = "_CODPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CODPRODUCTO
        {
            get
            {
                return this._CODPRODUCTO;
            }
            set
            {
                if (this._CODPRODUCTO != value)
                {
                    this.OnCODPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._CODPRODUCTO = value;
                    this.SendPropertyChanged("CODPRODUCTO");
                    this.OnCODPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBBRE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBBRE
        {
            get
            {
                return this._NOMBBRE;
            }
            set
            {
                if (this._NOMBBRE != value)
                {
                    this.OnNOMBBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBBRE = value;
                    this.SendPropertyChanged("NOMBBRE");
                    this.OnNOMBBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALOR in the schema.
        /// </summary>
        [Column(Storage = "_VALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALOR
        {
            get
            {
                return this._VALOR;
            }
            set
            {
                if (this._VALOR != value)
                {
                    this.OnVALORChanging(value);
                    this.SendPropertyChanging();
                    this._VALOR = value;
                    this.SendPropertyChanged("VALOR");
                    this.OnVALORChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTPRODUCTORESREGIONResult in the schema.
    /// </summary>
    public partial class SELECTPRODUCTORESREGIONResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUT;

        private string _NOMBRE;

        private string _APATERNO;

        private string _AMATERNO;

        private string _CORREO;

        private decimal _FONO;

        private string _Nombrelocal;

        private string _Descripcion;

        private string _DIRECCION;

        private string _COMUNA;

        private string _PROVINCIA;

        private string _REGION;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPATERNOChanging(string value);
        partial void OnAPATERNOChanged();
        partial void OnAMATERNOChanging(string value);
        partial void OnAMATERNOChanged();
        partial void OnCORREOChanging(string value);
        partial void OnCORREOChanged();
        partial void OnFONOChanging(decimal value);
        partial void OnFONOChanged();
        partial void OnNombrelocalChanging(string value);
        partial void OnNombrelocalChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnDIRECCIONChanging(string value);
        partial void OnDIRECCIONChanged();
        partial void OnCOMUNAChanging(string value);
        partial void OnCOMUNAChanged();
        partial void OnPROVINCIAChanging(string value);
        partial void OnPROVINCIAChanged();
        partial void OnREGIONChanging(string value);
        partial void OnREGIONChanged();
        #endregion

        public SELECTPRODUCTORESREGIONResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A PATERNO""", Storage = "_APATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APATERNO
        {
            get
            {
                return this._APATERNO;
            }
            set
            {
                if (this._APATERNO != value)
                {
                    this.OnAPATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._APATERNO = value;
                    this.SendPropertyChanged("APATERNO");
                    this.OnAPATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A MATERNO""", Storage = "_AMATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMATERNO
        {
            get
            {
                return this._AMATERNO;
            }
            set
            {
                if (this._AMATERNO != value)
                {
                    this.OnAMATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._AMATERNO = value;
                    this.SendPropertyChanged("AMATERNO");
                    this.OnAMATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREO in the schema.
        /// </summary>
        [Column(Storage = "_CORREO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREO
        {
            get
            {
                return this._CORREO;
            }
            set
            {
                if (this._CORREO != value)
                {
                    this.OnCORREOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREO = value;
                    this.SendPropertyChanged("CORREO");
                    this.OnCORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONO in the schema.
        /// </summary>
        [Column(Storage = "_FONO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal FONO
        {
            get
            {
                return this._FONO;
            }
            set
            {
                if (this._FONO != value)
                {
                    this.OnFONOChanging(value);
                    this.SendPropertyChanging();
                    this._FONO = value;
                    this.SendPropertyChanged("FONO");
                    this.OnFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombrelocal in the schema.
        /// </summary>
        [Column(Name = @"""Nombre local""", Storage = "_Nombrelocal", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombrelocal
        {
            get
            {
                return this._Nombrelocal;
            }
            set
            {
                if (this._Nombrelocal != value)
                {
                    this.OnNombrelocalChanging(value);
                    this.SendPropertyChanging();
                    this._Nombrelocal = value;
                    this.SendPropertyChanged("Nombrelocal");
                    this.OnNombrelocalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"""Descripcion""", Storage = "_Descripcion", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging();
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIRECCION in the schema.
        /// </summary>
        [Column(Storage = "_DIRECCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIRECCION
        {
            get
            {
                return this._DIRECCION;
            }
            set
            {
                if (this._DIRECCION != value)
                {
                    this.OnDIRECCIONChanging(value);
                    this.SendPropertyChanging();
                    this._DIRECCION = value;
                    this.SendPropertyChanged("DIRECCION");
                    this.OnDIRECCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMUNA in the schema.
        /// </summary>
        [Column(Storage = "_COMUNA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMUNA
        {
            get
            {
                return this._COMUNA;
            }
            set
            {
                if (this._COMUNA != value)
                {
                    this.OnCOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._COMUNA = value;
                    this.SendPropertyChanged("COMUNA");
                    this.OnCOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_PROVINCIA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVINCIA
        {
            get
            {
                return this._PROVINCIA;
            }
            set
            {
                if (this._PROVINCIA != value)
                {
                    this.OnPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._PROVINCIA = value;
                    this.SendPropertyChanged("PROVINCIA");
                    this.OnPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGION in the schema.
        /// </summary>
        [Column(Storage = "_REGION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGION
        {
            get
            {
                return this._REGION;
            }
            set
            {
                if (this._REGION != value)
                {
                    this.OnREGIONChanging(value);
                    this.SendPropertyChanging();
                    this._REGION = value;
                    this.SendPropertyChanged("REGION");
                    this.OnREGIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTPRODUCTORESADMREGIONResult in the schema.
    /// </summary>
    public partial class SELECTPRODUCTORESADMREGIONResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUT;

        private string _NOMBRE;

        private string _APATERNO;

        private string _AMATERNO;

        private string _CORREO;

        private decimal _FONO;

        private string _Nombrelocal;

        private string _Descripcion;

        private string _DIRECCION;

        private string _COMUNA;

        private string _PROVINCIA;

        private string _REGION;

        private string _ESTADO;

        private decimal _TipoUsuario;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPATERNOChanging(string value);
        partial void OnAPATERNOChanged();
        partial void OnAMATERNOChanging(string value);
        partial void OnAMATERNOChanged();
        partial void OnCORREOChanging(string value);
        partial void OnCORREOChanged();
        partial void OnFONOChanging(decimal value);
        partial void OnFONOChanged();
        partial void OnNombrelocalChanging(string value);
        partial void OnNombrelocalChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnDIRECCIONChanging(string value);
        partial void OnDIRECCIONChanged();
        partial void OnCOMUNAChanging(string value);
        partial void OnCOMUNAChanged();
        partial void OnPROVINCIAChanging(string value);
        partial void OnPROVINCIAChanged();
        partial void OnREGIONChanging(string value);
        partial void OnREGIONChanged();
        partial void OnESTADOChanging(string value);
        partial void OnESTADOChanged();
        partial void OnTipoUsuarioChanging(decimal value);
        partial void OnTipoUsuarioChanged();
        #endregion

        public SELECTPRODUCTORESADMREGIONResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A PATERNO""", Storage = "_APATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APATERNO
        {
            get
            {
                return this._APATERNO;
            }
            set
            {
                if (this._APATERNO != value)
                {
                    this.OnAPATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._APATERNO = value;
                    this.SendPropertyChanged("APATERNO");
                    this.OnAPATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A MATERNO""", Storage = "_AMATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMATERNO
        {
            get
            {
                return this._AMATERNO;
            }
            set
            {
                if (this._AMATERNO != value)
                {
                    this.OnAMATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._AMATERNO = value;
                    this.SendPropertyChanged("AMATERNO");
                    this.OnAMATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREO in the schema.
        /// </summary>
        [Column(Storage = "_CORREO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREO
        {
            get
            {
                return this._CORREO;
            }
            set
            {
                if (this._CORREO != value)
                {
                    this.OnCORREOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREO = value;
                    this.SendPropertyChanged("CORREO");
                    this.OnCORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONO in the schema.
        /// </summary>
        [Column(Storage = "_FONO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal FONO
        {
            get
            {
                return this._FONO;
            }
            set
            {
                if (this._FONO != value)
                {
                    this.OnFONOChanging(value);
                    this.SendPropertyChanging();
                    this._FONO = value;
                    this.SendPropertyChanged("FONO");
                    this.OnFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombrelocal in the schema.
        /// </summary>
        [Column(Name = @"""Nombre local""", Storage = "_Nombrelocal", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombrelocal
        {
            get
            {
                return this._Nombrelocal;
            }
            set
            {
                if (this._Nombrelocal != value)
                {
                    this.OnNombrelocalChanging(value);
                    this.SendPropertyChanging();
                    this._Nombrelocal = value;
                    this.SendPropertyChanged("Nombrelocal");
                    this.OnNombrelocalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"""Descripcion""", Storage = "_Descripcion", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging();
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIRECCION in the schema.
        /// </summary>
        [Column(Storage = "_DIRECCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIRECCION
        {
            get
            {
                return this._DIRECCION;
            }
            set
            {
                if (this._DIRECCION != value)
                {
                    this.OnDIRECCIONChanging(value);
                    this.SendPropertyChanging();
                    this._DIRECCION = value;
                    this.SendPropertyChanged("DIRECCION");
                    this.OnDIRECCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMUNA in the schema.
        /// </summary>
        [Column(Storage = "_COMUNA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMUNA
        {
            get
            {
                return this._COMUNA;
            }
            set
            {
                if (this._COMUNA != value)
                {
                    this.OnCOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._COMUNA = value;
                    this.SendPropertyChanged("COMUNA");
                    this.OnCOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_PROVINCIA", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVINCIA
        {
            get
            {
                return this._PROVINCIA;
            }
            set
            {
                if (this._PROVINCIA != value)
                {
                    this.OnPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._PROVINCIA = value;
                    this.SendPropertyChanged("PROVINCIA");
                    this.OnPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGION in the schema.
        /// </summary>
        [Column(Storage = "_REGION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGION
        {
            get
            {
                return this._REGION;
            }
            set
            {
                if (this._REGION != value)
                {
                    this.OnREGIONChanging(value);
                    this.SendPropertyChanging();
                    this._REGION = value;
                    this.SendPropertyChanged("REGION");
                    this.OnREGIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADO
        {
            get
            {
                return this._ESTADO;
            }
            set
            {
                if (this._ESTADO != value)
                {
                    this.OnESTADOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADO = value;
                    this.SendPropertyChanged("ESTADO");
                    this.OnESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoUsuario in the schema.
        /// </summary>
        [Column(Name = @"""TipoUsuario""", Storage = "_TipoUsuario", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TipoUsuario
        {
            get
            {
                return this._TipoUsuario;
            }
            set
            {
                if (this._TipoUsuario != value)
                {
                    this.OnTipoUsuarioChanging(value);
                    this.SendPropertyChanging();
                    this._TipoUsuario = value;
                    this.SendPropertyChanged("TipoUsuario");
                    this.OnTipoUsuarioChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECHISTORIALDEVENTAPORIDResult in the schema.
    /// </summary>
    public partial class SELECHISTORIALDEVENTAPORIDResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CodBoleta;

        private System.DateTime _Fecha;

        private System.Nullable<decimal> _SubTotal;

        private string _Nombre;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodBoletaChanging(decimal value);
        partial void OnCodBoletaChanged();
        partial void OnFechaChanging(System.DateTime value);
        partial void OnFechaChanged();
        partial void OnSubTotalChanging(System.Nullable<decimal> value);
        partial void OnSubTotalChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        #endregion

        public SELECHISTORIALDEVENTAPORIDResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodBoleta in the schema.
        /// </summary>
        [Column(Name = @"""CodBoleta""", Storage = "_CodBoleta", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CodBoleta
        {
            get
            {
                return this._CodBoleta;
            }
            set
            {
                if (this._CodBoleta != value)
                {
                    this.OnCodBoletaChanging(value);
                    this.SendPropertyChanging();
                    this._CodBoleta = value;
                    this.SendPropertyChanged("CodBoleta");
                    this.OnCodBoletaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [Column(Name = @"""fecha""", Storage = "_Fecha", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime Fecha
        {
            get
            {
                return this._Fecha;
            }
            set
            {
                if (this._Fecha != value)
                {
                    this.OnFechaChanging(value);
                    this.SendPropertyChanging();
                    this._Fecha = value;
                    this.SendPropertyChanged("Fecha");
                    this.OnFechaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SubTotal in the schema.
        /// </summary>
        [Column(Name = @"""SubTotal""", Storage = "_SubTotal", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> SubTotal
        {
            get
            {
                return this._SubTotal;
            }
            set
            {
                if (this._SubTotal != value)
                {
                    this.OnSubTotalChanging(value);
                    this.SendPropertyChanging();
                    this._SubTotal = value;
                    this.SendPropertyChanged("SubTotal");
                    this.OnSubTotalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"""nombre""", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging();
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for GEOLOCSELECTResult in the schema.
    /// </summary>
    public partial class GEOLOCSELECTResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _LATITUDGEOLOC;

        private string _LONGITUDGEOLOC;

        private decimal _IDUSUARIO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnLATITUDGEOLOCChanging(string value);
        partial void OnLATITUDGEOLOCChanged();
        partial void OnLONGITUDGEOLOCChanging(string value);
        partial void OnLONGITUDGEOLOCChanged();
        partial void OnIDUSUARIOChanging(decimal value);
        partial void OnIDUSUARIOChanged();
        #endregion

        public GEOLOCSELECTResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for LATITUDGEOLOC in the schema.
        /// </summary>
        [Column(Storage = "_LATITUDGEOLOC", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string LATITUDGEOLOC
        {
            get
            {
                return this._LATITUDGEOLOC;
            }
            set
            {
                if (this._LATITUDGEOLOC != value)
                {
                    this.OnLATITUDGEOLOCChanging(value);
                    this.SendPropertyChanging();
                    this._LATITUDGEOLOC = value;
                    this.SendPropertyChanged("LATITUDGEOLOC");
                    this.OnLATITUDGEOLOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LONGITUDGEOLOC in the schema.
        /// </summary>
        [Column(Storage = "_LONGITUDGEOLOC", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string LONGITUDGEOLOC
        {
            get
            {
                return this._LONGITUDGEOLOC;
            }
            set
            {
                if (this._LONGITUDGEOLOC != value)
                {
                    this.OnLONGITUDGEOLOCChanging(value);
                    this.SendPropertyChanging();
                    this._LONGITUDGEOLOC = value;
                    this.SendPropertyChanged("LONGITUDGEOLOC");
                    this.OnLONGITUDGEOLOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IDUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_IDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDUSUARIO
        {
            get
            {
                return this._IDUSUARIO;
            }
            set
            {
                if (this._IDUSUARIO != value)
                {
                    this.OnIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._IDUSUARIO = value;
                    this.SendPropertyChanged("IDUSUARIO");
                    this.OnIDUSUARIOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BUSCARSTOCKResult in the schema.
    /// </summary>
    public partial class BUSCARSTOCKResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _STOCKPRODUCTOPRODUCTOR;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnSTOCKPRODUCTOPRODUCTORChanging(decimal value);
        partial void OnSTOCKPRODUCTOPRODUCTORChanged();
        #endregion

        public BUSCARSTOCKResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for STOCKPRODUCTOPRODUCTOR in the schema.
        /// </summary>
        [Column(Storage = "_STOCKPRODUCTOPRODUCTOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal STOCKPRODUCTOPRODUCTOR
        {
            get
            {
                return this._STOCKPRODUCTOPRODUCTOR;
            }
            set
            {
                if (this._STOCKPRODUCTOPRODUCTOR != value)
                {
                    this.OnSTOCKPRODUCTOPRODUCTORChanging(value);
                    this.SendPropertyChanging();
                    this._STOCKPRODUCTOPRODUCTOR = value;
                    this.SendPropertyChanged("STOCKPRODUCTOPRODUCTOR");
                    this.OnSTOCKPRODUCTOPRODUCTORChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BUSCARRUTPORCODPEDIDOResult in the schema.
    /// </summary>
    public partial class BUSCARRUTPORCODPEDIDOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUTUSUARIO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTUSUARIOChanging(string value);
        partial void OnRUTUSUARIOChanged();
        #endregion

        public BUSCARRUTPORCODPEDIDOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUTUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_RUTUSUARIO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUTUSUARIO
        {
            get
            {
                return this._RUTUSUARIO;
            }
            set
            {
                if (this._RUTUSUARIO != value)
                {
                    this.OnRUTUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._RUTUSUARIO = value;
                    this.SendPropertyChanged("RUTUSUARIO");
                    this.OnRUTUSUARIOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTPRODUCTORESADMResult in the schema.
    /// </summary>
    public partial class SELECTPRODUCTORESADMResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUT;

        private string _NOMBRE;

        private string _APATERNO;

        private string _AMATERNO;

        private string _CORREO;

        private decimal _FONO;

        private string _Nombrelocal;

        private string _Descripcion;

        private string _DIRECCION;

        private string _COMUNA;

        private string _PROVINCIA;

        private string _REGION;

        private string _ESTADO;

        private decimal _TipoUsuario;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPATERNOChanging(string value);
        partial void OnAPATERNOChanged();
        partial void OnAMATERNOChanging(string value);
        partial void OnAMATERNOChanged();
        partial void OnCORREOChanging(string value);
        partial void OnCORREOChanged();
        partial void OnFONOChanging(decimal value);
        partial void OnFONOChanged();
        partial void OnNombrelocalChanging(string value);
        partial void OnNombrelocalChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnDIRECCIONChanging(string value);
        partial void OnDIRECCIONChanged();
        partial void OnCOMUNAChanging(string value);
        partial void OnCOMUNAChanged();
        partial void OnPROVINCIAChanging(string value);
        partial void OnPROVINCIAChanged();
        partial void OnREGIONChanging(string value);
        partial void OnREGIONChanged();
        partial void OnESTADOChanging(string value);
        partial void OnESTADOChanged();
        partial void OnTipoUsuarioChanging(decimal value);
        partial void OnTipoUsuarioChanged();
        #endregion

        public SELECTPRODUCTORESADMResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A PATERNO""", Storage = "_APATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APATERNO
        {
            get
            {
                return this._APATERNO;
            }
            set
            {
                if (this._APATERNO != value)
                {
                    this.OnAPATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._APATERNO = value;
                    this.SendPropertyChanged("APATERNO");
                    this.OnAPATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A MATERNO""", Storage = "_AMATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMATERNO
        {
            get
            {
                return this._AMATERNO;
            }
            set
            {
                if (this._AMATERNO != value)
                {
                    this.OnAMATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._AMATERNO = value;
                    this.SendPropertyChanged("AMATERNO");
                    this.OnAMATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREO in the schema.
        /// </summary>
        [Column(Storage = "_CORREO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREO
        {
            get
            {
                return this._CORREO;
            }
            set
            {
                if (this._CORREO != value)
                {
                    this.OnCORREOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREO = value;
                    this.SendPropertyChanged("CORREO");
                    this.OnCORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONO in the schema.
        /// </summary>
        [Column(Storage = "_FONO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal FONO
        {
            get
            {
                return this._FONO;
            }
            set
            {
                if (this._FONO != value)
                {
                    this.OnFONOChanging(value);
                    this.SendPropertyChanging();
                    this._FONO = value;
                    this.SendPropertyChanged("FONO");
                    this.OnFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombrelocal in the schema.
        /// </summary>
        [Column(Name = @"""Nombre local""", Storage = "_Nombrelocal", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombrelocal
        {
            get
            {
                return this._Nombrelocal;
            }
            set
            {
                if (this._Nombrelocal != value)
                {
                    this.OnNombrelocalChanging(value);
                    this.SendPropertyChanging();
                    this._Nombrelocal = value;
                    this.SendPropertyChanged("Nombrelocal");
                    this.OnNombrelocalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"""Descripcion""", Storage = "_Descripcion", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging();
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIRECCION in the schema.
        /// </summary>
        [Column(Storage = "_DIRECCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIRECCION
        {
            get
            {
                return this._DIRECCION;
            }
            set
            {
                if (this._DIRECCION != value)
                {
                    this.OnDIRECCIONChanging(value);
                    this.SendPropertyChanging();
                    this._DIRECCION = value;
                    this.SendPropertyChanged("DIRECCION");
                    this.OnDIRECCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMUNA in the schema.
        /// </summary>
        [Column(Storage = "_COMUNA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMUNA
        {
            get
            {
                return this._COMUNA;
            }
            set
            {
                if (this._COMUNA != value)
                {
                    this.OnCOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._COMUNA = value;
                    this.SendPropertyChanged("COMUNA");
                    this.OnCOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_PROVINCIA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVINCIA
        {
            get
            {
                return this._PROVINCIA;
            }
            set
            {
                if (this._PROVINCIA != value)
                {
                    this.OnPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._PROVINCIA = value;
                    this.SendPropertyChanged("PROVINCIA");
                    this.OnPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGION in the schema.
        /// </summary>
        [Column(Storage = "_REGION", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGION
        {
            get
            {
                return this._REGION;
            }
            set
            {
                if (this._REGION != value)
                {
                    this.OnREGIONChanging(value);
                    this.SendPropertyChanging();
                    this._REGION = value;
                    this.SendPropertyChanged("REGION");
                    this.OnREGIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADO
        {
            get
            {
                return this._ESTADO;
            }
            set
            {
                if (this._ESTADO != value)
                {
                    this.OnESTADOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADO = value;
                    this.SendPropertyChanged("ESTADO");
                    this.OnESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoUsuario in the schema.
        /// </summary>
        [Column(Name = @"""TipoUsuario""", Storage = "_TipoUsuario", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TipoUsuario
        {
            get
            {
                return this._TipoUsuario;
            }
            set
            {
                if (this._TipoUsuario != value)
                {
                    this.OnTipoUsuarioChanging(value);
                    this.SendPropertyChanging();
                    this._TipoUsuario = value;
                    this.SendPropertyChanged("TipoUsuario");
                    this.OnTipoUsuarioChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for LOGINResult in the schema.
    /// </summary>
    public partial class LOGINResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDUSUARIO;

        private string _RUTUSUARIO;

        private string _NOMBREUSUARIO;

        private string _APELLIDOPATERNOUSUARIO;

        private string _APELLIDOMATERNOUSUARIO;

        private string _CORREOUSUARIO;

        private decimal _TELEFONOUSUARIO;

        private string _DESCRIPCIONUSUARIO;

        private string _CLAVEUSUARIO;

        private decimal _TIPOUSUARIO;

        private string _ESTADOUSUARIO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDUSUARIOChanging(decimal value);
        partial void OnIDUSUARIOChanged();
        partial void OnRUTUSUARIOChanging(string value);
        partial void OnRUTUSUARIOChanged();
        partial void OnNOMBREUSUARIOChanging(string value);
        partial void OnNOMBREUSUARIOChanged();
        partial void OnAPELLIDOPATERNOUSUARIOChanging(string value);
        partial void OnAPELLIDOPATERNOUSUARIOChanged();
        partial void OnAPELLIDOMATERNOUSUARIOChanging(string value);
        partial void OnAPELLIDOMATERNOUSUARIOChanged();
        partial void OnCORREOUSUARIOChanging(string value);
        partial void OnCORREOUSUARIOChanged();
        partial void OnTELEFONOUSUARIOChanging(decimal value);
        partial void OnTELEFONOUSUARIOChanged();
        partial void OnDESCRIPCIONUSUARIOChanging(string value);
        partial void OnDESCRIPCIONUSUARIOChanged();
        partial void OnCLAVEUSUARIOChanging(string value);
        partial void OnCLAVEUSUARIOChanged();
        partial void OnTIPOUSUARIOChanging(decimal value);
        partial void OnTIPOUSUARIOChanged();
        partial void OnESTADOUSUARIOChanging(string value);
        partial void OnESTADOUSUARIOChanged();
        #endregion

        public LOGINResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_IDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDUSUARIO
        {
            get
            {
                return this._IDUSUARIO;
            }
            set
            {
                if (this._IDUSUARIO != value)
                {
                    this.OnIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._IDUSUARIO = value;
                    this.SendPropertyChanged("IDUSUARIO");
                    this.OnIDUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RUTUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_RUTUSUARIO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUTUSUARIO
        {
            get
            {
                return this._RUTUSUARIO;
            }
            set
            {
                if (this._RUTUSUARIO != value)
                {
                    this.OnRUTUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._RUTUSUARIO = value;
                    this.SendPropertyChanged("RUTUSUARIO");
                    this.OnRUTUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREUSUARIO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREUSUARIO
        {
            get
            {
                return this._NOMBREUSUARIO;
            }
            set
            {
                if (this._NOMBREUSUARIO != value)
                {
                    this.OnNOMBREUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREUSUARIO = value;
                    this.SendPropertyChanged("NOMBREUSUARIO");
                    this.OnNOMBREUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APELLIDOPATERNOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_APELLIDOPATERNOUSUARIO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APELLIDOPATERNOUSUARIO
        {
            get
            {
                return this._APELLIDOPATERNOUSUARIO;
            }
            set
            {
                if (this._APELLIDOPATERNOUSUARIO != value)
                {
                    this.OnAPELLIDOPATERNOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._APELLIDOPATERNOUSUARIO = value;
                    this.SendPropertyChanged("APELLIDOPATERNOUSUARIO");
                    this.OnAPELLIDOPATERNOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APELLIDOMATERNOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_APELLIDOMATERNOUSUARIO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APELLIDOMATERNOUSUARIO
        {
            get
            {
                return this._APELLIDOMATERNOUSUARIO;
            }
            set
            {
                if (this._APELLIDOMATERNOUSUARIO != value)
                {
                    this.OnAPELLIDOMATERNOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._APELLIDOMATERNOUSUARIO = value;
                    this.SendPropertyChanged("APELLIDOMATERNOUSUARIO");
                    this.OnAPELLIDOMATERNOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_CORREOUSUARIO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREOUSUARIO
        {
            get
            {
                return this._CORREOUSUARIO;
            }
            set
            {
                if (this._CORREOUSUARIO != value)
                {
                    this.OnCORREOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREOUSUARIO = value;
                    this.SendPropertyChanged("CORREOUSUARIO");
                    this.OnCORREOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TELEFONOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_TELEFONOUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TELEFONOUSUARIO
        {
            get
            {
                return this._TELEFONOUSUARIO;
            }
            set
            {
                if (this._TELEFONOUSUARIO != value)
                {
                    this.OnTELEFONOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._TELEFONOUSUARIO = value;
                    this.SendPropertyChanged("TELEFONOUSUARIO");
                    this.OnTELEFONOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCIONUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCIONUSUARIO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCIONUSUARIO
        {
            get
            {
                return this._DESCRIPCIONUSUARIO;
            }
            set
            {
                if (this._DESCRIPCIONUSUARIO != value)
                {
                    this.OnDESCRIPCIONUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCIONUSUARIO = value;
                    this.SendPropertyChanged("DESCRIPCIONUSUARIO");
                    this.OnDESCRIPCIONUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CLAVEUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_CLAVEUSUARIO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CLAVEUSUARIO
        {
            get
            {
                return this._CLAVEUSUARIO;
            }
            set
            {
                if (this._CLAVEUSUARIO != value)
                {
                    this.OnCLAVEUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._CLAVEUSUARIO = value;
                    this.SendPropertyChanged("CLAVEUSUARIO");
                    this.OnCLAVEUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_TIPOUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TIPOUSUARIO
        {
            get
            {
                return this._TIPOUSUARIO;
            }
            set
            {
                if (this._TIPOUSUARIO != value)
                {
                    this.OnTIPOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._TIPOUSUARIO = value;
                    this.SendPropertyChanged("TIPOUSUARIO");
                    this.OnTIPOUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADOUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADOUSUARIO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADOUSUARIO
        {
            get
            {
                return this._ESTADOUSUARIO;
            }
            set
            {
                if (this._ESTADOUSUARIO != value)
                {
                    this.OnESTADOUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADOUSUARIO = value;
                    this.SendPropertyChanged("ESTADOUSUARIO");
                    this.OnESTADOUSUARIOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for IDCODBOLETACARRITODECOMPRAResult in the schema.
    /// </summary>
    public partial class IDCODBOLETACARRITODECOMPRAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDDOCUMENTO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDDOCUMENTOChanging(decimal value);
        partial void OnIDDOCUMENTOChanged();
        #endregion

        public IDCODBOLETACARRITODECOMPRAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDDOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_IDDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDDOCUMENTO
        {
            get
            {
                return this._IDDOCUMENTO;
            }
            set
            {
                if (this._IDDOCUMENTO != value)
                {
                    this.OnIDDOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._IDDOCUMENTO = value;
                    this.SendPropertyChanged("IDDOCUMENTO");
                    this.OnIDDOCUMENTOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for CARRITODECOMPRAResult in the schema.
    /// </summary>
    public partial class CARRITODECOMPRAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CODPEDIDO;

        private string _NOMBRE;

        private decimal _CANTIDAD;

        private decimal _VALOR;

        private System.Nullable<decimal> _SUBTOTAL;

        private string _RutProductor;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCODPEDIDOChanging(decimal value);
        partial void OnCODPEDIDOChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnCANTIDADChanging(decimal value);
        partial void OnCANTIDADChanged();
        partial void OnVALORChanging(decimal value);
        partial void OnVALORChanged();
        partial void OnSUBTOTALChanging(System.Nullable<decimal> value);
        partial void OnSUBTOTALChanged();
        partial void OnRutProductorChanging(string value);
        partial void OnRutProductorChanged();
        #endregion

        public CARRITODECOMPRAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CODPEDIDO in the schema.
        /// </summary>
        [Column(Name = @"COD_PEDIDO", Storage = "_CODPEDIDO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CODPEDIDO
        {
            get
            {
                return this._CODPEDIDO;
            }
            set
            {
                if (this._CODPEDIDO != value)
                {
                    this.OnCODPEDIDOChanging(value);
                    this.SendPropertyChanging();
                    this._CODPEDIDO = value;
                    this.SendPropertyChanged("CODPEDIDO");
                    this.OnCODPEDIDOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CANTIDAD in the schema.
        /// </summary>
        [Column(Storage = "_CANTIDAD", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CANTIDAD
        {
            get
            {
                return this._CANTIDAD;
            }
            set
            {
                if (this._CANTIDAD != value)
                {
                    this.OnCANTIDADChanging(value);
                    this.SendPropertyChanging();
                    this._CANTIDAD = value;
                    this.SendPropertyChanged("CANTIDAD");
                    this.OnCANTIDADChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALOR in the schema.
        /// </summary>
        [Column(Storage = "_VALOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALOR
        {
            get
            {
                return this._VALOR;
            }
            set
            {
                if (this._VALOR != value)
                {
                    this.OnVALORChanging(value);
                    this.SendPropertyChanging();
                    this._VALOR = value;
                    this.SendPropertyChanged("VALOR");
                    this.OnVALORChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SUBTOTAL in the schema.
        /// </summary>
        [Column(Storage = "_SUBTOTAL", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> SUBTOTAL
        {
            get
            {
                return this._SUBTOTAL;
            }
            set
            {
                if (this._SUBTOTAL != value)
                {
                    this.OnSUBTOTALChanging(value);
                    this.SendPropertyChanging();
                    this._SUBTOTAL = value;
                    this.SendPropertyChanged("SUBTOTAL");
                    this.OnSUBTOTALChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RutProductor in the schema.
        /// </summary>
        [Column(Name = @"""Rut Productor""", Storage = "_RutProductor", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RutProductor
        {
            get
            {
                return this._RutProductor;
            }
            set
            {
                if (this._RutProductor != value)
                {
                    this.OnRutProductorChanging(value);
                    this.SendPropertyChanging();
                    this._RutProductor = value;
                    this.SendPropertyChanged("RutProductor");
                    this.OnRutProductorChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTSUMARResult in the schema.
    /// </summary>
    public partial class SELECTSUMARResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _NOMBREPRODUCTO;

        private decimal _VALORPRODDETALLEDOC;

        private decimal _CANTIDADPEDIDODETALLEDOC;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNOMBREPRODUCTOChanging(string value);
        partial void OnNOMBREPRODUCTOChanged();
        partial void OnVALORPRODDETALLEDOCChanging(decimal value);
        partial void OnVALORPRODDETALLEDOCChanged();
        partial void OnCANTIDADPEDIDODETALLEDOCChanging(decimal value);
        partial void OnCANTIDADPEDIDODETALLEDOCChanged();
        #endregion

        public SELECTSUMARResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for NOMBREPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPRODUCTO
        {
            get
            {
                return this._NOMBREPRODUCTO;
            }
            set
            {
                if (this._NOMBREPRODUCTO != value)
                {
                    this.OnNOMBREPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPRODUCTO = value;
                    this.SendPropertyChanged("NOMBREPRODUCTO");
                    this.OnNOMBREPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORPRODDETALLEDOC in the schema.
        /// </summary>
        [Column(Storage = "_VALORPRODDETALLEDOC", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORPRODDETALLEDOC
        {
            get
            {
                return this._VALORPRODDETALLEDOC;
            }
            set
            {
                if (this._VALORPRODDETALLEDOC != value)
                {
                    this.OnVALORPRODDETALLEDOCChanging(value);
                    this.SendPropertyChanging();
                    this._VALORPRODDETALLEDOC = value;
                    this.SendPropertyChanged("VALORPRODDETALLEDOC");
                    this.OnVALORPRODDETALLEDOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CANTIDADPEDIDODETALLEDOC in the schema.
        /// </summary>
        [Column(Storage = "_CANTIDADPEDIDODETALLEDOC", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CANTIDADPEDIDODETALLEDOC
        {
            get
            {
                return this._CANTIDADPEDIDODETALLEDOC;
            }
            set
            {
                if (this._CANTIDADPEDIDODETALLEDOC != value)
                {
                    this.OnCANTIDADPEDIDODETALLEDOCChanging(value);
                    this.SendPropertyChanging();
                    this._CANTIDADPEDIDODETALLEDOC = value;
                    this.SendPropertyChanged("CANTIDADPEDIDODETALLEDOC");
                    this.OnCANTIDADPEDIDODETALLEDOCChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTPRODUCTOPORIDResult in the schema.
    /// </summary>
    public partial class SELECTPRODUCTOPORIDResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _NOMBREPRODUCTO;

        private decimal _VALORPRODUCTO;

        private string _DESCRIPCIONPRODUCTO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNOMBREPRODUCTOChanging(string value);
        partial void OnNOMBREPRODUCTOChanged();
        partial void OnVALORPRODUCTOChanging(decimal value);
        partial void OnVALORPRODUCTOChanged();
        partial void OnDESCRIPCIONPRODUCTOChanging(string value);
        partial void OnDESCRIPCIONPRODUCTOChanged();
        #endregion

        public SELECTPRODUCTOPORIDResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for NOMBREPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPRODUCTO
        {
            get
            {
                return this._NOMBREPRODUCTO;
            }
            set
            {
                if (this._NOMBREPRODUCTO != value)
                {
                    this.OnNOMBREPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPRODUCTO = value;
                    this.SendPropertyChanged("NOMBREPRODUCTO");
                    this.OnNOMBREPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORPRODUCTO
        {
            get
            {
                return this._VALORPRODUCTO;
            }
            set
            {
                if (this._VALORPRODUCTO != value)
                {
                    this.OnVALORPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORPRODUCTO = value;
                    this.SendPropertyChanged("VALORPRODUCTO");
                    this.OnVALORPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCIONPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCIONPRODUCTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCIONPRODUCTO
        {
            get
            {
                return this._DESCRIPCIONPRODUCTO;
            }
            set
            {
                if (this._DESCRIPCIONPRODUCTO != value)
                {
                    this.OnDESCRIPCIONPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCIONPRODUCTO = value;
                    this.SendPropertyChanged("DESCRIPCIONPRODUCTO");
                    this.OnDESCRIPCIONPRODUCTOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for MISPRODUCTOSUSUARIOResult in the schema.
    /// </summary>
    public partial class MISPRODUCTOSUSUARIOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CodProducto;

        private string _PRODUCTO;

        private decimal _Stock;

        private decimal _Valor;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodProductoChanging(decimal value);
        partial void OnCodProductoChanged();
        partial void OnPRODUCTOChanging(string value);
        partial void OnPRODUCTOChanged();
        partial void OnStockChanging(decimal value);
        partial void OnStockChanged();
        partial void OnValorChanging(decimal value);
        partial void OnValorChanged();
        #endregion

        public MISPRODUCTOSUSUARIOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodProducto in the schema.
        /// </summary>
        [Column(Name = @"""cod_producto""", Storage = "_CodProducto", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CodProducto
        {
            get
            {
                return this._CodProducto;
            }
            set
            {
                if (this._CodProducto != value)
                {
                    this.OnCodProductoChanging(value);
                    this.SendPropertyChanging();
                    this._CodProducto = value;
                    this.SendPropertyChanged("CodProducto");
                    this.OnCodProductoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_PRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRODUCTO
        {
            get
            {
                return this._PRODUCTO;
            }
            set
            {
                if (this._PRODUCTO != value)
                {
                    this.OnPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTO = value;
                    this.SendPropertyChanged("PRODUCTO");
                    this.OnPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Stock in the schema.
        /// </summary>
        [Column(Name = @"""stock""", Storage = "_Stock", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Stock
        {
            get
            {
                return this._Stock;
            }
            set
            {
                if (this._Stock != value)
                {
                    this.OnStockChanging(value);
                    this.SendPropertyChanging();
                    this._Stock = value;
                    this.SendPropertyChanged("Stock");
                    this.OnStockChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Valor in the schema.
        /// </summary>
        [Column(Name = @"""valor""", Storage = "_Valor", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Valor
        {
            get
            {
                return this._Valor;
            }
            set
            {
                if (this._Valor != value)
                {
                    this.OnValorChanging(value);
                    this.SendPropertyChanging();
                    this._Valor = value;
                    this.SendPropertyChanged("Valor");
                    this.OnValorChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for ADMHISTORIALVENTAResult in the schema.
    /// </summary>
    public partial class ADMHISTORIALVENTAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CodBoleta;

        private string _Rut;

        private System.DateTime _Fecha;

        private decimal _Valor;

        private string _Estado;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodBoletaChanging(decimal value);
        partial void OnCodBoletaChanged();
        partial void OnRutChanging(string value);
        partial void OnRutChanged();
        partial void OnFechaChanging(System.DateTime value);
        partial void OnFechaChanged();
        partial void OnValorChanging(decimal value);
        partial void OnValorChanged();
        partial void OnEstadoChanging(string value);
        partial void OnEstadoChanged();
        #endregion

        public ADMHISTORIALVENTAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodBoleta in the schema.
        /// </summary>
        [Column(Name = @"""CodBoleta""", Storage = "_CodBoleta", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CodBoleta
        {
            get
            {
                return this._CodBoleta;
            }
            set
            {
                if (this._CodBoleta != value)
                {
                    this.OnCodBoletaChanging(value);
                    this.SendPropertyChanging();
                    this._CodBoleta = value;
                    this.SendPropertyChanged("CodBoleta");
                    this.OnCodBoletaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Rut in the schema.
        /// </summary>
        [Column(Name = @"""Rut""", Storage = "_Rut", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Rut
        {
            get
            {
                return this._Rut;
            }
            set
            {
                if (this._Rut != value)
                {
                    this.OnRutChanging(value);
                    this.SendPropertyChanging();
                    this._Rut = value;
                    this.SendPropertyChanged("Rut");
                    this.OnRutChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [Column(Name = @"""fecha""", Storage = "_Fecha", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime Fecha
        {
            get
            {
                return this._Fecha;
            }
            set
            {
                if (this._Fecha != value)
                {
                    this.OnFechaChanging(value);
                    this.SendPropertyChanging();
                    this._Fecha = value;
                    this.SendPropertyChanged("Fecha");
                    this.OnFechaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Valor in the schema.
        /// </summary>
        [Column(Name = @"""valor""", Storage = "_Valor", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Valor
        {
            get
            {
                return this._Valor;
            }
            set
            {
                if (this._Valor != value)
                {
                    this.OnValorChanging(value);
                    this.SendPropertyChanging();
                    this._Valor = value;
                    this.SendPropertyChanged("Valor");
                    this.OnValorChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Estado in the schema.
        /// </summary>
        [Column(Name = @"""Estado""", Storage = "_Estado", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Estado
        {
            get
            {
                return this._Estado;
            }
            set
            {
                if (this._Estado != value)
                {
                    this.OnEstadoChanging(value);
                    this.SendPropertyChanging();
                    this._Estado = value;
                    this.SendPropertyChanged("Estado");
                    this.OnEstadoChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTPRODUCTORESNOMBREResult in the schema.
    /// </summary>
    public partial class SELECTPRODUCTORESNOMBREResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUT;

        private string _NOMBRE;

        private string _APATERNO;

        private string _AMATERNO;

        private string _CORREO;

        private decimal _FONO;

        private string _Nombrelocal;

        private string _Descripcion;

        private string _DIRECCION;

        private string _COMUNA;

        private string _PROVINCIA;

        private string _REGION;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPATERNOChanging(string value);
        partial void OnAPATERNOChanged();
        partial void OnAMATERNOChanging(string value);
        partial void OnAMATERNOChanged();
        partial void OnCORREOChanging(string value);
        partial void OnCORREOChanged();
        partial void OnFONOChanging(decimal value);
        partial void OnFONOChanged();
        partial void OnNombrelocalChanging(string value);
        partial void OnNombrelocalChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnDIRECCIONChanging(string value);
        partial void OnDIRECCIONChanged();
        partial void OnCOMUNAChanging(string value);
        partial void OnCOMUNAChanged();
        partial void OnPROVINCIAChanging(string value);
        partial void OnPROVINCIAChanged();
        partial void OnREGIONChanging(string value);
        partial void OnREGIONChanged();
        #endregion

        public SELECTPRODUCTORESNOMBREResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A PATERNO""", Storage = "_APATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APATERNO
        {
            get
            {
                return this._APATERNO;
            }
            set
            {
                if (this._APATERNO != value)
                {
                    this.OnAPATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._APATERNO = value;
                    this.SendPropertyChanged("APATERNO");
                    this.OnAPATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A MATERNO""", Storage = "_AMATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMATERNO
        {
            get
            {
                return this._AMATERNO;
            }
            set
            {
                if (this._AMATERNO != value)
                {
                    this.OnAMATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._AMATERNO = value;
                    this.SendPropertyChanged("AMATERNO");
                    this.OnAMATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREO in the schema.
        /// </summary>
        [Column(Storage = "_CORREO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREO
        {
            get
            {
                return this._CORREO;
            }
            set
            {
                if (this._CORREO != value)
                {
                    this.OnCORREOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREO = value;
                    this.SendPropertyChanged("CORREO");
                    this.OnCORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONO in the schema.
        /// </summary>
        [Column(Storage = "_FONO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal FONO
        {
            get
            {
                return this._FONO;
            }
            set
            {
                if (this._FONO != value)
                {
                    this.OnFONOChanging(value);
                    this.SendPropertyChanging();
                    this._FONO = value;
                    this.SendPropertyChanged("FONO");
                    this.OnFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombrelocal in the schema.
        /// </summary>
        [Column(Name = @"""Nombre local""", Storage = "_Nombrelocal", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombrelocal
        {
            get
            {
                return this._Nombrelocal;
            }
            set
            {
                if (this._Nombrelocal != value)
                {
                    this.OnNombrelocalChanging(value);
                    this.SendPropertyChanging();
                    this._Nombrelocal = value;
                    this.SendPropertyChanged("Nombrelocal");
                    this.OnNombrelocalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"""Descripcion""", Storage = "_Descripcion", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging();
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIRECCION in the schema.
        /// </summary>
        [Column(Storage = "_DIRECCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIRECCION
        {
            get
            {
                return this._DIRECCION;
            }
            set
            {
                if (this._DIRECCION != value)
                {
                    this.OnDIRECCIONChanging(value);
                    this.SendPropertyChanging();
                    this._DIRECCION = value;
                    this.SendPropertyChanged("DIRECCION");
                    this.OnDIRECCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMUNA in the schema.
        /// </summary>
        [Column(Storage = "_COMUNA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMUNA
        {
            get
            {
                return this._COMUNA;
            }
            set
            {
                if (this._COMUNA != value)
                {
                    this.OnCOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._COMUNA = value;
                    this.SendPropertyChanged("COMUNA");
                    this.OnCOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_PROVINCIA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVINCIA
        {
            get
            {
                return this._PROVINCIA;
            }
            set
            {
                if (this._PROVINCIA != value)
                {
                    this.OnPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._PROVINCIA = value;
                    this.SendPropertyChanged("PROVINCIA");
                    this.OnPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGION in the schema.
        /// </summary>
        [Column(Storage = "_REGION", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGION
        {
            get
            {
                return this._REGION;
            }
            set
            {
                if (this._REGION != value)
                {
                    this.OnREGIONChanging(value);
                    this.SendPropertyChanging();
                    this._REGION = value;
                    this.SendPropertyChanged("REGION");
                    this.OnREGIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTPRODUCTORE2Result in the schema.
    /// </summary>
    public partial class SELECTPRODUCTORE2Result: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _RUT;

        private string _NOMBRE;

        private string _APATERNO;

        private string _AMATERNO;

        private string _CORREO;

        private decimal _FONO;

        private string _Nombrelocal;

        private string _Descripcion;

        private string _DIRECCION;

        private string _COMUNA;

        private string _PROVINCIA;

        private string _REGION;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPATERNOChanging(string value);
        partial void OnAPATERNOChanged();
        partial void OnAMATERNOChanging(string value);
        partial void OnAMATERNOChanged();
        partial void OnCORREOChanging(string value);
        partial void OnCORREOChanged();
        partial void OnFONOChanging(decimal value);
        partial void OnFONOChanged();
        partial void OnNombrelocalChanging(string value);
        partial void OnNombrelocalChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnDIRECCIONChanging(string value);
        partial void OnDIRECCIONChanged();
        partial void OnCOMUNAChanging(string value);
        partial void OnCOMUNAChanged();
        partial void OnPROVINCIAChanging(string value);
        partial void OnPROVINCIAChanged();
        partial void OnREGIONChanging(string value);
        partial void OnREGIONChanged();
        #endregion

        public SELECTPRODUCTORE2Result()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A PATERNO""", Storage = "_APATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APATERNO
        {
            get
            {
                return this._APATERNO;
            }
            set
            {
                if (this._APATERNO != value)
                {
                    this.OnAPATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._APATERNO = value;
                    this.SendPropertyChanged("APATERNO");
                    this.OnAPATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A MATERNO""", Storage = "_AMATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMATERNO
        {
            get
            {
                return this._AMATERNO;
            }
            set
            {
                if (this._AMATERNO != value)
                {
                    this.OnAMATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._AMATERNO = value;
                    this.SendPropertyChanged("AMATERNO");
                    this.OnAMATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREO in the schema.
        /// </summary>
        [Column(Storage = "_CORREO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREO
        {
            get
            {
                return this._CORREO;
            }
            set
            {
                if (this._CORREO != value)
                {
                    this.OnCORREOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREO = value;
                    this.SendPropertyChanged("CORREO");
                    this.OnCORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONO in the schema.
        /// </summary>
        [Column(Storage = "_FONO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal FONO
        {
            get
            {
                return this._FONO;
            }
            set
            {
                if (this._FONO != value)
                {
                    this.OnFONOChanging(value);
                    this.SendPropertyChanging();
                    this._FONO = value;
                    this.SendPropertyChanged("FONO");
                    this.OnFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombrelocal in the schema.
        /// </summary>
        [Column(Name = @"""Nombre local""", Storage = "_Nombrelocal", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombrelocal
        {
            get
            {
                return this._Nombrelocal;
            }
            set
            {
                if (this._Nombrelocal != value)
                {
                    this.OnNombrelocalChanging(value);
                    this.SendPropertyChanging();
                    this._Nombrelocal = value;
                    this.SendPropertyChanged("Nombrelocal");
                    this.OnNombrelocalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"""Descripcion""", Storage = "_Descripcion", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging();
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIRECCION in the schema.
        /// </summary>
        [Column(Storage = "_DIRECCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIRECCION
        {
            get
            {
                return this._DIRECCION;
            }
            set
            {
                if (this._DIRECCION != value)
                {
                    this.OnDIRECCIONChanging(value);
                    this.SendPropertyChanging();
                    this._DIRECCION = value;
                    this.SendPropertyChanged("DIRECCION");
                    this.OnDIRECCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COMUNA in the schema.
        /// </summary>
        [Column(Storage = "_COMUNA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string COMUNA
        {
            get
            {
                return this._COMUNA;
            }
            set
            {
                if (this._COMUNA != value)
                {
                    this.OnCOMUNAChanging(value);
                    this.SendPropertyChanging();
                    this._COMUNA = value;
                    this.SendPropertyChanged("COMUNA");
                    this.OnCOMUNAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PROVINCIA in the schema.
        /// </summary>
        [Column(Storage = "_PROVINCIA", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PROVINCIA
        {
            get
            {
                return this._PROVINCIA;
            }
            set
            {
                if (this._PROVINCIA != value)
                {
                    this.OnPROVINCIAChanging(value);
                    this.SendPropertyChanging();
                    this._PROVINCIA = value;
                    this.SendPropertyChanged("PROVINCIA");
                    this.OnPROVINCIAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for REGION in the schema.
        /// </summary>
        [Column(Storage = "_REGION", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string REGION
        {
            get
            {
                return this._REGION;
            }
            set
            {
                if (this._REGION != value)
                {
                    this.OnREGIONChanging(value);
                    this.SendPropertyChanging();
                    this._REGION = value;
                    this.SendPropertyChanged("REGION");
                    this.OnREGIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for MISPRODUCTOSNOMBREResult in the schema.
    /// </summary>
    public partial class MISPRODUCTOSNOMBREResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CodStock;

        private decimal _CodProducto;

        private string _PRODUCTO;

        private decimal _Stock;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodStockChanging(decimal value);
        partial void OnCodStockChanged();
        partial void OnCodProductoChanging(decimal value);
        partial void OnCodProductoChanged();
        partial void OnPRODUCTOChanging(string value);
        partial void OnPRODUCTOChanged();
        partial void OnStockChanging(decimal value);
        partial void OnStockChanged();
        #endregion

        public MISPRODUCTOSNOMBREResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodStock in the schema.
        /// </summary>
        [Column(Name = @"""cod_stock""", Storage = "_CodStock", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CodStock
        {
            get
            {
                return this._CodStock;
            }
            set
            {
                if (this._CodStock != value)
                {
                    this.OnCodStockChanging(value);
                    this.SendPropertyChanging();
                    this._CodStock = value;
                    this.SendPropertyChanged("CodStock");
                    this.OnCodStockChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodProducto in the schema.
        /// </summary>
        [Column(Name = @"""cod_producto""", Storage = "_CodProducto", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CodProducto
        {
            get
            {
                return this._CodProducto;
            }
            set
            {
                if (this._CodProducto != value)
                {
                    this.OnCodProductoChanging(value);
                    this.SendPropertyChanging();
                    this._CodProducto = value;
                    this.SendPropertyChanged("CodProducto");
                    this.OnCodProductoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_PRODUCTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRODUCTO
        {
            get
            {
                return this._PRODUCTO;
            }
            set
            {
                if (this._PRODUCTO != value)
                {
                    this.OnPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTO = value;
                    this.SendPropertyChanged("PRODUCTO");
                    this.OnPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Stock in the schema.
        /// </summary>
        [Column(Name = @"""stock""", Storage = "_Stock", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Stock
        {
            get
            {
                return this._Stock;
            }
            set
            {
                if (this._Stock != value)
                {
                    this.OnStockChanging(value);
                    this.SendPropertyChanging();
                    this._Stock = value;
                    this.SendPropertyChanged("Stock");
                    this.OnStockChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for MISPRODUCTOResult in the schema.
    /// </summary>
    public partial class MISPRODUCTOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CodStock;

        private string _PRODUCTO;

        private decimal _Stock;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodStockChanging(decimal value);
        partial void OnCodStockChanged();
        partial void OnPRODUCTOChanging(string value);
        partial void OnPRODUCTOChanged();
        partial void OnStockChanging(decimal value);
        partial void OnStockChanged();
        #endregion

        public MISPRODUCTOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodStock in the schema.
        /// </summary>
        [Column(Name = @"""codStock""", Storage = "_CodStock", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CodStock
        {
            get
            {
                return this._CodStock;
            }
            set
            {
                if (this._CodStock != value)
                {
                    this.OnCodStockChanging(value);
                    this.SendPropertyChanging();
                    this._CodStock = value;
                    this.SendPropertyChanged("CodStock");
                    this.OnCodStockChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_PRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string PRODUCTO
        {
            get
            {
                return this._PRODUCTO;
            }
            set
            {
                if (this._PRODUCTO != value)
                {
                    this.OnPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTO = value;
                    this.SendPropertyChanged("PRODUCTO");
                    this.OnPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Stock in the schema.
        /// </summary>
        [Column(Name = @"""stock""", Storage = "_Stock", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Stock
        {
            get
            {
                return this._Stock;
            }
            set
            {
                if (this._Stock != value)
                {
                    this.OnStockChanging(value);
                    this.SendPropertyChanging();
                    this._Stock = value;
                    this.SendPropertyChanged("Stock");
                    this.OnStockChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for IDUSUARIOPORRUTResult in the schema.
    /// </summary>
    public partial class IDUSUARIOPORRUTResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDUSUARIO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDUSUARIOChanging(decimal value);
        partial void OnIDUSUARIOChanged();
        #endregion

        public IDUSUARIOPORRUTResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_IDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDUSUARIO
        {
            get
            {
                return this._IDUSUARIO;
            }
            set
            {
                if (this._IDUSUARIO != value)
                {
                    this.OnIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._IDUSUARIO = value;
                    this.SendPropertyChanged("IDUSUARIO");
                    this.OnIDUSUARIOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BUSCARVALORPRODUCTOResult in the schema.
    /// </summary>
    public partial class BUSCARVALORPRODUCTOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _VALORPRODUCTO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnVALORPRODUCTOChanging(decimal value);
        partial void OnVALORPRODUCTOChanged();
        #endregion

        public BUSCARVALORPRODUCTOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for VALORPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORPRODUCTO
        {
            get
            {
                return this._VALORPRODUCTO;
            }
            set
            {
                if (this._VALORPRODUCTO != value)
                {
                    this.OnVALORPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORPRODUCTO = value;
                    this.SendPropertyChanged("VALORPRODUCTO");
                    this.OnVALORPRODUCTOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTDETBOLPRODResult in the schema.
    /// </summary>
    public partial class SELECTDETBOLPRODResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Nombre;

        private decimal _Cantidad;

        private decimal _Valor;

        private System.Nullable<decimal> _SubTotal;

        private string _Productor;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnCantidadChanging(decimal value);
        partial void OnCantidadChanged();
        partial void OnValorChanging(decimal value);
        partial void OnValorChanged();
        partial void OnSubTotalChanging(System.Nullable<decimal> value);
        partial void OnSubTotalChanged();
        partial void OnProductorChanging(string value);
        partial void OnProductorChanged();
        #endregion

        public SELECTDETBOLPRODResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"""Nombre""", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging();
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cantidad in the schema.
        /// </summary>
        [Column(Name = @"""Cantidad""", Storage = "_Cantidad", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Cantidad
        {
            get
            {
                return this._Cantidad;
            }
            set
            {
                if (this._Cantidad != value)
                {
                    this.OnCantidadChanging(value);
                    this.SendPropertyChanging();
                    this._Cantidad = value;
                    this.SendPropertyChanged("Cantidad");
                    this.OnCantidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Valor in the schema.
        /// </summary>
        [Column(Name = @"""valor""", Storage = "_Valor", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Valor
        {
            get
            {
                return this._Valor;
            }
            set
            {
                if (this._Valor != value)
                {
                    this.OnValorChanging(value);
                    this.SendPropertyChanging();
                    this._Valor = value;
                    this.SendPropertyChanged("Valor");
                    this.OnValorChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SubTotal in the schema.
        /// </summary>
        [Column(Name = @"""subTotal""", Storage = "_SubTotal", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> SubTotal
        {
            get
            {
                return this._SubTotal;
            }
            set
            {
                if (this._SubTotal != value)
                {
                    this.OnSubTotalChanging(value);
                    this.SendPropertyChanging();
                    this._SubTotal = value;
                    this.SendPropertyChanged("SubTotal");
                    this.OnSubTotalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Productor in the schema.
        /// </summary>
        [Column(Name = @"""Productor""", Storage = "_Productor", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Productor
        {
            get
            {
                return this._Productor;
            }
            set
            {
                if (this._Productor != value)
                {
                    this.OnProductorChanging(value);
                    this.SendPropertyChanging();
                    this._Productor = value;
                    this.SendPropertyChanged("Productor");
                    this.OnProductorChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for QUIENESNOPUEDENResult in the schema.
    /// </summary>
    public partial class QUIENESNOPUEDENResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Rut;

        private string _Producto;

        private System.Nullable<decimal> _CuantoFalta;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnRutChanging(string value);
        partial void OnRutChanged();
        partial void OnProductoChanging(string value);
        partial void OnProductoChanged();
        partial void OnCuantoFaltaChanging(System.Nullable<decimal> value);
        partial void OnCuantoFaltaChanged();
        #endregion

        public QUIENESNOPUEDENResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Rut in the schema.
        /// </summary>
        [Column(Name = @"""Rut""", Storage = "_Rut", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Rut
        {
            get
            {
                return this._Rut;
            }
            set
            {
                if (this._Rut != value)
                {
                    this.OnRutChanging(value);
                    this.SendPropertyChanging();
                    this._Rut = value;
                    this.SendPropertyChanged("Rut");
                    this.OnRutChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Producto in the schema.
        /// </summary>
        [Column(Name = @"""Producto""", Storage = "_Producto", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Producto
        {
            get
            {
                return this._Producto;
            }
            set
            {
                if (this._Producto != value)
                {
                    this.OnProductoChanging(value);
                    this.SendPropertyChanging();
                    this._Producto = value;
                    this.SendPropertyChanged("Producto");
                    this.OnProductoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CuantoFalta in the schema.
        /// </summary>
        [Column(Name = @"""CuantoFalta """, Storage = "_CuantoFalta", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> CuantoFalta
        {
            get
            {
                return this._CuantoFalta;
            }
            set
            {
                if (this._CuantoFalta != value)
                {
                    this.OnCuantoFaltaChanging(value);
                    this.SendPropertyChanging();
                    this._CuantoFalta = value;
                    this.SendPropertyChanged("CuantoFalta");
                    this.OnCuantoFaltaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for MOSTRARUSUARIORUTResult in the schema.
    /// </summary>
    public partial class MOSTRARUSUARIORUTResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _ID;

        private string _RUT;

        private string _NOMBRE;

        private string _APATERNO;

        private string _AMATERNO;

        private string _CORREO;

        private decimal _FONO;

        private string _DESCRIPCION;

        private string _ESTADO;

        private decimal _TipoUsuario;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(decimal value);
        partial void OnIDChanged();
        partial void OnRUTChanging(string value);
        partial void OnRUTChanged();
        partial void OnNOMBREChanging(string value);
        partial void OnNOMBREChanged();
        partial void OnAPATERNOChanging(string value);
        partial void OnAPATERNOChanged();
        partial void OnAMATERNOChanging(string value);
        partial void OnAMATERNOChanged();
        partial void OnCORREOChanging(string value);
        partial void OnCORREOChanged();
        partial void OnFONOChanging(decimal value);
        partial void OnFONOChanged();
        partial void OnDESCRIPCIONChanging(string value);
        partial void OnDESCRIPCIONChanged();
        partial void OnESTADOChanging(string value);
        partial void OnESTADOChanged();
        partial void OnTipoUsuarioChanging(decimal value);
        partial void OnTipoUsuarioChanged();
        #endregion

        public MOSTRARUSUARIORUTResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [Column(Storage = "_ID", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if (this._ID != value)
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RUT in the schema.
        /// </summary>
        [Column(Storage = "_RUT", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUT
        {
            get
            {
                return this._RUT;
            }
            set
            {
                if (this._RUT != value)
                {
                    this.OnRUTChanging(value);
                    this.SendPropertyChanging();
                    this._RUT = value;
                    this.SendPropertyChanged("RUT");
                    this.OnRUTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [Column(Storage = "_NOMBRE", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBRE
        {
            get
            {
                return this._NOMBRE;
            }
            set
            {
                if (this._NOMBRE != value)
                {
                    this.OnNOMBREChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBRE = value;
                    this.SendPropertyChanged("NOMBRE");
                    this.OnNOMBREChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for APATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A PATERNO""", Storage = "_APATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string APATERNO
        {
            get
            {
                return this._APATERNO;
            }
            set
            {
                if (this._APATERNO != value)
                {
                    this.OnAPATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._APATERNO = value;
                    this.SendPropertyChanged("APATERNO");
                    this.OnAPATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AMATERNO in the schema.
        /// </summary>
        [Column(Name = @"""A MATERNO""", Storage = "_AMATERNO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string AMATERNO
        {
            get
            {
                return this._AMATERNO;
            }
            set
            {
                if (this._AMATERNO != value)
                {
                    this.OnAMATERNOChanging(value);
                    this.SendPropertyChanging();
                    this._AMATERNO = value;
                    this.SendPropertyChanged("AMATERNO");
                    this.OnAMATERNOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CORREO in the schema.
        /// </summary>
        [Column(Storage = "_CORREO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CORREO
        {
            get
            {
                return this._CORREO;
            }
            set
            {
                if (this._CORREO != value)
                {
                    this.OnCORREOChanging(value);
                    this.SendPropertyChanging();
                    this._CORREO = value;
                    this.SendPropertyChanged("CORREO");
                    this.OnCORREOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FONO in the schema.
        /// </summary>
        [Column(Storage = "_FONO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal FONO
        {
            get
            {
                return this._FONO;
            }
            set
            {
                if (this._FONO != value)
                {
                    this.OnFONOChanging(value);
                    this.SendPropertyChanging();
                    this._FONO = value;
                    this.SendPropertyChanged("FONO");
                    this.OnFONOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCION in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCION", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCION
        {
            get
            {
                return this._DESCRIPCION;
            }
            set
            {
                if (this._DESCRIPCION != value)
                {
                    this.OnDESCRIPCIONChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCION = value;
                    this.SendPropertyChanged("DESCRIPCION");
                    this.OnDESCRIPCIONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADO
        {
            get
            {
                return this._ESTADO;
            }
            set
            {
                if (this._ESTADO != value)
                {
                    this.OnESTADOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADO = value;
                    this.SendPropertyChanged("ESTADO");
                    this.OnESTADOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoUsuario in the schema.
        /// </summary>
        [Column(Name = @"""TipoUsuario""", Storage = "_TipoUsuario", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TipoUsuario
        {
            get
            {
                return this._TipoUsuario;
            }
            set
            {
                if (this._TipoUsuario != value)
                {
                    this.OnTipoUsuarioChanging(value);
                    this.SendPropertyChanging();
                    this._TipoUsuario = value;
                    this.SendPropertyChanged("TipoUsuario");
                    this.OnTipoUsuarioChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for IDUBICACIONPORIDUSUAResult in the schema.
    /// </summary>
    public partial class IDUBICACIONPORIDUSUAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDUBICACION;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDUBICACIONChanging(decimal value);
        partial void OnIDUBICACIONChanged();
        #endregion

        public IDUBICACIONPORIDUSUAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDUBICACION in the schema.
        /// </summary>
        [Column(Storage = "_IDUBICACION", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDUBICACION
        {
            get
            {
                return this._IDUBICACION;
            }
            set
            {
                if (this._IDUBICACION != value)
                {
                    this.OnIDUBICACIONChanging(value);
                    this.SendPropertyChanging();
                    this._IDUBICACION = value;
                    this.SendPropertyChanged("IDUBICACION");
                    this.OnIDUBICACIONChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTUPDATEPRODUCTOResult in the schema.
    /// </summary>
    public partial class SELECTUPDATEPRODUCTOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDPRODUCTO;

        private string _NOMBREPRODUCTO;

        private decimal _VALORPRODUCTO;

        private string _DESCRIPCIONPRODUCTO;

        private string _ESTADOPRODUCTO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDPRODUCTOChanging(decimal value);
        partial void OnIDPRODUCTOChanged();
        partial void OnNOMBREPRODUCTOChanging(string value);
        partial void OnNOMBREPRODUCTOChanged();
        partial void OnVALORPRODUCTOChanging(decimal value);
        partial void OnVALORPRODUCTOChanged();
        partial void OnDESCRIPCIONPRODUCTOChanging(string value);
        partial void OnDESCRIPCIONPRODUCTOChanged();
        partial void OnESTADOPRODUCTOChanging(string value);
        partial void OnESTADOPRODUCTOChanged();
        #endregion

        public SELECTUPDATEPRODUCTOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_IDPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDPRODUCTO
        {
            get
            {
                return this._IDPRODUCTO;
            }
            set
            {
                if (this._IDPRODUCTO != value)
                {
                    this.OnIDPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._IDPRODUCTO = value;
                    this.SendPropertyChanged("IDPRODUCTO");
                    this.OnIDPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPRODUCTO
        {
            get
            {
                return this._NOMBREPRODUCTO;
            }
            set
            {
                if (this._NOMBREPRODUCTO != value)
                {
                    this.OnNOMBREPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPRODUCTO = value;
                    this.SendPropertyChanged("NOMBREPRODUCTO");
                    this.OnNOMBREPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORPRODUCTO
        {
            get
            {
                return this._VALORPRODUCTO;
            }
            set
            {
                if (this._VALORPRODUCTO != value)
                {
                    this.OnVALORPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORPRODUCTO = value;
                    this.SendPropertyChanged("VALORPRODUCTO");
                    this.OnVALORPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCIONPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCIONPRODUCTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCIONPRODUCTO
        {
            get
            {
                return this._DESCRIPCIONPRODUCTO;
            }
            set
            {
                if (this._DESCRIPCIONPRODUCTO != value)
                {
                    this.OnDESCRIPCIONPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCIONPRODUCTO = value;
                    this.SendPropertyChanged("DESCRIPCIONPRODUCTO");
                    this.OnDESCRIPCIONPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADOPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADOPRODUCTO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADOPRODUCTO
        {
            get
            {
                return this._ESTADOPRODUCTO;
            }
            set
            {
                if (this._ESTADOPRODUCTO != value)
                {
                    this.OnESTADOPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADOPRODUCTO = value;
                    this.SendPropertyChanged("ESTADOPRODUCTO");
                    this.OnESTADOPRODUCTOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTDETALLEBOLETA2Result in the schema.
    /// </summary>
    public partial class SELECTDETALLEBOLETA2Result: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDDOCUMENTO;

        private System.DateTime _FECHADOCUMENTO;

        private decimal _VALORTOTALDOCUMENTO;

        private string _RUTUSUARIO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDDOCUMENTOChanging(decimal value);
        partial void OnIDDOCUMENTOChanged();
        partial void OnFECHADOCUMENTOChanging(System.DateTime value);
        partial void OnFECHADOCUMENTOChanged();
        partial void OnVALORTOTALDOCUMENTOChanging(decimal value);
        partial void OnVALORTOTALDOCUMENTOChanged();
        partial void OnRUTUSUARIOChanging(string value);
        partial void OnRUTUSUARIOChanged();
        #endregion

        public SELECTDETALLEBOLETA2Result()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDDOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_IDDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDDOCUMENTO
        {
            get
            {
                return this._IDDOCUMENTO;
            }
            set
            {
                if (this._IDDOCUMENTO != value)
                {
                    this.OnIDDOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._IDDOCUMENTO = value;
                    this.SendPropertyChanged("IDDOCUMENTO");
                    this.OnIDDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FECHADOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_FECHADOCUMENTO", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime FECHADOCUMENTO
        {
            get
            {
                return this._FECHADOCUMENTO;
            }
            set
            {
                if (this._FECHADOCUMENTO != value)
                {
                    this.OnFECHADOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._FECHADOCUMENTO = value;
                    this.SendPropertyChanged("FECHADOCUMENTO");
                    this.OnFECHADOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORTOTALDOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORTOTALDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORTOTALDOCUMENTO
        {
            get
            {
                return this._VALORTOTALDOCUMENTO;
            }
            set
            {
                if (this._VALORTOTALDOCUMENTO != value)
                {
                    this.OnVALORTOTALDOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORTOTALDOCUMENTO = value;
                    this.SendPropertyChanged("VALORTOTALDOCUMENTO");
                    this.OnVALORTOTALDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RUTUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_RUTUSUARIO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUTUSUARIO
        {
            get
            {
                return this._RUTUSUARIO;
            }
            set
            {
                if (this._RUTUSUARIO != value)
                {
                    this.OnRUTUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._RUTUSUARIO = value;
                    this.SendPropertyChanged("RUTUSUARIO");
                    this.OnRUTUSUARIOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTCOMPRARResult in the schema.
    /// </summary>
    public partial class SELECTCOMPRARResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _CANTIDADPEDIDODETALLEDOC;

        private decimal _PRODUCTOIDPRODUCTO;

        private decimal _USUARIOIDUSUARIO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCANTIDADPEDIDODETALLEDOCChanging(decimal value);
        partial void OnCANTIDADPEDIDODETALLEDOCChanged();
        partial void OnPRODUCTOIDPRODUCTOChanging(decimal value);
        partial void OnPRODUCTOIDPRODUCTOChanged();
        partial void OnUSUARIOIDUSUARIOChanging(decimal value);
        partial void OnUSUARIOIDUSUARIOChanged();
        #endregion

        public SELECTCOMPRARResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CANTIDADPEDIDODETALLEDOC in the schema.
        /// </summary>
        [Column(Storage = "_CANTIDADPEDIDODETALLEDOC", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CANTIDADPEDIDODETALLEDOC
        {
            get
            {
                return this._CANTIDADPEDIDODETALLEDOC;
            }
            set
            {
                if (this._CANTIDADPEDIDODETALLEDOC != value)
                {
                    this.OnCANTIDADPEDIDODETALLEDOCChanging(value);
                    this.SendPropertyChanging();
                    this._CANTIDADPEDIDODETALLEDOC = value;
                    this.SendPropertyChanged("CANTIDADPEDIDODETALLEDOC");
                    this.OnCANTIDADPEDIDODETALLEDOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PRODUCTOIDPRODUCTO in the schema.
        /// </summary>
        [Column(Name = @"PRODUCTO_IDPRODUCTO", Storage = "_PRODUCTOIDPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal PRODUCTOIDPRODUCTO
        {
            get
            {
                return this._PRODUCTOIDPRODUCTO;
            }
            set
            {
                if (this._PRODUCTOIDPRODUCTO != value)
                {
                    this.OnPRODUCTOIDPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._PRODUCTOIDPRODUCTO = value;
                    this.SendPropertyChanged("PRODUCTOIDPRODUCTO");
                    this.OnPRODUCTOIDPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOIDUSUARIO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_IDUSUARIO", Storage = "_USUARIOIDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal USUARIOIDUSUARIO
        {
            get
            {
                return this._USUARIOIDUSUARIO;
            }
            set
            {
                if (this._USUARIOIDUSUARIO != value)
                {
                    this.OnUSUARIOIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOIDUSUARIO = value;
                    this.SendPropertyChanged("USUARIOIDUSUARIO");
                    this.OnUSUARIOIDUSUARIOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for ESTAENELSTOCKResult in the schema.
    /// </summary>
    public partial class ESTAENELSTOCKResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _NOMBREPRODUCTO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNOMBREPRODUCTOChanging(string value);
        partial void OnNOMBREPRODUCTOChanged();
        #endregion

        public ESTAENELSTOCKResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for NOMBREPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPRODUCTO
        {
            get
            {
                return this._NOMBREPRODUCTO;
            }
            set
            {
                if (this._NOMBREPRODUCTO != value)
                {
                    this.OnNOMBREPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPRODUCTO = value;
                    this.SendPropertyChanged("NOMBREPRODUCTO");
                    this.OnNOMBREPRODUCTOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for VERDEALLEBOLETAResult in the schema.
    /// </summary>
    public partial class VERDEALLEBOLETAResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Producto;

        private decimal _Cantidad;

        private decimal _Valor;

        private System.Nullable<decimal> _Subtotal;

        private string _Rut;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnProductoChanging(string value);
        partial void OnProductoChanged();
        partial void OnCantidadChanging(decimal value);
        partial void OnCantidadChanged();
        partial void OnValorChanging(decimal value);
        partial void OnValorChanged();
        partial void OnSubtotalChanging(System.Nullable<decimal> value);
        partial void OnSubtotalChanged();
        partial void OnRutChanging(string value);
        partial void OnRutChanged();
        #endregion

        public VERDEALLEBOLETAResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Producto in the schema.
        /// </summary>
        [Column(Name = @"""producto""", Storage = "_Producto", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Producto
        {
            get
            {
                return this._Producto;
            }
            set
            {
                if (this._Producto != value)
                {
                    this.OnProductoChanging(value);
                    this.SendPropertyChanging();
                    this._Producto = value;
                    this.SendPropertyChanged("Producto");
                    this.OnProductoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cantidad in the schema.
        /// </summary>
        [Column(Name = @"""Cantidad""", Storage = "_Cantidad", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Cantidad
        {
            get
            {
                return this._Cantidad;
            }
            set
            {
                if (this._Cantidad != value)
                {
                    this.OnCantidadChanging(value);
                    this.SendPropertyChanging();
                    this._Cantidad = value;
                    this.SendPropertyChanged("Cantidad");
                    this.OnCantidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Valor in the schema.
        /// </summary>
        [Column(Name = @"""Valor""", Storage = "_Valor", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal Valor
        {
            get
            {
                return this._Valor;
            }
            set
            {
                if (this._Valor != value)
                {
                    this.OnValorChanging(value);
                    this.SendPropertyChanging();
                    this._Valor = value;
                    this.SendPropertyChanged("Valor");
                    this.OnValorChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Subtotal in the schema.
        /// </summary>
        [Column(Name = @"""subtotal""", Storage = "_Subtotal", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> Subtotal
        {
            get
            {
                return this._Subtotal;
            }
            set
            {
                if (this._Subtotal != value)
                {
                    this.OnSubtotalChanging(value);
                    this.SendPropertyChanging();
                    this._Subtotal = value;
                    this.SendPropertyChanged("Subtotal");
                    this.OnSubtotalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Rut in the schema.
        /// </summary>
        [Column(Name = @"""rut""", Storage = "_Rut", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Rut
        {
            get
            {
                return this._Rut;
            }
            set
            {
                if (this._Rut != value)
                {
                    this.OnRutChanging(value);
                    this.SendPropertyChanging();
                    this._Rut = value;
                    this.SendPropertyChanged("Rut");
                    this.OnRutChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for SELECTUPDATECARROResult in the schema.
    /// </summary>
    public partial class SELECTUPDATECARROResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _NOMBREPRODUCTO;

        private decimal _VALORPRODUCTO;

        private decimal _CANTIDADPEDIDODETALLEDOC;

        private decimal _STOCKPRODUCTOPRODUCTOR;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNOMBREPRODUCTOChanging(string value);
        partial void OnNOMBREPRODUCTOChanged();
        partial void OnVALORPRODUCTOChanging(decimal value);
        partial void OnVALORPRODUCTOChanged();
        partial void OnCANTIDADPEDIDODETALLEDOCChanging(decimal value);
        partial void OnCANTIDADPEDIDODETALLEDOCChanged();
        partial void OnSTOCKPRODUCTOPRODUCTORChanging(decimal value);
        partial void OnSTOCKPRODUCTOPRODUCTORChanged();
        #endregion

        public SELECTUPDATECARROResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for NOMBREPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPRODUCTO
        {
            get
            {
                return this._NOMBREPRODUCTO;
            }
            set
            {
                if (this._NOMBREPRODUCTO != value)
                {
                    this.OnNOMBREPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPRODUCTO = value;
                    this.SendPropertyChanged("NOMBREPRODUCTO");
                    this.OnNOMBREPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORPRODUCTO
        {
            get
            {
                return this._VALORPRODUCTO;
            }
            set
            {
                if (this._VALORPRODUCTO != value)
                {
                    this.OnVALORPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORPRODUCTO = value;
                    this.SendPropertyChanged("VALORPRODUCTO");
                    this.OnVALORPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CANTIDADPEDIDODETALLEDOC in the schema.
        /// </summary>
        [Column(Storage = "_CANTIDADPEDIDODETALLEDOC", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal CANTIDADPEDIDODETALLEDOC
        {
            get
            {
                return this._CANTIDADPEDIDODETALLEDOC;
            }
            set
            {
                if (this._CANTIDADPEDIDODETALLEDOC != value)
                {
                    this.OnCANTIDADPEDIDODETALLEDOCChanging(value);
                    this.SendPropertyChanging();
                    this._CANTIDADPEDIDODETALLEDOC = value;
                    this.SendPropertyChanged("CANTIDADPEDIDODETALLEDOC");
                    this.OnCANTIDADPEDIDODETALLEDOCChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for STOCKPRODUCTOPRODUCTOR in the schema.
        /// </summary>
        [Column(Storage = "_STOCKPRODUCTOPRODUCTOR", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal STOCKPRODUCTOPRODUCTOR
        {
            get
            {
                return this._STOCKPRODUCTOPRODUCTOR;
            }
            set
            {
                if (this._STOCKPRODUCTOPRODUCTOR != value)
                {
                    this.OnSTOCKPRODUCTOPRODUCTORChanging(value);
                    this.SendPropertyChanging();
                    this._STOCKPRODUCTOPRODUCTOR = value;
                    this.SendPropertyChanged("STOCKPRODUCTOPRODUCTOR");
                    this.OnSTOCKPRODUCTOPRODUCTORChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for ESTAENELCARROResult in the schema.
    /// </summary>
    public partial class ESTAENELCARROResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _NOMBREPRODUCTO;

        private string _RUTUSUARIO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNOMBREPRODUCTOChanging(string value);
        partial void OnNOMBREPRODUCTOChanged();
        partial void OnRUTUSUARIOChanging(string value);
        partial void OnRUTUSUARIOChanged();
        #endregion

        public ESTAENELCARROResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for NOMBREPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPRODUCTO
        {
            get
            {
                return this._NOMBREPRODUCTO;
            }
            set
            {
                if (this._NOMBREPRODUCTO != value)
                {
                    this.OnNOMBREPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPRODUCTO = value;
                    this.SendPropertyChanged("NOMBREPRODUCTO");
                    this.OnNOMBREPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RUTUSUARIO in the schema.
        /// </summary>
        [Column(Storage = "_RUTUSUARIO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RUTUSUARIO
        {
            get
            {
                return this._RUTUSUARIO;
            }
            set
            {
                if (this._RUTUSUARIO != value)
                {
                    this.OnRUTUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._RUTUSUARIO = value;
                    this.SendPropertyChanged("RUTUSUARIO");
                    this.OnRUTUSUARIOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for BUSCARBOLETAPORIDResult in the schema.
    /// </summary>
    public partial class BUSCARBOLETAPORIDResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDDOCUMENTO;

        private decimal _VALORTOTALDOCUMENTO;

        private decimal _TIPOODOCUMENTO;

        private decimal _USUARIOIDUSUARIO;

        private string _ESTADODOCUMENTO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDDOCUMENTOChanging(decimal value);
        partial void OnIDDOCUMENTOChanged();
        partial void OnVALORTOTALDOCUMENTOChanging(decimal value);
        partial void OnVALORTOTALDOCUMENTOChanged();
        partial void OnTIPOODOCUMENTOChanging(decimal value);
        partial void OnTIPOODOCUMENTOChanged();
        partial void OnUSUARIOIDUSUARIOChanging(decimal value);
        partial void OnUSUARIOIDUSUARIOChanged();
        partial void OnESTADODOCUMENTOChanging(string value);
        partial void OnESTADODOCUMENTOChanged();
        #endregion

        public BUSCARBOLETAPORIDResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDDOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_IDDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDDOCUMENTO
        {
            get
            {
                return this._IDDOCUMENTO;
            }
            set
            {
                if (this._IDDOCUMENTO != value)
                {
                    this.OnIDDOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._IDDOCUMENTO = value;
                    this.SendPropertyChanged("IDDOCUMENTO");
                    this.OnIDDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORTOTALDOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORTOTALDOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORTOTALDOCUMENTO
        {
            get
            {
                return this._VALORTOTALDOCUMENTO;
            }
            set
            {
                if (this._VALORTOTALDOCUMENTO != value)
                {
                    this.OnVALORTOTALDOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORTOTALDOCUMENTO = value;
                    this.SendPropertyChanged("VALORTOTALDOCUMENTO");
                    this.OnVALORTOTALDOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TIPOODOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_TIPOODOCUMENTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal TIPOODOCUMENTO
        {
            get
            {
                return this._TIPOODOCUMENTO;
            }
            set
            {
                if (this._TIPOODOCUMENTO != value)
                {
                    this.OnTIPOODOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._TIPOODOCUMENTO = value;
                    this.SendPropertyChanged("TIPOODOCUMENTO");
                    this.OnTIPOODOCUMENTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for USUARIOIDUSUARIO in the schema.
        /// </summary>
        [Column(Name = @"USUARIO_IDUSUARIO", Storage = "_USUARIOIDUSUARIO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal USUARIOIDUSUARIO
        {
            get
            {
                return this._USUARIOIDUSUARIO;
            }
            set
            {
                if (this._USUARIOIDUSUARIO != value)
                {
                    this.OnUSUARIOIDUSUARIOChanging(value);
                    this.SendPropertyChanging();
                    this._USUARIOIDUSUARIO = value;
                    this.SendPropertyChanged("USUARIOIDUSUARIO");
                    this.OnUSUARIOIDUSUARIOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADODOCUMENTO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADODOCUMENTO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADODOCUMENTO
        {
            get
            {
                return this._ESTADODOCUMENTO;
            }
            set
            {
                if (this._ESTADODOCUMENTO != value)
                {
                    this.OnESTADODOCUMENTOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADODOCUMENTO = value;
                    this.SendPropertyChanged("ESTADODOCUMENTO");
                    this.OnESTADODOCUMENTOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for LISTARPRODUCTOResult in the schema.
    /// </summary>
    public partial class LISTARPRODUCTOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _IDPRODUCTO;

        private string _NOMBREPRODUCTO;

        private string _DESCRIPCIONPRODUCTO;

        private decimal _VALORPRODUCTO;

        private string _ESTADOPRODUCTO;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIDPRODUCTOChanging(decimal value);
        partial void OnIDPRODUCTOChanged();
        partial void OnNOMBREPRODUCTOChanging(string value);
        partial void OnNOMBREPRODUCTOChanged();
        partial void OnDESCRIPCIONPRODUCTOChanging(string value);
        partial void OnDESCRIPCIONPRODUCTOChanged();
        partial void OnVALORPRODUCTOChanging(decimal value);
        partial void OnVALORPRODUCTOChanged();
        partial void OnESTADOPRODUCTOChanging(string value);
        partial void OnESTADOPRODUCTOChanged();
        #endregion

        public LISTARPRODUCTOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for IDPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_IDPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal IDPRODUCTO
        {
            get
            {
                return this._IDPRODUCTO;
            }
            set
            {
                if (this._IDPRODUCTO != value)
                {
                    this.OnIDPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._IDPRODUCTO = value;
                    this.SendPropertyChanged("IDPRODUCTO");
                    this.OnIDPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NOMBREPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_NOMBREPRODUCTO", CanBeNull = false, DbType = "VARCHAR2(4000 CHAR) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string NOMBREPRODUCTO
        {
            get
            {
                return this._NOMBREPRODUCTO;
            }
            set
            {
                if (this._NOMBREPRODUCTO != value)
                {
                    this.OnNOMBREPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._NOMBREPRODUCTO = value;
                    this.SendPropertyChanged("NOMBREPRODUCTO");
                    this.OnNOMBREPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DESCRIPCIONPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_DESCRIPCIONPRODUCTO", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DESCRIPCIONPRODUCTO
        {
            get
            {
                return this._DESCRIPCIONPRODUCTO;
            }
            set
            {
                if (this._DESCRIPCIONPRODUCTO != value)
                {
                    this.OnDESCRIPCIONPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._DESCRIPCIONPRODUCTO = value;
                    this.SendPropertyChanged("DESCRIPCIONPRODUCTO");
                    this.OnDESCRIPCIONPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for VALORPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_VALORPRODUCTO", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal VALORPRODUCTO
        {
            get
            {
                return this._VALORPRODUCTO;
            }
            set
            {
                if (this._VALORPRODUCTO != value)
                {
                    this.OnVALORPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._VALORPRODUCTO = value;
                    this.SendPropertyChanged("VALORPRODUCTO");
                    this.OnVALORPRODUCTOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ESTADOPRODUCTO in the schema.
        /// </summary>
        [Column(Storage = "_ESTADOPRODUCTO", CanBeNull = false, DbType = "CHAR(2000) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string ESTADOPRODUCTO
        {
            get
            {
                return this._ESTADOPRODUCTO;
            }
            set
            {
                if (this._ESTADOPRODUCTO != value)
                {
                    this.OnESTADOPRODUCTOChanging(value);
                    this.SendPropertyChanging();
                    this._ESTADOPRODUCTO = value;
                    this.SendPropertyChanged("ESTADOPRODUCTO");
                    this.OnESTADOPRODUCTOChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
